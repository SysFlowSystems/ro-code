{"prompt": "Generate procedural horror rooms with atmospheric tension", "completion": "-- ServerScriptService/ProceduralRooms.server.lua\nlocal TweenService = game:GetService('TweenService')\nlocal roomTemplates = {\n    {name='Corridor', size=Vector3.new(20,8,8), lighting=Color3.fromRGB(15,15,20)},\n    {name='Chamber', size=Vector3.new(15,10,15), lighting=Color3.fromRGB(10,10,15)},\n    {name='Passage', size=Vector3.new(12,6,25), lighting=Color3.fromRGB(20,15,15)}\n}\n\nlocal function createRoom(position, template)\n    local room = Instance.new('Part')\n    room.Size = template.size\n    room.Position = position\n    room.Material = Enum.Material.Slate\n    room.BrickColor = BrickColor.new('Really black')\n    room.Anchored = true\n    room.Parent = workspace\n    \n    -- Atmospheric lighting\n    local light = Instance.new('PointLight', room)\n    light.Color = template.lighting\n    light.Range = math.max(template.size.X, template.size.Z)\n    light.Brightness = 0.3\n    \n    -- Fog variation\n    local fog = Instance.new('Atmosphere', workspace)\n    fog.Density = math.random(5,15)/100\n    fog.Offset = math.random(0,10)/100\n    fog.Color = Color3.fromRGB(17,17,22)\n    \n    return room\nend\n\n-- Generate procedural layout\nfor i = 1, 8 do\n    local pos = Vector3.new(i*25, 0, math.random(-20,20))\n    local template = roomTemplates[math.random(1,#roomTemplates)]\n    createRoom(pos, template)\nend\n"}
{"prompt": "Create monster patrol AI that adapts to any environment", "completion": "-- ServerScriptService/AdaptiveMonsterAI.server.lua\nlocal PathfindingService = game:GetService('PathfindingService')\nlocal RunService = game:GetService('RunService')\nlocal monster = workspace:WaitForChild('Monster')\nlocal humanoid = monster:WaitForChild('Humanoid')\n\nlocal AI_STATES = {\n    PATROL = 'patrol',\n    INVESTIGATE = 'investigate',\n    CHASE = 'chase',\n    SEARCH = 'search'\n}\n\nlocal currentState = AI_STATES.PATROL\nlocal waypoints = {}\nlocal targetPlayer = nil\nlocal lastKnownPosition = nil\nlocal stateTimer = 0\n\n-- Environment detection\nlocal function detectEnvironment()\n    local env = {\n        isIndoor = false,\n        hasCover = false,\n        isDark = false,\n        hasEcho = false\n    }\n    \n    -- Check if indoors (raycast up)\n    local ray = Ray.new(monster.PrimaryPart.Position, Vector3.new(0,50,0))\n    local hit = workspace:FindPartOnRay(ray)\n    env.isIndoor = hit and hit.Position.Y < monster.PrimaryPart.Position.Y + 30\n    \n    -- Check for cover objects\n    local nearbyParts = workspace:GetPartsInPart(monster.PrimaryPart)\n    for _, part in ipairs(nearbyParts) do\n        if part.Size.Y > 2 and part ~= monster.PrimaryPart then\n            env.hasCover = true\n            break\n        end\n    end\n    \n    -- Check lighting\n    local lighting = game:GetService('Lighting')\n    env.isDark = lighting.Ambient.R < 0.2\n    \n    return env\nend\n\n-- Adaptive behavior based on environment\nlocal function updateBehavior()\n    local env = detectEnvironment()\n    \n    if env.isIndoor then\n        humanoid.WalkSpeed = 12\n        humanoid.JumpPower = 0\n    else\n        humanoid.WalkSpeed = 16\n        humanoid.JumpPower = 50\n    end\n    \n    if env.hasCover then\n        -- Use cover for stealth approach\n        if currentState == AI_STATES.PATROL then\n            currentState = AI_STATES.INVESTIGATE\n        end\n    end\n    \n    if env.isDark then\n        -- Enhanced hearing in darkness\n        humanoid.HipHeight = 0\n    else\n        humanoid.HipHeight = 2\n    end\nend\n\n-- Main AI loop\nRunService.Heartbeat:Connect(function(deltaTime)\n    stateTimer = stateTimer + deltaTime\n    updateBehavior()\n    \n    if currentState == AI_STATES.PATROL then\n        -- Random patrol with environment awareness\n        if stateTimer > 5 or humanoid.MoveToFinished:Wait() then\n            local randomPos = Vector3.new(\n                math.random(-100,100),\n                0,\n                math.random(-100,100)\n            )\n            humanoid:MoveTo(randomPos)\n            stateTimer = 0\n        end\n    elseif currentState == AI_STATES.CHASE then\n        -- Chase with pathfinding\n        if targetPlayer and targetPlayer.Character then\n            local path = PathfindingService:CreatePath({\n                AgentRadius = 2,\n                AgentHeight = 5,\n                AgentCanJump = true\n            })\n            \n            path:ComputeAsync(monster.PrimaryPart.Position, targetPlayer.Character.PrimaryPart.Position)\n            if path.Status == Enum.PathStatus.Success then\n                local waypoints = path:GetWaypoints()\n                for _, waypoint in ipairs(waypoints) do\n                    humanoid:MoveTo(waypoint.Position)\n                    humanoid.MoveToFinished:Wait()\n                end\n            end\n        end\n    end\nend)\n"}
{"prompt": "Generate horror game with intelligent entity behavior", "completion": "-- ServerScriptService/IntelligentHorrorEntity.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal monster = workspace:WaitForChild('Monster')\nlocal humanoid = monster:WaitForChild('Humanoid')\nlocal rootPart = monster:WaitForChild('HumanoidRootPart')\n\nlocal ENTITY_STATES = {\n    IDLE = 'idle',\n    HUNT = 'hunt',\n    STALK = 'stalk',\n    AMBUSH = 'ambush',\n    RETREAT = 'retreat'\n}\n\nlocal currentState = ENTITY_STATES.IDLE\nlocal targetPlayer = nil\nlocal fearLevel = 0\nlocal lastAttackTime = 0\nlocal stalkingTimer = 0\n\n-- Intelligence system\nlocal function calculateThreatLevel(player)\n    local threat = 0\n    local char = player.Character\n    if not char then return 0 end\n    \n    local hrp = char:FindFirstChild('HumanoidRootPart')\n    if not hrp then return 0 end\n    \n    -- Distance factor\n    local distance = (hrp.Position - rootPart.Position).Magnitude\n    threat = threat + (100 - distance) / 10\n    \n    -- Player health factor\n    local playerHum = char:FindFirstChild('Humanoid')\n    if playerHum then\n        threat = threat + (100 - playerHum.Health) / 20\n    end\n    \n    -- Player weapon factor\n    local tools = char:GetChildren()\n    for _, tool in ipairs(tools) do\n        if tool:IsA('Tool') then\n            threat = threat + 15\n            break\n        end\n    end\n    \n    return math.max(0, threat)\nend\n\n-- Adaptive behavior based on threat\nlocal function updateEntityBehavior()\n    local highestThreat = 0\n    local bestTarget = nil\n    \n    -- Find best target\n    for _, player in ipairs(Players:GetPlayers()) do\n        local threat = calculateThreatLevel(player)\n        if threat > highestThreat then\n            highestThreat = threat\n            bestTarget = player\n        end\n    end\n    \n    -- State machine logic\n    if highestThreat > 80 then\n        if currentState ~= ENTITY_STATES.RETREAT then\n            currentState = ENTITY_STATES.RETREAT\n            fearLevel = fearLevel + 20\n        end\n    elseif highestThreat > 60 then\n        if currentState ~= ENTITY_STATES.AMBUSH then\n            currentState = ENTITY_STATES.AMBUSH\n            stalkingTimer = 0\n        end\n    elseif highestThreat > 40 then\n        if currentState ~= ENTITY_STATES.STALK then\n            currentState = ENTITY_STATES.STALK\n        end\n    elseif highestThreat > 20 then\n        if currentState ~= ENTITY_STATES.HUNT then\n            currentState = ENTITY_STATES.HUNT\n        end\n    else\n        currentState = ENTITY_STATES.IDLE\n    end\n    \n    targetPlayer = bestTarget\nend\n\n-- State-specific behaviors\nlocal function executeStateBehavior()\n    if currentState == ENTITY_STATES.IDLE then\n        -- Random idle movement\n        humanoid.WalkSpeed = 8\n        if stalkingTimer > 3 then\n            local randomPos = Vector3.new(\n                math.random(-50,50),\n                0,\n                math.random(-50,50)\n            )\n            humanoid:MoveTo(rootPart.Position + randomPos)\n            stalkingTimer = 0\n        end\n        \n    elseif currentState == ENTITY_STATES.HUNT then\n        -- Aggressive pursuit\n        humanoid.WalkSpeed = 18\n        if targetPlayer and targetPlayer.Character then\n            local targetPos = targetPlayer.Character.PrimaryPart.Position\n            humanoid:MoveTo(targetPos)\n            \n            -- Attack if close\n            local distance = (targetPos - rootPart.Position).Magnitude\n            if distance < 5 and tick() - lastAttackTime > 2 then\n                local playerHum = targetPlayer.Character:FindFirstChild('Humanoid')\n                if playerHum then\n                    playerHum.Health = playerHum.Health - 25\n                    lastAttackTime = tick()\n                end\n            end\n        end\n        \n    elseif currentState == ENTITY_STATES.STALK then\n        -- Stealth approach\n        humanoid.WalkSpeed = 6\n        if targetPlayer and targetPlayer.Character then\n            local targetPos = targetPlayer.Character.PrimaryPart.Position\n            local direction = (targetPos - rootPart.Position).Unit\n            local stalkPos = targetPos - direction * 15\n            \n            -- Use cover if available\n            local ray = Ray.new(stalkPos, Vector3.new(0,-10,0))\n            local hit = workspace:FindPartOnRay(ray)\n            if hit then\n                humanoid:MoveTo(stalkPos)\n            end\n        end\n        \n    elseif currentState == ENTITY_STATES.AMBUSH then\n        -- Set up ambush\n        humanoid.WalkSpeed = 12\n        if targetPlayer and targetPlayer.Character then\n            local targetPos = targetPlayer.Character.PrimaryPart.Position\n            local ambushPos = targetPos + Vector3.new(\n                math.random(-20,20),\n                0,\n                math.random(-20,20)\n            )\n            \n            humanoid:MoveTo(ambushPos)\n            stalkingTimer = stalkingTimer + 1\n            \n            -- Execute ambush\n            if stalkingTimer > 5 then\n                currentState = ENTITY_STATES.HUNT\n                stalkingTimer = 0\n            end\n        end\n        \n    elseif currentState == ENTITY_STATES.RETREAT then\n        -- Flee from high threat\n        humanoid.WalkSpeed = 20\n        if targetPlayer and targetPlayer.Character then\n            local targetPos = targetPlayer.Character.PrimaryPart.Position\n            local fleeDirection = (rootPart.Position - targetPos).Unit\n            local fleePos = rootPart.Position + fleeDirection * 30\n            \n            humanoid:MoveTo(fleePos)\n            fearLevel = math.max(0, fearLevel - 1)\n            \n            if fearLevel < 10 then\n                currentState = ENTITY_STATES.IDLE\n            end\n        end\n    end\nend\n\n-- Main update loop\nRunService.Heartbeat:Connect(function(deltaTime)\n    stalkingTimer = stalkingTimer + deltaTime\n    updateEntityBehavior()\n    executeStateBehavior()\nend)\n"}
{"prompt": "Create atmospheric horror with dynamic lighting and sound", "completion": "-- ServerScriptService/AtmosphericHorror.server.lua\nlocal Lighting = game:GetService('Lighting')\nlocal SoundService = game:GetService('SoundService')\nlocal RunService = game:GetService('RunService')\nlocal TweenService = game:GetService('TweenService')\n\n-- Dynamic lighting system\nlocal function setupDynamicLighting()\n    -- Base horror atmosphere\n    Lighting.Ambient = Color3.fromRGB(15, 15, 20)\n    Lighting.OutdoorAmbient = Color3.fromRGB(8, 8, 12)\n    Lighting.FogStart = 25\n    Lighting.FogEnd = 150\n    Lighting.FogColor = Color3.fromRGB(12, 12, 18)\n    \n    -- Color correction for horror mood\n    local colorCorrection = Instance.new('ColorCorrectionEffect', Lighting)\n    colorCorrection.Brightness = -0.1\n    colorCorrection.Saturation = -0.3\n    colorCorrection.Contrast = 0.2\n    colorCorrection.TintColor = Color3.fromRGB(100, 90, 120)\n    \n    -- Bloom for eerie glow\n    local bloom = Instance.new('BloomEffect', Lighting)\n    bloom.Intensity = 0.15\n    bloom.Size = 8\n    bloom.Threshold = 0.8\n    \n    -- Depth of field for focus\n    local depthOfField = Instance.new('DepthOfFieldEffect', Lighting)\n    depthOfField.FarIntensity = 0.6\n    depthOfField.InFocusRadius = 25\n    depthOfField.NearIntensity = 0.2\n    \n    -- Sun rays for dramatic shadows\n    local sunRays = Instance.new('SunRaysEffect', Lighting)\n    sunRays.Intensity = 0.1\n    sunRays.Spread = 0.8\n    \n    return {colorCorrection, bloom, depthOfField, sunRays}\nend\n\n-- Dynamic sound system\nlocal function setupDynamicSound()\n    local ambientSounds = {\n        {name='Wind', volume=0.3, pitch=0.8, loop=true},\n        {name='Creaking', volume=0.2, pitch=1.0, loop=false},\n        {name='Dripping', volume=0.15, pitch=1.2, loop=false},\n        {name='Footsteps', volume=0.25, pitch=0.9, loop=false}\n    }\n    \n    local soundInstances = {}\n    \n    for _, soundData in ipairs(ambientSounds) do\n        local sound = Instance.new('Sound')\n        sound.Name = soundData.name\n        sound.Volume = soundData.volume\n        sound.Pitch = soundData.pitch\n        sound.Looped = soundData.loop\n        sound.Parent = SoundService\n        \n        -- Randomize timing for non-looping sounds\n        if not soundData.loop then\n            spawn(function()\n                while true do\n                    local waitTime = math.random(10, 30)\n                    task.wait(waitTime)\n                    sound:Play()\n                    task.wait(sound.TimeLength)\n                end\n            end)\n        else\n            sound:Play()\n        end\n        \n        table.insert(soundInstances, sound)\n    end\n    \n    return soundInstances\nend\n\n-- Dynamic lighting changes\nlocal function createLightingEvents()\n    local effects = setupDynamicLighting()\n    local sounds = setupDynamicSound()\n    \n    -- Random flickering\n    spawn(function()\n        while true do\n            task.wait(math.random(15, 45))\n            \n            -- Flicker effect\n            local originalAmbient = Lighting.Ambient\n            local flickerTween = TweenService:Create(\n                Lighting,\n                TweenInfo.new(0.1, Enum.EasingStyle.Linear),\n                {Ambient = Color3.fromRGB(25, 25, 30)}\n            )\n            \n            flickerTween:Play()\n            flickerTween.Completed:Wait()\n            \n            local restoreTween = TweenService:Create(\n                Lighting,\n                TweenInfo.new(0.2, Enum.EasingStyle.Linear),\n                {Ambient = originalAmbient}\n            )\n            restoreTween:Play()\n        end\n    end)\n    \n    -- Dynamic fog changes\n    spawn(function()\n        while true do\n            task.wait(math.random(20, 60))\n            \n            local newFogEnd = math.random(80, 200)\n            local fogTween = TweenService:Create(\n                Lighting,\n                TweenInfo.new(8, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut),\n                {FogEnd = newFogEnd}\n            )\n            fogTween:Play()\n        end\n    end)\n    \n    -- Color temperature shifts\n    spawn(function()\n        while true do\n            task.wait(math.random(30, 90))\n            \n            local newTint = Color3.fromRGB(\n                math.random(80, 120),\n                math.random(70, 110),\n                math.random(100, 140)\n            )\n            \n            local tintTween = TweenService:Create(\n                effects[1],\n                TweenInfo.new(10, Enum.EasingStyle.Sine),\n                {TintColor = newTint}\n            )\n            tintTween:Play()\n        end\n    end)\nend\n\n-- Initialize atmosphere\ncreateLightingEvents()\n"}
{"prompt": "Build player fear system with sanity mechanics", "completion": "-- StarterPlayerScripts/FearSystem.client.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal TweenService = game:GetService('TweenService')\nlocal UserInputService = game:GetService('UserInputService')\nlocal Camera = workspace.CurrentCamera\n\nlocal player = Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:Wait()\nlocal humanoid = character:WaitForChild('Humanoid')\nlocal rootPart = character:WaitForChild('HumanoidRootPart')\n\n-- Fear system variables\nlocal sanity = 100\nlocal fearLevel = 0\nlocal isInDarkness = false\nlocal nearbyMonsters = 0\nlocal lastScareTime = 0\n\n-- Fear effects\nlocal function createFearEffects()\n    local screenGui = Instance.new('ScreenGui', player:WaitForChild('PlayerGui'))\n    screenGui.Name = 'FearEffects'\n    \n    -- Heartbeat overlay\n    local heartbeat = Instance.new('Frame', screenGui)\n    heartbeat.Name = 'Heartbeat'\n    heartbeat.Size = UDim2.new(1, 0, 1, 0)\n    heartbeat.BackgroundTransparency = 1\n    heartbeat.ZIndex = 10\n    \n    local heartbeatImage = Instance.new('ImageLabel', heartbeat)\n    heartbeatImage.Size = UDim2.new(0.3, 0, 0.3, 0)\n    heartbeatImage.Position = UDim2.new(0.35, 0, 0.35, 0)\n    heartbeatImage.BackgroundTransparency = 1\n    heartbeatImage.Image = 'rbxassetid://0' -- Replace with heartbeat image\n    heartbeatImage.ImageTransparency = 1\n    \n    -- Vignette effect\n    local vignette = Instance.new('Frame', screenGui)\n    vignette.Name = 'Vignette'\n    vignette.Size = UDim2.new(1, 0, 1, 0)\n    vignette.BackgroundColor3 = Color3.new(0, 0, 0)\n    vignette.BackgroundTransparency = 0.8\n    vignette.ZIndex = 5\n    \n    -- Blur effect\n    local blur = Instance.new('BlurEffect', game:GetService('Lighting'))\n    blur.Size = 0\n    blur.Enabled = false\n    \n    return {screenGui, heartbeat, heartbeatImage, vignette, blur}\nend\n\n-- Update fear level based on environment\nlocal function updateFearLevel()\n    local newFearLevel = 0\n    \n    -- Darkness factor\n    if isInDarkness then\n        newFearLevel = newFearLevel + 25\n    end\n    \n    -- Monster proximity factor\n    newFearLevel = newFearLevel + (nearbyMonsters * 15)\n    \n    -- Health factor\n    if humanoid.Health < 50 then\n        newFearLevel = newFearLevel + (50 - humanoid.Health)\n    end\n    \n    -- Sanity factor\n    if sanity < 50 then\n        newFearLevel = newFearLevel + (50 - sanity) * 0.5\n    end\n    \n    fearLevel = math.min(100, math.max(0, newFearLevel))\nend\n\n-- Apply fear effects\nlocal function applyFearEffects()\n    local effects = createFearEffects()\n    local heartbeat = effects[2]\n    local heartbeatImage = effects[3]\n    local vignette = effects[4]\n    local blur = effects[5]\n    \n    -- Heartbeat effect\n    local heartbeatTween = TweenService:Create(\n        heartbeatImage,\n        TweenInfo.new(0.5, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true),\n        {Size = UDim2.new(0.35, 0, 0.35, 0)}\n    )\n    heartbeatTween:Play()\n    \n    -- Vignette intensity\n    local vignetteTween = TweenService:Create(\n        vignette,\n        TweenInfo.new(2, Enum.EasingStyle.Sine),\n        {BackgroundTransparency = 0.8 - (fearLevel / 100) * 0.4}\n    )\n    vignetteTween:Play()\n    \n    -- Blur effect\n    if fearLevel > 70 then\n        blur.Enabled = true\n        local blurTween = TweenService:Create(\n            blur,\n            TweenInfo.new(1, Enum.EasingStyle.Sine),\n            {Size = (fearLevel - 70) * 0.5}\n        )\n        blurTween:Play()\n    else\n        blur.Enabled = false\n    end\n    \n    -- Camera shake\n    if fearLevel > 50 then\n        local shakeIntensity = (fearLevel - 50) * 0.01\n        local originalCFrame = Camera.CFrame\n        \n        spawn(function()\n            while fearLevel > 50 do\n                local shake = Vector3.new(\n                    math.random(-shakeIntensity, shakeIntensity),\n                    math.random(-shakeIntensity, shakeIntensity),\n                    0\n                )\n                Camera.CFrame = originalCFrame * CFrame.new(shake)\n                task.wait(0.05)\n            end\n            Camera.CFrame = originalCFrame\n        end)\n    end\nend\n\n-- Sanity system\nlocal function updateSanity()\n    -- Sanity decreases in darkness\n    if isInDarkness then\n        sanity = math.max(0, sanity - 0.5)\n    else\n        sanity = math.min(100, sanity + 0.2)\n    end\n    \n    -- Sanity decreases near monsters\n    if nearbyMonsters > 0 then\n        sanity = math.max(0, sanity - nearbyMonsters * 0.3)\n    end\n    \n    -- Sanity affects movement\n    if sanity < 30 then\n        humanoid.WalkSpeed = 12\n        humanoid.JumpPower = 30\n    elseif sanity < 60 then\n        humanoid.WalkSpeed = 16\n        humanoid.JumpPower = 40\n    else\n        humanoid.WalkSpeed = 20\n        humanoid.JumpPower = 50\n    end\nend\n\n-- Main update loop\nRunService.Heartbeat:Connect(function()\n    updateFearLevel()\n    updateSanity()\n    applyFearEffects()\nend)\n\n-- Character respawn handling\nplayer.CharacterAdded:Connect(function(newCharacter)\n    character = newCharacter\n    humanoid = character:WaitForChild('Humanoid')\n    rootPart = character:WaitForChild('HumanoidRootPart')\n    sanity = 100\n    fearLevel = 0\nend)\n"}
{"prompt": "Create jump scare system with audio and visual effects", "completion": "-- ServerScriptService/JumpScareSystem.server.lua\nlocal Players = game:GetService('Players')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal TweenService = game:GetService('TweenService')\n\n-- Jump scare configurations\nlocal JUMPSCARE_TYPES = {\n    AUDIO = 'audio',\n    VISUAL = 'visual',\n    AUDIO_VISUAL = 'audio_visual',\n    ENVIRONMENTAL = 'environmental'\n}\n\nlocal jumpscareData = {\n    [JUMPSCARE_TYPES.AUDIO] = {\n        sounds = {\n            'rbxassetid://scream1',\n            'rbxassetid://scream2',\n            'rbxassetid://monster_roar',\n            'rbxassetid://glass_break'\n        },\n        volume = 0.8,\n        pitch = 1.0\n    },\n    [JUMPSCARE_TYPES.VISUAL] = {\n        images = {\n            'rbxassetid://scary_face1',\n            'rbxassetid://scary_face2',\n            'rbxassetid://monster_closeup'\n        },\n        duration = 0.3,\n        size = UDim2.new(0.8, 0, 0.8, 0)\n    },\n    [JUMPSCARE_TYPES.AUDIO_VISUAL] = {\n        combination = {\n            sound = 'rbxassetid://intense_scream',\n            image = 'rbxassetid://jumpscare_face',\n            volume = 1.0,\n            duration = 0.5\n        }\n    },\n    [JUMPSCARE_TYPES.ENVIRONMENTAL] = {\n        effects = {\n            'lightning_flash',\n            'door_slam',\n            'window_break',\n            'furniture_move'\n        }\n    }\n}\n\n-- Trigger jump scare for player\nlocal function triggerJumpScare(player, scareType, intensity)\n    local playerGui = player:WaitForChild('PlayerGui')\n    local screenGui = Instance.new('ScreenGui', playerGui)\n    screenGui.Name = 'JumpScare'\n    screenGui.ZIndex = 100\n    \n    intensity = intensity or 1.0\n    \n    if scareType == JUMPSCARE_TYPES.AUDIO then\n        -- Audio jump scare\n        local sound = Instance.new('Sound', screenGui)\n        sound.SoundId = jumpscareData.audio.sounds[math.random(1, #jumpscareData.audio.sounds)]\n        sound.Volume = jumpscareData.audio.volume * intensity\n        sound.Pitch = jumpscareData.audio.pitch\n        sound:Play()\n        \n        -- Remove after playing\n        sound.Ended:Connect(function()\n            screenGui:Destroy()\n        end)\n        \n    elseif scareType == JUMPSCARE_TYPES.VISUAL then\n        -- Visual jump scare\n        local image = Instance.new('ImageLabel', screenGui)\n        image.Size = jumpscareData.visual.size\n        image.Position = UDim2.new(0.1, 0, 0.1, 0)\n        image.BackgroundTransparency = 1\n        image.Image = jumpscareData.visual.images[math.random(1, #jumpscareData.visual.images)]\n        image.ZIndex = 101\n        \n        -- Flash effect\n        local flashTween = TweenService:Create(\n            image,\n            TweenInfo.new(jumpscareData.visual.duration, Enum.EasingStyle.Linear),\n            {BackgroundTransparency = 0}\n        )\n        \n        flashTween:Play()\n        flashTween.Completed:Connect(function()\n            local fadeTween = TweenService:Create(\n                image,\n                TweenInfo.new(jumpscareData.visual.duration, Enum.EasingStyle.Linear),\n                {BackgroundTransparency = 1}\n            )\n            fadeTween:Play()\n            fadeTween.Completed:Connect(function()\n                screenGui:Destroy()\n            end)\n        end)\n        \n    elseif scareType == JUMPSCARE_TYPES.AUDIO_VISUAL then\n        -- Combined audio-visual jump scare\n        local data = jumpscareData.audio_visual.combination\n        \n        -- Sound\n        local sound = Instance.new('Sound', screenGui)\n        sound.SoundId = data.sound\n        sound.Volume = data.volume * intensity\n        sound:Play()\n        \n        -- Image\n        local image = Instance.new('ImageLabel', screenGui)\n        image.Size = jumpscareData.visual.size\n        image.Position = UDim2.new(0.1, 0, 0.1, 0)\n        image.BackgroundTransparency = 1\n        image.Image = data.image\n        image.ZIndex = 101\n        \n        -- Synchronized effect\n        local effectTween = TweenService:Create(\n            image,\n            TweenService:Create(\n                image,\n                TweenInfo.new(data.duration, Enum.EasingStyle.Linear),\n                {BackgroundTransparency = 0}\n            )\n        )\n        \n        effectTween:Play()\n        effectTween.Completed:Connect(function()\n            local fadeTween = TweenService:Create(\n                image,\n                TweenInfo.new(data.duration, Enum.EasingStyle.Linear),\n                {BackgroundTransparency = 1}\n            )\n            fadeTweet:Play()\n            fadeTween.Completed:Connect(function()\n                screenGui:Destroy()\n            end)\n        end)\n        \n    elseif scareType == JUMPSCARE_TYPES.ENVIRONMENTAL then\n        -- Environmental jump scare\n        local effect = jumpscareData.environmental.effects[math.random(1, #jumpscareData.environmental.effects)]\n        \n        if effect == 'lightning_flash' then\n            -- Lightning effect\n            local lightning = Instance.new('Frame', screenGui)\n            lightning.Size = UDim2.new(1, 0, 1, 0)\n            lightning.BackgroundColor3 = Color3.new(1, 1, 1)\n            lightning.BackgroundTransparency = 1\n            lightning.ZIndex = 102\n            \n            local flashTween = TweenService:Create(\n                lightning,\n                TweenInfo.new(0.1, Enum.EasingStyle.Linear),\n                {BackgroundTransparency = 0}\n            )\n            \n            flashTween:Play()\n            flashTween.Completed:Connect(function()\n                local fadeTween = TweenService:Create(\n                    lightning,\n                    TweenInfo.new(0.2, Enum.EasingStyle.Linear),\n                    {BackgroundTransparency = 1}\n                )\n                fadeTween:Play()\n                fadeTween.Completed:Connect(function()\n                    screenGui:Destroy()\n                end)\n            end)\n        elseif effect == 'door_slam' then\n            -- Door slam sound\n            local sound = Instance.new('Sound', screenGui)\n            sound.SoundId = 'rbxassetid://door_slam'\n            sound.Volume = 0.9 * intensity\n            sound:Play()\n            \n            sound.Ended:Connect(function()\n                screenGui:Destroy()\n            end)\n        end\n    end\nend\n\n-- Remote function for clients to trigger jump scares\nlocal jumpScareRemote = Instance.new('RemoteFunction', ReplicatedStorage)\njumpScareRemote.Name = 'TriggerJumpScare'\n\njumpScareRemote.OnServerInvoke = function(player, scareType, intensity)\n    triggerJumpScare(player, scareType, intensity)\n    return true\nend\n\n-- Automatic jump scare triggers\nlocal function setupAutomaticTriggers()\n    -- Random jump scares\n    spawn(function()\n        while true do\n            task.wait(math.random(60, 180)) -- 1-3 minutes\n            \n            local players = Players:GetPlayers()\n            if #players > 0 then\n                local randomPlayer = players[math.random(1, #players)]\n                local randomType = jumpscareData[math.random(1, #jumpscareData)]\n                local randomIntensity = math.random(5, 10) / 10\n                \n                triggerJumpScare(randomPlayer, randomType, randomIntensity)\n            end\n        end\n    end)\nend\n\n-- Initialize automatic triggers\nsetupAutomaticTriggers()\n"}
{"prompt": "Generate stealth mechanics for horror survival gameplay", "completion": "-- StarterPlayerScripts/StealthSystem.client.lua\nlocal Players = game:GetService('Players')\nlocal UserInputService = game:GetService('UserInputService')\nlocal RunService = game:GetService('RunService')\nlocal TweenService = game:GetService('TweenService')\n\nlocal player = Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:Wait()\nlocal humanoid = character:WaitForChild('Humanoid')\nlocal rootPart = character:WaitForChild('HumanoidRootPart')\n\n-- Stealth variables\nlocal isCrouching = false\nlocal isHiding = false\nlocal noiseLevel = 0\nlocal visibilityLevel = 100\nlocal lastMovementTime = 0\n\n-- Stealth states\nlocal STEALTH_STATES = {\n    EXPOSED = 'exposed',\n    VISIBLE = 'visible',\n    HIDDEN = 'hidden',\n    INVISIBLE = 'invisible'\n}\n\nlocal currentStealthState = STEALTH_STATES.VISIBLE\n\n-- Crouch mechanics\nlocal function toggleCrouch()\n    if isCrouching then\n        -- Stand up\n        humanoid.HipHeight = 2\n        humanoid.WalkSpeed = 20\n        isCrouching = false\n        noiseLevel = noiseLevel - 20\n    else\n        -- Crouch down\n        humanoid.HipHeight = 1\n        humanoid.WalkSpeed = 8\n        isCrouching = true\n        noiseLevel = noiseLevel + 20\n    end\nend\n\n-- Hide mechanics\nlocal function checkHidingSpots()\n    local nearbyParts = workspace:GetPartsInPart(rootPart)\n    local hidingSpot = nil\n    \n    for _, part in ipairs(nearbyParts) do\n        if part:GetAttribute('HidingSpot') then\n            hidingSpot = part\n            break\n        end\n    end\n    \n    if hidingSpot and not isHiding then\n        -- Enter hiding spot\n        isHiding = true\n        visibilityLevel = visibilityLevel - 60\n        noiseLevel = noiseLevel - 40\n        \n        -- Visual feedback\n        local screenGui = player:WaitForChild('PlayerGui')\n        local hideIndicator = Instance.new('Frame', screenGui)\n        hideIndicator.Name = 'HideIndicator'\n        hideIndicator.Size = UDim2.new(0.2, 0, 0.1, 0)\n        hideIndicator.Position = UDim2.new(0.4, 0, 0.8, 0)\n        hideIndicator.BackgroundColor3 = Color3.new(0, 0.5, 0)\n        hideIndicator.BorderSizePixel = 2\n        hideIndicator.BorderColor3 = Color3.new(0, 1, 0)\n        \n        local hideText = Instance.new('TextLabel', hideIndicator)\n        hideText.Size = UDim2.new(1, 0, 1, 0)\n        hideText.Text = 'HIDING'\n        hideText.TextColor3 = Color3.new(1, 1, 1)\n        hideText.BackgroundTransparency = 1\n        hideText.Font = Enum.Font.SourceSansBold\n        hideText.TextScaled = true\n        \n        -- Auto-remove when leaving\n        spawn(function()\n            while isHiding do\n                task.wait(0.1)\n                if not hidingSpot or (rootPart.Position - hidingSpot.Position).Magnitude > 10 then\n                    isHiding = false\n                    visibilityLevel = visibilityLevel + 60\n                    noiseLevel = noiseLevel + 40\n                    hideIndicator:Destroy()\n                    break\n                end\n            end\n        end)\n    end\nend\n\n-- Noise generation\nlocal function updateNoiseLevel()\n    local baseNoise = 0\n    \n    -- Movement noise\n    if humanoid.MoveDirection.Magnitude > 0 then\n        baseNoise = baseNoise + 10\n        \n        -- Running noise\n        if humanoid.WalkSpeed > 16 then\n            baseNoise = baseNoise + 20\n        end\n        \n        -- Surface noise\n        local ray = Ray.new(rootPart.Position, Vector3.new(0, -5, 0))\n        local hit = workspace:FindPartOnRay(ray)\n        if hit then\n            if hit.Material == Enum.Material.Metal then\n                baseNoise = baseNoise + 15\n            elseif hit.Material == Enum.Material.Wood then\n                baseNoise = baseNoise + 8\n            elseif hit.Material == Enum.Material.Concrete then\n                baseNoise = baseNoise + 5\n            end\n        end\n    end\n    \n    -- Crouching reduces noise\n    if isCrouching then\n        baseNoise = baseNoise * 0.3\n    end\n    \n    -- Hiding reduces noise\n    if isHiding then\n        baseNoise = baseNoise * 0.1\n    end\n    \n    noiseLevel = math.min(100, math.max(0, baseNoise))\nend\n\n-- Visibility calculation\nlocal function updateVisibility()\n    local baseVisibility = 100\n    \n    -- Lighting affects visibility\n    local lighting = game:GetService('Lighting')\n    local currentLight = lighting.Ambient.R + lighting.Ambient.G + lighting.Ambient.B\n    if currentLight < 0.3 then\n        baseVisibility = baseVisibility - 40\n    elseif currentLight < 0.6 then\n        baseVisibility = baseVisibility - 20\n    end\n    \n    -- Movement affects visibility\n    if humanoid.MoveDirection.Magnitude > 0 then\n        baseVisibility = baseVisibility + 15\n    end\n    \n    -- Crouching reduces visibility\n    if isCrouching then\n        baseVisibility = baseVisibility - 30\n    end\n    \n    -- Hiding reduces visibility\n    if isHiding then\n        baseVisibility = baseVisibility - 60\n    end\n    \n    visibilityLevel = math.min(100, math.max(0, baseVisibility))\nend\n\n-- Stealth state management\nlocal function updateStealthState()\n    if visibilityLevel < 20 and noiseLevel < 20 then\n        currentStealthState = STEALTH_STATES.INVISIBLE\n    elseif visibilityLevel < 40 and noiseLevel < 40 then\n        currentStealthState = STEALTH_STATES.HIDDEN\n    elseif visibilityLevel < 70 and noiseLevel < 70 then\n        currentStealthState = STEALTH_STATES.VISIBLE\n    else\n        currentStealthState = STEALTH_STATES.EXPOSED\n    end\nend\n\n-- Input handling\nUserInputService.InputBegan:Connect(function(input, gameProcessed)\n    if gameProcessed then return end\n    \n    if input.KeyCode == Enum.KeyCode.C then\n        toggleCrouch()\n    elseif input.KeyCode == Enum.KeyCode.H then\n        checkHidingSpots()\n    end\nend)\n\n-- Main update loop\nRunService.Heartbeat:Connect(function()\n    updateNoiseLevel()\n    updateVisibility()\n    updateStealthState()\n    \n    -- Update stealth UI\n    local screenGui = player:WaitForChild('PlayerGui')\n    local stealthUI = screenGui:FindFirstChild('StealthUI')\n    \n    if not stealthUI then\n        stealthUI = Instance.new('Frame', screenGui)\n        stealthUI.Name = 'StealthUI'\n        stealthUI.Size = UDim2.new(0.25, 0, 0.15, 0)\n        stealthUI.Position = UDim2.new(0.75, 0, 0.8, 0)\n        stealthUI.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)\n        stealthUI.BorderSizePixel = 2\n        stealthUI.BorderColor3 = Color3.new(0.3, 0.3, 0.3)\n        \n        local title = Instance.new('TextLabel', stealthUI)\n        title.Size = UDim2.new(1, 0, 0.3, 0)\n        title.Text = 'STEALTH STATUS'\n        title.TextColor3 = Color3.new(1, 1, 1)\n        title.BackgroundTransparency = 1\n        title.Font = Enum.Font.SourceSansBold\n        title.TextScaled = true\n        \n        local stateLabel = Instance.new('TextLabel', stealthUI)\n        stateLabel.Size = UDim2.new(1, 0, 0.35, 0)\n        stateLabel.Position = UDim2.new(0, 0, 0.3, 0)\n        stateLabel.Text = currentStealthState:upper()\n        stateLabel.TextColor3 = Color3.new(0, 1, 0)\n        stateLabel.BackgroundTransparency = 1\n        stateLabel.Font = Enum.Font.SourceSansBold\n        stateLabel.TextScaled = true\n        \n        local noiseLabel = Instance.new('TextLabel', stealthUI)\n        noiseLabel.Size = UDim2.new(1, 0, 0.35, 0)\n        noiseLabel.Position = UDim2.new(0, 0, 0.65, 0)\n        noiseLabel.Text = 'NOISE: ' .. math.floor(noiseLevel)\n        noiseLabel.TextColor3 = Color3.new(1, 1, 0)\n        noiseLabel.BackgroundTransparency = 1\n        noiseLabel.Font = Enum.Font.SourceSans\n        noiseLabel.TextScaled = true\n    else\n        -- Update existing UI\n        local stateLabel = stealthUI:FindFirstChild('TextLabel')\n        if stateLabel then\n            stateLabel.Text = currentStealthState:upper()\n            \n            -- Color coding\n            if currentStealthState == STEALTH_STATES.INVISIBLE then\n                stateLabel.TextColor3 = Color3.new(0, 1, 0)\n            elseif currentStealthState == STEALTH_STATES.HIDDEN then\n                stateLabel.TextColor3 = Color3.new(0.5, 1, 0)\n            elseif currentStealthState == STEALTH_STATES.VISIBLE then\n                stateLabel.TextColor3 = Color3.new(1, 1, 0)\n            else\n                stateLabel.TextColor3 = Color3.new(1, 0, 0)\n            end\n        end\n        \n        local noiseLabel = stealthUI:FindFirstChild('TextLabel', true)\n        if noiseLabel then\n            noiseLabel.Text = 'NOISE: ' .. math.floor(noiseLevel)\n        end\n    end\nend)\n\n-- Character respawn handling\nplayer.CharacterAdded:Connect(function(newCharacter)\n    character = newCharacter\n    humanoid = character:WaitForChild('Humanoid')\n    rootPart = character:WaitForChild('HumanoidRootPart')\n    isCrouching = false\n    isHiding = false\n    noiseLevel = 0\n    visibilityLevel = 100\nend)\n"}
{"prompt": "Create environmental horror with dynamic events and triggers", "completion": "-- ServerScriptService/EnvironmentalHorror.server.lua\nlocal RunService = game:GetService('RunService')\nlocal TweenService = game:GetService('TweenService')\nlocal SoundService = game:GetService('SoundService')\nlocal Lighting = game:GetService('Lighting')\n\n-- Environmental event types\nlocal EVENT_TYPES = {\n    LIGHTNING_STORM = 'lightning_storm',\n    POWER_OUTAGE = 'power_outage',\n    EARTHQUAKE = 'earthquake',\n    FOG_ROLL = 'fog_roll',\n    WIND_GUST = 'wind_gust',\n    DOOR_CREAK = 'door_creak',\n    WINDOW_BREAK = 'window_break',\n    FURNITURE_MOVE = 'furniture_move'\n}\n\n-- Event configurations\nlocal eventConfigs = {\n    [EVENT_TYPES.LIGHTNING_STORM] = {\n        duration = 15,\n        intensity = 0.8,\n        effects = {'lightning_flash', 'thunder_sound', 'rain_effect'}\n    },\n    [EVENT_TYPES.POWER_OUTAGE] = {\n        duration = 30,\n        intensity = 1.0,\n        effects = {'lights_off', 'emergency_lights', 'generator_sound'}\n    },\n    [EVENT_TYPES.EARTHQUAKE] = {\n        duration = 8,\n        intensity = 0.9,\n        effects = {'camera_shake', 'rumbling_sound', 'object_fall'}\n    },\n    [EVENT_TYPES.FOG_ROLL] = {\n        duration = 20,\n        intensity = 0.7,\n        effects = {'fog_increase', 'visibility_reduction', 'wind_sound'}\n    },\n    [EVENT_TYPES.WIND_GUST] = {\n        duration = 5,\n        intensity = 0.6,\n        effects = {'wind_sound', 'particle_effect', 'light_flicker'}\n    },\n    [EVENT_TYPES.DOOR_CREAK] = {\n        duration = 3,\n        intensity = 0.4,\n        effects = {'door_sound', 'door_movement'}\n    },\n    [EVENT_TYPES.WINDOW_BREAK] = {\n        duration = 2,\n        intensity = 0.5,\n        effects = {'glass_sound', 'glass_particles'}\n    },\n    [EVENT_TYPES.FURNITURE_MOVE] = {\n        duration = 4,\n        intensity = 0.3,\n        effects = {'furniture_sound', 'furniture_shift'}\n    }\n}\n\n-- Active events\nlocal activeEvents = {}\nlocal eventCooldowns = {}\n\n-- Lightning storm effect\nlocal function createLightningStorm(intensity)\n    local lightning = Instance.new('Frame')\n    lightning.Name = 'LightningEffect'\n    lightning.Size = UDim2.new(1, 0, 1, 0)\n    lightning.Position = UDim2.new(0, 0, 0, 0)\n    lightning.BackgroundColor3 = Color3.new(1, 1, 1)\n    lightning.BackgroundTransparency = 1\n    lightning.ZIndex = 1000\n    lightning.Parent = game:GetService('StarterGui')\n    \n    -- Lightning flash sequence\n    local flashSequence = function()\n        for i = 1, math.random(3, 6) do\n            local flashTween = TweenService:Create(\n                lightning,\n                TweenInfo.new(0.1, Enum.EasingStyle.Linear),\n                {BackgroundTransparency = 0}\n            )\n            \n            flashTween:Play()\n            flashTween.Completed:Wait()\n            \n            local fadeTween = TweenService:Create(\n                lightning,\n                TweenInfo.new(0.2, Enum.EasingStyle.Linear),\n                {BackgroundTransparency = 1}\n            )\n            fadeTween:Play()\n            \n            task.wait(math.random(100, 500) / 1000)\n        end\n    end\n    \n    spawn(flashSequence)\n    \n    -- Thunder sound\n    local thunder = Instance.new('Sound', SoundService)\n    thunder.SoundId = 'rbxassetid://thunder_sound'\n    thunder.Volume = 0.7 * intensity\n    thunder:Play()\n    \n    -- Rain effect\n    local rain = Instance.new('Part')\n    rain.Name = 'RainEffect'\n    rain.Size = Vector3.new(1000, 1, 1000)\n    rain.Position = Vector3.new(0, 100, 0)\n    rain.Transparency = 0.8\n    rain.Material = Enum.Material.Neon\n    rain.BrickColor = BrickColor.new('Cyan')\n    rain.Anchored = true\n    rain.Parent = workspace\n    \n    -- Rain particles\n    local rainParticles = Instance.new('ParticleEmitter', rain)\n    rainParticles.Texture = 'rbxassetid://rain_texture'\n    rainParticles.Rate = 1000 * intensity\n    rainParticles.Speed = NumberRange.new(20, 30)\n    rainParticles.Lifetime = NumberRange.new(2, 4)\n    rainParticles.SpreadAngle = Vector2.new(10, 10)\n    \n    return {lightning, thunder, rain, rainParticles}\nend\n\n-- Power outage effect\nlocal function createPowerOutage(intensity)\n    local originalLights = {}\n    \n    -- Store original lighting\n    originalLights.ambient = Lighting.Ambient\n    originalLights.outdoorAmbient = Lighting.OutdoorAmbient\n    originalLights.fogStart = Lighting.FogStart\n    originalLights.fogEnd = Lighting.FogEnd\n    \n    -- Turn off main lights\n    local lightsOffTween = TweenService:Create(\n        Lighting,\n        TweenInfo.new(2, Enum.EasingStyle.Sine),\n        {\n            Ambient = Color3.fromRGB(5, 5, 8),\n            OutdoorAmbient = Color3.fromRGB(3, 3, 5),\n            FogStart = 15,\n            FogEnd = 80\n        }\n    )\n    \n    lightsOffTween:Play()\n    \n    -- Emergency lights\n    local emergencyLight = Instance.new('PointLight', workspace)\n    emergencyLight.Color = Color3.fromRGB(1, 0, 0)\n    emergencyLight.Range = 50\n    emergencyLight.Brightness = 0.3 * intensity\n    emergencyLight.Position = Vector3.new(0, 10, 0)\n    \n    -- Generator sound\n    local generator = Instance.new('Sound', SoundService)\n    generator.SoundId = 'rbxassetid://generator_sound'\n    generator.Volume = 0.5 * intensity\n    generator.Looped = true\n    generator:Play()\n    \n    return {emergencyLight, generator, originalLights}\nend\n\n-- Earthquake effect\nlocal function createEarthquake(intensity)\n    local cameraShake = Instance.new('ScreenGui', game:GetService('StarterGui')\n    cameraShake.Name = 'EarthquakeEffect'\n    \n    -- Camera shake effect\n    local shakeIntensity = 0.02 * intensity\n    local originalCFrame = workspace.CurrentCamera.CFrame\n    \n    spawn(function()\n        for i = 1, 80 do -- 8 seconds at 10fps\n            local shake = Vector3.new(\n                math.random(-shakeIntensity, shakeIntensity),\n                math.random(-shakeIntensity, shakeIntensity),\n                0\n            )\n            workspace.CurrentCamera.CFrame = originalCFrame * CFrame.new(shake)\n            task.wait(0.1)\n        end\n        workspace.CurrentCamera.CFrame = originalCFrame\n    end)\n    \n    -- Rumbling sound\n    local rumble = Instance.new('Sound', SoundService)\n    rumble.SoundId = 'rbxassetid://earthquake_rumble'\n    rumble.Volume = 0.6 * intensity\n    rumble.Looped = true\n    rumble:Play()\n    \n    -- Object falling effect\n    local objects = workspace:GetChildren()\n    for _, obj in ipairs(objects) do\n        if obj:IsA('Part') and not obj.Anchored and obj.Size.Y > 2 then\n            -- Random chance to fall\n            if math.random(1, 100) < 30 * intensity then\n                obj.Anchored = false\n            end\n        end\n    end\n    \n    return {cameraShake, rumble}\nend\n\n-- Fog roll effect\nlocal function createFogRoll(intensity)\n    local originalFogEnd = Lighting.FogEnd\n    \n    -- Increase fog density\n    local fogTween = TweenService:Create(\n        Lighting,\n        TweenInfo.new(10, Enum.EasingStyle.Sine),\n        {FogEnd = 30 * intensity}\n    )\n    \n    fogTween:Play()\n    \n    -- Wind sound\n    local wind = Instance.new('Sound', SoundService)\n    wind.SoundId = 'rbxassetid://wind_sound'\n    wind.Volume = 0.4 * intensity\n    wind.Looped = true\n    wind:Play()\n    \n    return {wind, originalFogEnd}\nend\n\n-- Execute environmental event\nlocal function executeEvent(eventType, intensity)\n    local config = eventConfigs[eventType]\n    if not config then return end\n    \n    intensity = intensity or config.intensity\n    local effects = {}\n    \n    if eventType == EVENT_TYPES.LIGHTNING_STORM then\n        effects = createLightningStorm(intensity)\n    elseif eventType == EVENT_TYPES.POWER_OUTAGE then\n        effects = createPowerOutage(intensity)\n    elseif eventType == EVENT_TYPES.EARTHQUAKE then\n        effects = createEarthquake(intensity)\n    elseif eventType == EVENT_TYPES.FOG_ROLL then\n        effects = createFogRoll(intensity)\n    end\n    \n    -- Store active event\n    activeEvents[eventType] = {\n        effects = effects,\n        startTime = tick(),\n        duration = config.duration,\n        intensity = intensity\n    }\n    \n    -- Set cooldown\n    eventCooldowns[eventType] = tick() + config.duration + math.random(60, 180)\nend\n\n-- Clean up completed events\nlocal function cleanupEvents()\n    local currentTime = tick()\n    \n    for eventType, eventData in pairs(activeEvents) do\n        if currentTime - eventData.startTime > eventData.duration then\n            -- Clean up effects\n            for _, effect in ipairs(eventData.effects) do\n                if effect then\n                    effect:Destroy()\n                end\n            end\n            \n            -- Restore original state if needed\n            if eventType == EVENT_TYPES.POWER_OUTAGE then\n                local originalLights = eventData.effects[3]\n                if originalLights then\n                    TweenService:Create(\n                        Lighting,\n                        TweenInfo.new(3, Enum.EasingStyle.Sine),\n                        originalLights\n                    ):Play()\n                end\n            elseif eventType == EVENT_TYPES.FOG_ROLL then\n                local originalFogEnd = eventData.effects[2]\n                if originalFogEnd then\n                    TweenService:Create(\n                        Lighting,\n                        TweenInfo.new(8, Enum.EasingStyle.Sine),\n                        {FogEnd = originalFogEnd}\n                    ):Play()\n                end\n            end\n            \n            activeEvents[eventType] = nil\n        end\n    end\nend\n\n-- Random event generator\nlocal function generateRandomEvent()\n    local currentTime = tick()\n    \n    for eventType, cooldown in pairs(eventCooldowns) do\n        if currentTime > cooldown then\n            -- Random chance to trigger event\n            if math.random(1, 100) < 15 then -- 15% chance\n                local intensity = math.random(5, 10) / 10\n                executeEvent(eventType, intensity)\n            end\n        end\n    end\nend\n\n-- Main update loop\nRunService.Heartbeat:Connect(function()\n    cleanupEvents()\n    \n    -- Generate random events every 30 seconds\n    if tick() % 30 < 0.1 then\n        generateRandomEvent()\n    end\nend)\n\n-- Initialize cooldowns\nfor eventType, _ in pairs(eventConfigs) do\n    eventCooldowns[eventType] = tick() + math.random(30, 120)\nend\n"}
{"prompt": "Build inventory system with horror items and tools", "completion": "-- StarterPlayerScripts/InventorySystem.client.lua\nlocal Players = game:GetService('Players')\nlocal UserInputService = game:GetService('UserInputService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal TweenService = game:GetService('TweenService')\n\nlocal player = Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:Wait()\nlocal humanoid = character:WaitForChild('Humanoid')\n\n-- Inventory system\nlocal inventory = {}\nlocal maxSlots = 8\nlocal selectedSlot = 1\n\n-- Horror item types\nlocal ITEM_TYPES = {\n    FLASHLIGHT = 'flashlight',\n    MEDKIT = 'medkit',\n    KEYS = 'keys',\n    DOCUMENTS = 'documents',\n    WEAPON = 'weapon',\n    PROTECTION = 'protection'\n}\n\n-- Item definitions\nlocal itemDefinitions = {\n    [ITEM_TYPES.FLASHLIGHT] = {\n        name = 'Flashlight',\n        description = 'Provides light in darkness',\n        durability = 100,\n        battery = 100,\n        icon = 'rbxassetid://flashlight_icon'\n    },\n    [ITEM_TYPES.MEDKIT] = {\n        name = 'Medical Kit',\n        description = 'Restores health',\n        uses = 3,\n        healAmount = 50,\n        icon = 'rbxassetid://medkit_icon'\n    },\n    [ITEM_TYPES.KEYS] = {\n        name = 'Mysterious Keys',\n        description = 'Unlocks doors',\n        durability = 1,\n        icon = 'rbxassetid://keys_icon'\n    },\n    [ITEM_TYPES.DOCUMENTS] = {\n        name = 'Old Documents',\n        description = 'Contains clues',\n        durability = 1,\n        icon = 'rbxassetid://documents_icon'\n    },\n    [ITEM_TYPES.WEAPON] = {\n        name = 'Improvised Weapon',\n        description = 'Defend yourself',\n        durability = 100,\n        damage = 25,\n        icon = 'rbxassetid://weapon_icon'\n    },\n    [ITEM_TYPES.PROTECTION] = {\n        name = 'Protective Charm',\n        description = 'Reduces fear',\n        durability = 100,\n        fearReduction = 20,\n        icon = 'rbxassetid://charm_icon'\n    }\n}\n\n-- Add item to inventory\nlocal function addItem(itemType, quantity)\n    quantity = quantity or 1\n    \n    if #inventory >= maxSlots then\n        return false, 'Inventory full'\n    end\n    \n    local item = {\n        type = itemType,\n        data = itemDefinitions[itemType],\n        quantity = quantity,\n        slot = #inventory + 1\n    }\n    \n    table.insert(inventory, item)\n    updateInventoryUI()\n    return true, 'Item added'\nend\n\n-- Use item\nlocal function useItem(slot)\n    if slot < 1 or slot > #inventory then return end\n    \n    local item = inventory[slot]\n    if not item then return end\n    \n    if item.type == ITEM_TYPES.FLASHLIGHT then\n        -- Toggle flashlight\n        toggleFlashlight()\n    elseif item.type == ITEM_TYPES.MEDKIT then\n        -- Use medkit\n        if item.data.uses > 0 then\n            humanoid.Health = math.min(humanoid.MaxHealth, humanoid.Health + item.data.healAmount)\n            item.data.uses = item.data.uses - 1\n            \n            if item.data.uses <= 0 then\n                removeItem(slot)\n            end\n        end\n    elseif item.type == ITEM_TYPES.WEAPON then\n        -- Attack with weapon\n        attackWithWeapon(item)\n    end\n    \n    updateInventoryUI()\nend\n\n-- Remove item\nlocal function removeItem(slot)\n    if slot < 1 or slot > #inventory then return end\n    \n    table.remove(inventory, slot)\n    \n    -- Reorder slots\n    for i = slot, #inventory do\n        inventory[i].slot = i\n    end\n    \n    updateInventoryUI()\nend\n\n-- Flashlight functionality\nlocal function toggleFlashlight()\n    local screenGui = player:WaitForChild('PlayerGui')\n    local flashlightUI = screenGui:FindFirstChild('FlashlightUI')\n    \n    if not flashlightUI then\n        -- Create flashlight effect\n        flashlightUI = Instance.new('Frame', screenGui)\n        flashlightUI.Name = 'FlashlightUI'\n        flashlightUI.Size = UDim2.new(1, 0, 1, 0)\n        flashlightUI.Position = UDim2.new(0, 0, 0, 0)\n        flashlightUI.BackgroundColor3 = Color3.new(0, 0, 0)\n        flashlightUI.BackgroundTransparency = 0.8\n        flashlightUI.ZIndex = 50\n        \n        -- Flashlight beam\n        local beam = Instance.new('Frame', flashlightUI)\n        beam.Name = 'Beam'\n        beam.Size = UDim2.new(0.3, 0, 0.3, 0)\n        beam.Position = UDim2.new(0.35, 0, 0.35, 0)\n        beam.BackgroundColor3 = Color3.new(1, 1, 0.8)\n        beam.BackgroundTransparency = 0.9\n        beam.ZIndex = 51\n        \n        -- Battery indicator\n        local battery = Instance.new('Frame', screenGui)\n        battery.Name = 'BatteryIndicator'\n        battery.Size = UDim2.new(0.15, 0, 0.05, 0)\n        battery.Position = UDim2.new(0.8, 0, 0.9, 0)\n        battery.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)\n        battery.BorderSizePixel = 2\n        battery.BorderColor3 = Color3.new(0.5, 0.5, 0.5)\n        \n        local batteryFill = Instance.new('Frame', battery)\n        batteryFill.Name = 'BatteryFill'\n        batteryFill.Size = UDim2.new(1, 0, 1, 0)\n        batteryFill.BackgroundColor3 = Color3.new(0, 1, 0)\n        batteryFill.BorderSizePixel = 0\n        \n        -- Battery drain\n        spawn(function()\n            while flashlightUI and flashlightUI.Parent do\n                task.wait(1)\n                local batteryLevel = batteryFill.Size.X.Scale\n                batteryLevel = math.max(0, batteryLevel - 0.01)\n                batteryFill.Size = UDim2.new(batteryLevel, 0, 1, 0)\n                \n                if batteryLevel <= 0 then\n                    flashlightUI:Destroy()\n                    battery:Destroy()\n                    break\n                end\n            end\n        end)\n        \n    else\n        -- Toggle off\n        flashlightUI:Destroy()\n        local battery = screenGui:FindFirstChild('BatteryIndicator')\n        if battery then\n            battery:Destroy()\n        end\n    end\nend\n\n-- Weapon attack\nlocal function attackWithWeapon(item)\n    if not item or not item.data then return end\n    \n    -- Attack animation\n    local animation = Instance.new('Animation')\n    animation.AnimationId = 'rbxassetid://attack_animation'\n    \n    local animTrack = humanoid:LoadAnimation(animation)\n    animTrack:Play()\n    \n    -- Attack logic\n    local attackRange = 5\n    local nearbyParts = workspace:GetPartsInPart(character.PrimaryPart)\n    \n    for _, part in ipairs(nearbyParts) do\n        if part:GetAttribute('Monster') then\n            local monster = part.Parent\n            local monsterHum = monster:FindFirstChild('Humanoid')\n            \n            if monsterHum then\n                monsterHum.Health = monsterHum.Health - item.data.damage\n                \n                -- Damage feedback\n                local damageLabel = Instance.new('TextLabel')\n                damageLabel.Text = '-' .. item.data.damage\n                damageLabel.TextColor3 = Color3.new(1, 0, 0)\n                damageLabel.Size = UDim2.new(0, 50, 0, 20)\n                damageLabel.Position = UDim2.new(0, 0, 0, 0)\n                damageLabel.BackgroundTransparency = 1\n                damageLabel.Font = Enum.Font.SourceSansBold\n                damageLabel.TextScaled = true\n                damageLabel.Parent = monster.PrimaryPart\n                \n                -- Animate damage number\n                local damageTween = TweenService:Create(\n                    damageLabel,\n                    TweenInfo.new(1, Enum.EasingStyle.Sine),\n                    {Position = UDim2.new(0, 0, -0.5, 0), TextTransparency = 1}\n                )\n                damageTween:Play()\n                damageTween.Completed:Connect(function()\n                    damageLabel:Destroy()\n                end)\n            end\n        end\n    end\n    \n    -- Reduce weapon durability\n    item.data.durability = item.data.durability - 10\n    if item.data.durability <= 0 then\n        removeItem(item.slot)\n    end\nend\n\n-- Update inventory UI\nlocal function updateInventoryUI()\n    local screenGui = player:WaitForChild('PlayerGui')\n    local inventoryUI = screenGui:FindFirstChild('InventoryUI')\n    \n    if not inventoryUI then\n        -- Create inventory UI\n        inventoryUI = Instance.new('Frame', screenGui)\n        inventoryUI.Name = 'InventoryUI'\n        inventoryUI.Size = UDim2.new(0.8, 0, 0.2, 0)\n        inventoryUI.Position = UDim2.new(0.1, 0, 0.75, 0)\n        inventoryUI.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)\n        inventoryUI.BorderSizePixel = 2\n        inventoryUI.BorderColor3 = Color3.new(0.3, 0.3, 0.3)\n        inventoryUI.Visible = false\n        \n        -- Inventory slots\n        for i = 1, maxSlots do\n            local slot = Instance.new('Frame', inventoryUI)\n            slot.Name = 'Slot' .. i\n            slot.Size = UDim2.new(0.1, 0, 0.8, 0)\n            slot.Position = UDim2.new((i-1) * 0.11, 0, 0.1, 0)\n            slot.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)\n            slot.BorderSizePixel = 1\n            slot.BorderColor3 = Color3.new(0.5, 0.5, 0.5)\n            \n            -- Slot number\n            local slotNumber = Instance.new('TextLabel', slot)\n            slotNumber.Size = UDim2.new(1, 0, 0.2, 0)\n            slotNumber.Text = tostring(i)\n            slotNumber.TextColor3 = Color3.new(1, 1, 1)\n            slotNumber.BackgroundTransparency = 1\n            slotNumber.Font = Enum.Font.SourceSansBold\n            slotNumber.TextScaled = true\n        end\n    end\n    \n    -- Update slot contents\n    for i = 1, maxSlots do\n        local slot = inventoryUI:FindFirstChild('Slot' .. i)\n        if slot then\n            local item = inventory[i]\n            \n            -- Clear existing item display\n            local existingItem = slot:FindFirstChild('ItemDisplay')\n            if existingItem then\n                existingItem:Destroy()\n            end\n            \n            if item then\n                -- Create item display\n                local itemDisplay = Instance.new('ImageLabel', slot)\n                itemDisplay.Name = 'ItemDisplay'\n                itemDisplay.Size = UDim2.new(0.8, 0, 0.6, 0)\n                itemDisplay.Position = UDim2.new(0.1, 0, 0.25, 0)\n                itemDisplay.Image = item.data.icon\n                itemDisplay.BackgroundTransparency = 1\n                itemDisplay.ZIndex = 10\n                \n                -- Item quantity\n                if item.quantity > 1 then\n                    local quantityLabel = Instance.new('TextLabel', slot)\n                    quantityLabel.Size = UDim2.new(0.3, 0, 0.2, 0)\n                    quantityLabel.Position = UDim2.new(0.7, 0, 0.8, 0)\n                    quantityLabel.Text = tostring(item.quantity)\n                    quantityLabel.TextColor3 = Color3.new(1, 1, 1)\n                    quantityLabel.BackgroundColor3 = Color3.new(0, 0, 0)\n                    quantityLabel.BorderSizePixel = 1\n                    quantityLabel.BorderColor3 = Color3.new(1, 1, 1)\n                    quantityLabel.Font = Enum.Font.SourceSansBold\n                    quantityLabel.TextScaled = true\n                    quantityLabel.ZIndex = 11\n                end\n                \n                -- Highlight selected slot\n                if i == selectedSlot then\n                    slot.BorderColor3 = Color3.new(0, 1, 0)\n                    slot.BorderSizePixel = 3\n                else\n                    slot.BorderColor3 = Color3.new(0.5, 0.5, 0.5)\n                    slot.BorderSizePixel = 1\n                end\n            else\n                -- Empty slot\n                slot.BorderColor3 = Color3.new(0.5, 0.5, 0.5)\n                slot.BorderSizePixel = 1\n            end\n        end\n    end\nend\n\n-- Input handling\nUserInputService.InputBegan:Connect(function(input, gameProcessed)\n    if gameProcessed then return end\n    \n    if input.KeyCode == Enum.KeyCode.I then\n        -- Toggle inventory\n        local screenGui = player:WaitForChild('PlayerGui')\n        local inventoryUI = screenGui:FindFirstChild('InventoryUI')\n        if inventoryUI then\n            inventoryUI.Visible = not inventoryUI.Visible\n        end\n    elseif input.KeyCode == Enum.KeyCode.F then\n        -- Use selected item\n        useItem(selectedSlot)\n    elseif input.KeyCode >= Enum.KeyCode.One and input.KeyCode <= Enum.KeyCode.Eight then\n        -- Select slot\n        selectedSlot = input.KeyCode.Value - Enum.KeyCode.One.Value + 1\n        updateInventoryUI()\n    end\nend)\n\n-- Initialize inventory\nupdateInventoryUI()\n\n-- Character respawn handling\nplayer.CharacterAdded:Connect(function(newCharacter)\n    character = newCharacter\n    humanoid = character:WaitForChild('Humanoid')\n    inventory = {}\n    selectedSlot = 1\n    updateInventoryUI()\nend)\n"}
{"prompt": "Create psychological horror with reality distortion effects", "completion": "-- StarterPlayerScripts/PsychologicalHorror.client.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal TweenService = game:GetService('TweenService')\nlocal Lighting = game:GetService('Lighting')\nlocal SoundService = game:GetService('SoundService')\n\nlocal player = Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:Wait()\nlocal humanoid = character:WaitForChild('Humanoid')\nlocal rootPart = character:WaitForChild('HumanoidRootPart')\n\n-- Psychological horror variables\nlocal sanity = 100\nlocal realityDistortion = 0\nlocal hallucinationLevel = 0\nlocal timeDistortion = 1\nlocal lastDistortion = 0\n\n-- Reality distortion effects\nlocal function createRealityDistortion()\n    local screenGui = player:WaitForChild('PlayerGui')\n    local distortionUI = screenGui:FindFirstChild('RealityDistortion')\n    \n    if not distortionUI then\n        distortionUI = Instance.new('ScreenGui', screenGui)\n        distortionUI.Name = 'RealityDistortion'\n        distortionUI.ZIndex = 200\n        \n        -- Reality glitch effect\n        local glitch = Instance.new('Frame', distortionUI)\n        glitch.Name = 'GlitchEffect'\n        glitch.Size = UDim2.new(1, 0, 1, 0)\n        glitch.Position = UDim2.new(0, 0, 0, 0)\n        glitch.BackgroundColor3 = Color3.new(0, 0, 0)\n        glitch.BackgroundTransparency = 1\n        glitch.ZIndex = 201\n        \n        -- Random glitch lines\n        for i = 1, 5 do\n            local glitchLine = Instance.new('Frame', glitch)\n            glitchLine.Size = UDim2.new(0.1, 0, 0.001, 0)\n            glitchLine.Position = UDim2.new(math.random(), 0, math.random(), 0)\n            glitchLine.BackgroundColor3 = Color3.new(1, 0, 0)\n            glitchLine.ZIndex = 202\n            \n            -- Animate glitch line\n            spawn(function()\n                while glitchLine and glitchLine.Parent do\n                    local tween = TweenService:Create(\n                        glitchLine,\n                        TweenInfo.new(0.1, Enum.EasingStyle.Linear),\n                        {BackgroundTransparency = 1}\n                    )\n                    tween:Play()\n                    tween.Completed:Wait()\n                    \n                    task.wait(math.random(100, 500) / 1000)\n                    \n                    local restoreTween = TweenService:Create(\n                        glitchLine,\n                        TweenInfo.new(0.1, Enum.EasingStyle.Linear),\n                        {BackgroundTransparency = 0}\n                    )\n                    restoreTween:Play()\n                    \n                    task.wait(math.random(200, 800) / 1000)\n                end\n            end)\n        end\n        \n        -- Reality shift effect\n        local realityShift = Instance.new('Frame', distortionUI)\n        realityShift.Name = 'RealityShift'\n        realityShift.Size = UDim2.new(1, 0, 1, 0)\n        realityShift.Position = UDim2.new(0, 0, 0, 0)\n        realityShift.BackgroundColor3 = Color3.new(0.5, 0, 0.5)\n        realityShift.BackgroundTransparency = 1\n        realityShift.ZIndex = 203\n        \n        -- Periodic reality shifts\n        spawn(function()\n            while realityShift and realityShift.Parent do\n                task.wait(math.random(5, 15))\n                \n                local shiftTween = TweenService:Create(\n                    realityShift,\n                    TweenInfo.new(0.5, Enum.EasingStyle.Sine),\n                    {BackgroundTransparency = 0.3}\n                )\n                shiftTween:Play()\n                shiftTween.Completed:Wait()\n                \n                local restoreTween = TweenService:Create(\n                    realityShift,\n                    TweenInfo.new(0.5, Enum.EasingStyle.Sine),\n                    {BackgroundTransparency = 1}\n                )\n                restoreTween:Play()\n            end\n        end)\n        \n        return distortionUI\n    end\n    \n    return distortionUI\nend\n\n-- Hallucination system\nlocal function createHallucination()\n    local screenGui = player:WaitForChild('PlayerGui')\n    local hallucinationUI = screenGui:FindFirstChild('Hallucination')\n    \n    if not hallucinationUI then\n        hallucinationUI = Instance.new('ScreenGui', screenGui)\n        hallucinationUI.Name = 'Hallucination'\n        hallucinationUI.ZIndex = 150\n        \n        -- Shadow figures\n        for i = 1, 3 do\n            local shadow = Instance.new('Frame', hallucinationUI)\n            shadow.Name = 'Shadow' .. i\n            shadow.Size = UDim2.new(0.1, 0, 0.3, 0)\n            shadow.Position = UDim2.new(math.random(), 0, math.random(), 0)\n            shadow.BackgroundColor3 = Color3.new(0, 0, 0)\n            shadow.BorderSizePixel = 0\n            shadow.ZIndex = 151\n            \n            -- Animate shadow movement\n            spawn(function()\n                while shadow and shadow.Parent do\n                    local newPos = UDim2.new(\n                        math.random(), 0,\n                        math.random(), 0\n                    )\n                    \n                    local moveTween = TweenService:Create(\n                        shadow,\n                        TweenInfo.new(math.random(3, 8), Enum.EasingStyle.Sine),\n                        {Position = newPos}\n                    )\n                    moveTween:Play()\n                    moveTween.Completed:Wait()\n                end\n            end)\n        end\n        \n        -- Whispering voices\n        local whisper = Instance.new('Sound', hallucinationUI)\n        whisper.SoundId = 'rbxassetid://whisper_sound'\n        whisper.Volume = 0.3\n        whisper.Looped = true\n        whisper:Play()\n        \n        return hallucinationUI\n    end\n    \n    return hallucinationUI\nend\n\n-- Time distortion effects\nlocal function applyTimeDistortion()\n    if timeDistortion ~= 1 then\n        -- Slow motion effect\n        RunService.Heartbeat:Connect(function()\n            task.wait(0.016 * timeDistortion)\n        end)\n        \n        -- Visual time distortion\n        local screenGui = player:WaitForChild('PlayerGui')\n        local timeUI = screenGui:FindFirstChild('TimeDistortion')\n        \n        if not timeUI then\n            timeUI = Instance.new('Frame', screenGui)\n            timeUI.Name = 'TimeDistortion'\n            timeUI.Size = UDim2.new(1, 0, 1, 0)\n            timeUI.Position = UDim2.new(0, 0, 0, 0)\n            timeUI.BackgroundColor3 = Color3.new(0.2, 0.2, 0.8)\n            timeUI.BackgroundTransparency = 0.9\n            timeUI.ZIndex = 100\n            \n            -- Time ripple effect\n            local ripple = Instance.new('Frame', timeUI)\n            ripple.Size = UDim2.new(0.2, 0, 0.2, 0)\n            ripple.Position = UDim2.new(0.4, 0, 0.4, 0)\n            ripple.BackgroundColor3 = Color3.new(0.5, 0.5, 1)\n            ripple.BackgroundTransparency = 0.5\n            ripple.ZIndex = 101\n            \n            -- Expand ripple\n            local expandTween = TweenService:Create(\n                ripple,\n                TweenInfo.new(2, Enum.EasingStyle.Sine),\n                {Size = UDim2.new(1, 0, 1, 0), BackgroundTransparency = 1}\n            )\n            expandTween:Play()\n            expandTween.Completed:Connect(function()\n                ripple:Destroy()\n            end)\n        end\n    end\nend\n\n-- Update psychological effects\nlocal function updatePsychologicalEffects()\n    -- Sanity affects reality distortion\n    if sanity < 50 then\n        realityDistortion = realityDistortion + 0.1\n        hallucinationLevel = hallucinationLevel + 0.05\n    else\n        realityDistortion = math.max(0, realityDistortion - 0.05)\n        hallucinationLevel = math.max(0, hallucinationLevel - 0.02)\n    end\n    \n    -- Reality distortion effects\n    if realityDistortion > 0.3 and tick() - lastDistortion > 10 then\n        createRealityDistortion()\n        lastDistortion = tick()\n    end\n    \n    -- Hallucination effects\n    if hallucinationLevel > 0.5 then\n        createHallucination()\n    end\n    \n    -- Time distortion\n    if sanity < 30 then\n        timeDistortion = 0.5\n    elseif sanity < 60 then\n        timeDistortion = 0.8\n    else\n        timeDistortion = 1\n    end\n    \n    applyTimeDistortion()\nend\n\n-- Main update loop\nRunService.Heartbeat:Connect(function()\n    updatePsychologicalEffects()\nend)\n\n-- Character respawn handling\nplayer.CharacterAdded:Connect(function(newCharacter)\n    character = newCharacter\n    humanoid = character:WaitForChild('Humanoid')\n    rootPart = character:WaitForChild('HumanoidRootPart')\n    sanity = 100\n    realityDistortion = 0\n    hallucinationLevel = 0\n    timeDistortion = 1\nend)\n"}
{"prompt": "Build advanced monster AI with learning and adaptation", "completion": "-- ServerScriptService/AdvancedMonsterAI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal PathfindingService = game:GetService('PathfindingService')\nlocal monster = workspace:WaitForChild('Monster')\nlocal humanoid = monster:WaitForChild('Humanoid')\nlocal rootPart = monster:WaitForChild('HumanoidRootPart')\n\n-- Advanced AI states\nlocal AI_STATES = {\n    IDLE = 'idle',\n    PATROL = 'patrol',\n    INVESTIGATE = 'investigate',\n    HUNT = 'hunt',\n    STALK = 'stalk',\n    AMBUSH = 'ambush',\n    RETREAT = 'retreat',\n    LEARN = 'learn'\n}\n\nlocal currentState = AI_STATES.IDLE\nlocal targetPlayer = nil\nlocal lastKnownPosition = nil\nlocal stateTimer = 0\nlocal learningData = {}\nlocal adaptationLevel = 0\nlocal successRate = 0.5\n\n-- Learning system\nlocal function updateLearningData(action, success)\n    if not learningData[action] then\n        learningData[action] = {successes = 0, attempts = 0, lastUsed = 0}\n    end\n    \n    local data = learningData[action]\n    data.attempts = data.attempts + 1\n    \n    if success then\n        data.successes = data.successes + 1\n    end\n    \n    data.lastUsed = tick()\n    data.successRate = data.successes / data.attempts\n    \n    -- Update overall success rate\n    local totalSuccesses = 0\n    local totalAttempts = 0\n    \n    for _, actionData in pairs(learningData) do\n        totalSuccesses = totalSuccesses + actionData.successes\n        totalAttempts = totalAttempts + actionData.attempts\n    end\n    \n    successRate = totalAttempts > 0 and totalSuccesses / totalAttempts or 0.5\nend\n\n-- Adaptation system\nlocal function updateAdaptation()\n    -- Increase adaptation based on success\n    if successRate > 0.7 then\n        adaptationLevel = math.min(100, adaptationLevel + 0.1)\n    elseif successRate < 0.3 then\n        adaptationLevel = math.max(0, adaptationLevel - 0.05)\n    end\n    \n    -- Adaptation affects AI behavior\n    if adaptationLevel > 80 then\n        -- Highly adaptive - use complex strategies\n        humanoid.WalkSpeed = 20\n        humanoid.JumpPower = 60\n    elseif adaptationLevel > 50 then\n        -- Moderately adaptive - balanced approach\n        humanoid.WalkSpeed = 16\n        humanoid.JumpPower = 45\n    else\n        -- Low adaptation - basic behavior\n        humanoid.WalkSpeed = 12\n        humanoid.JumpPower = 30\n    end\nend\n\n-- Advanced pathfinding with learning\nlocal function advancedPathfinding(targetPosition)\n    local path = PathfindingService:CreatePath({\n        AgentRadius = 2,\n        AgentHeight = 5,\n        AgentCanJump = true,\n        WaypointSpacing = 4\n    })\n    \n    path:ComputeAsync(rootPart.Position, targetPosition)\n    \n    if path.Status == Enum.PathStatus.Success then\n        local waypoints = path:GetWaypoints()\n        \n        -- Use learning data to optimize path\n        if learningData['pathfinding'] and learningData['pathfinding'].successRate > 0.8 then\n            -- High success rate - use direct path\n            for _, waypoint in ipairs(waypoints) do\n                humanoid:MoveTo(waypoint.Position)\n                humanoid.MoveToFinished:Wait()\n            end\n        else\n            -- Lower success rate - use cautious approach\n            for i, waypoint in ipairs(waypoints) do\n                -- Check for obstacles\n                local ray = Ray.new(rootPart.Position, (waypoint.Position - rootPart.Position).Unit * 5)\n                local hit = workspace:FindPartOnRay(ray)\n                \n                if hit and hit ~= rootPart then\n                    -- Obstacle detected - find alternative path\n                    local alternativePos = rootPart.Position + Vector3.new(\n                        math.random(-5, 5),\n                        0,\n                        math.random(-5, 5)\n                    )\n                    humanoid:MoveTo(alternativePos)\n                else\n                    humanoid:MoveTo(waypoint.Position)\n                end\n                \n                humanoid.MoveToFinished:Wait()\n            end\n        end\n        \n        updateLearningData('pathfinding', true)\n        return true\n    else\n        updateLearningData('pathfinding', false)\n        return false\n    end\nend\n\n-- Advanced hunting with learning\nlocal function advancedHunting()\n    if not targetPlayer or not targetPlayer.Character then return end\n    \n    local targetPos = targetPlayer.Character.PrimaryPart.Position\n    local distance = (targetPos - rootPart.Position).Magnitude\n    \n    -- Use learning data to choose hunting strategy\n    local strategies = {\n        'direct_chase',\n        'flanking',\n        'ambush',\n        'psychological_pressure'\n    }\n    \n    local bestStrategy = 'direct_chase'\n    local bestSuccessRate = 0\n    \n    for _, strategy in ipairs(strategies) do\n        if learningData[strategy] and learningData[strategy].successRate > bestSuccessRate then\n            bestStrategy = strategy\n            bestSuccessRate = learningData[strategy].successRate\n        end\n    end\n    \n    if bestStrategy == 'direct_chase' then\n        -- Direct pursuit\n        if advancedPathfinding(targetPos) then\n            updateLearningData('direct_chase', true)\n        else\n            updateLearningData('direct_chase', false)\n        end\n        \n    elseif bestStrategy == 'flanking' then\n        -- Flanking maneuver\n        local flankDirection = Vector3.new(\n            math.random(-1, 1),\n            0,\n            math.random(-1, 1)\n        ).Unit\n        local flankPos = targetPos + flankDirection * 15\n        \n        if advancedPathfinding(flankPos) then\n            updateLearningData('flanking', true)\n        else\n            updateLearningData('flanking', false)\n        end\n        \n    elseif bestStrategy == 'ambush' then\n        -- Set up ambush\n        local ambushPos = targetPos + Vector3.new(\n            math.random(-20, 20),\n            0,\n            math.random(-20, 20)\n        )\n        \n        if advancedPathfinding(ambushPos) then\n            updateLearningData('ambush', true)\n        else\n            updateLearningData('ambush', false)\n        end\n        \n    elseif bestStrategy == 'psychological_pressure' then\n        -- Psychological pressure through movement\n        local pressurePos = targetPos + Vector3.new(\n            math.random(-10, 10),\n            0,\n            math.random(-10, 10)\n        )\n        \n        if advancedPathfinding(pressurePos) then\n            updateLearningData('psychological_pressure', true)\n        else\n            updateLearningData('psychological_pressure', false)\n        end\n    end\n    \n    -- Attack if close enough\n    if distance < 5 then\n        local playerHum = targetPlayer.Character:FindFirstChild('Humanoid')\n        if playerHum then\n            playerHum.Health = playerHum.Health - 30\n            updateLearningData('attack', true)\n        end\n    end\nend\n\n-- State machine with learning\nlocal function updateAIState()\n    local nearestPlayer = nil\n    local nearestDistance = math.huge\n    \n    -- Find nearest player\n    for _, player in ipairs(Players:GetPlayers()) do\n        local char = player.Character\n        local hrp = char and char:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local distance = (hrp.Position - rootPart.Position).Magnitude\n            if distance < nearestDistance then\n                nearestDistance = distance\n                nearestPlayer = player\n            end\n        end\n    end\n    \n    targetPlayer = nearestPlayer\n    \n    -- State transitions based on learning\n    if nearestDistance < 10 then\n        if currentState ~= AI_STATES.HUNT then\n            currentState = AI_STATES.HUNT\n            stateTimer = 0\n        end\n    elseif nearestDistance < 30 then\n        if currentState ~= AI_STATES.STALK then\n            currentState = AI_STATES.STALK\n            stateTimer = 0\n        end\n    elseif nearestDistance < 50 then\n        if currentState ~= AI_STATES.INVESTIGATE then\n            currentState = AI_STATES.INVESTIGATE\n            stateTimer = 0\n        end\n    else\n        if currentState ~= AI_STATES.PATROL then\n            currentState = AI_STATES.PATROL\n            stateTimer = 0\n        end\n    end\n    \n    -- Learning state\n    if tick() - stateTimer > 60 then\n        currentState = AI_STATES.LEARN\n        stateTimer = tick()\n    end\nend\n\n-- Execute current state\nlocal function executeCurrentState()\n    if currentState == AI_STATES.IDLE then\n        -- Random idle behavior\n        if stateTimer > 5 then\n            local randomPos = rootPart.Position + Vector3.new(\n                math.random(-20, 20),\n                0,\n                math.random(-20, 20)\n            )\n            humanoid:MoveTo(randomPos)\n            stateTimer = 0\n        end\n        \n    elseif currentState == AI_STATES.PATROL then\n        -- Systematic patrol with learning\n        if stateTimer > 10 then\n            local patrolPos = rootPart.Position + Vector3.new(\n                math.random(-30, 30),\n                0,\n                math.random(-30, 30)\n            )\n            \n            if advancedPathfinding(patrolPos) then\n                updateLearningData('patrol', true)\n            else\n                updateLearningData('patrol', false)\n            end\n            \n            stateTimer = 0\n        end\n        \n    elseif currentState == AI_STATES.INVESTIGATE then\n        -- Investigate with caution\n        if targetPlayer and targetPlayer.Character then\n            local targetPos = targetPlayer.Character.PrimaryPart.Position\n            local investigatePos = targetPos + Vector3.new(\n                math.random(-15, 15),\n                0,\n                math.random(-15, 15)\n            )\n            \n            if advancedPathfinding(investigatePos) then\n                updateLearningData('investigate', true)\n            else\n                updateLearningData('investigate', false)\n            end\n        end\n        \n    elseif currentState == AI_STATES.HUNT then\n        -- Advanced hunting\n        advancedHunting()\n        \n    elseif currentState == AI_STATES.STALK then\n        -- Stealthy stalking\n        if targetPlayer and targetPlayer.Character then\n            local targetPos = targetPlayer.Character.PrimaryPart.Position\n            local stalkPos = targetPos + Vector3.new(\n                math.random(-20, 20),\n                0,\n                math.random(-20, 20)\n            )\n            \n            if advancedPathfinding(stalkPos) then\n                updateLearningData('stalk', true)\n            else\n                updateLearningData('stalk', false)\n            end\n        end\n        \n    elseif currentState == AI_STATES.LEARN then\n        -- Analyze and learn from recent actions\n        local totalActions = 0\n        local successfulActions = 0\n        \n        for action, data in pairs(learningData) do\n            totalActions = totalActions + data.attempts\n            successfulActions = successfulActions + data.successes\n        end\n        \n        if totalActions > 0 then\n            local currentSuccessRate = successfulActions / totalActions\n            \n            -- Adjust behavior based on learning\n            if currentSuccessRate < 0.4 then\n                -- Poor performance - try new strategies\n                adaptationLevel = math.max(0, adaptationLevel - 5)\n            elseif currentSuccessRate > 0.8 then\n                -- Good performance - maintain current approach\n                adaptationLevel = math.min(100, adaptationLevel + 2)\n            end\n        end\n        \n        currentState = AI_STATES.PATROL\n        stateTimer = 0\n    end\n    \n    stateTimer = stateTimer + 1\nend\n\n-- Main AI update loop\nRunService.Heartbeat:Connect(function()\n    updateAIState()\n    executeCurrentState()\n    updateAdaptation()\nend)\n\n-- Initialize learning data\nfor _, action in ipairs({'patrol', 'investigate', 'hunt', 'stalk', 'attack', 'pathfinding'}) do\n    learningData[action] = {successes = 0, attempts = 0, lastUsed = 0, successRate = 0.5}\nend\n"}
{"prompt": "Generate survival horror with resource management and crafting", "completion": "-- StarterPlayerScripts/SurvivalHorror.client.lua\nlocal Players = game:GetService('Players')\nlocal UserInputService = game:GetService('UserInputService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal TweenService = game:GetService('TweenService')\nlocal RunService = game:GetService('RunService')\n\nlocal player = Players.LocalPlayer\nlocal character = player.Character or player.CharacterAdded:Wait()\nlocal humanoid = character:WaitForChild('Humanoid')\nlocal rootPart = character:WaitForChild('HumanoidRootPart')\n\n-- Survival variables\nlocal health = 100\nlocal hunger = 100\nlocal thirst = 100\nlocal stamina = 100\nlocal temperature = 37\nlocal radiation = 0\nlocal infection = 0\n\n-- Resource management\nlocal resources = {\n    food = 0,\n    water = 0,\n    medicine = 0,\n    materials = 0,\n    fuel = 0,\n    batteries = 0\n}\n\n-- Crafting recipes\nlocal craftingRecipes = {\n    ['medkit'] = {\n        materials = {'bandage', 'antiseptic', 'painkillers'},\n        time = 5,\n        result = 'medkit'\n    },\n    ['weapon'] = {\n        materials = {'metal_scrap', 'wood', 'rope'},\n        time = 10,\n        result = 'improvised_weapon'\n    },\n    ['trap'] = {\n        materials = {'wire', 'spring', 'trigger'},\n        time = 8,\n        result = 'bear_trap'\n    },\n    ['shelter'] = {\n        materials = {'wood', 'nails', 'tarp'},\n        time = 15,\n        result = 'basic_shelter'\n    },\n    ['filter'] = {\n        materials = {'charcoal', 'cloth', 'container'},\n        time = 6,\n        result = 'water_filter'\n    }\n}\n\n-- Crafting system\nlocal function craftItem(recipeName)\n    local recipe = craftingRecipes[recipeName]\n    if not recipe then return false, 'Recipe not found' end\n    \n    -- Check materials\n    for _, material in ipairs(recipe.materials) do\n        if not hasMaterial(material) then\n            return false, 'Missing material: ' .. material\n        end\n    end\n    \n    -- Start crafting\n    local craftingUI = createCraftingUI(recipe)\n    \n    -- Crafting timer\n    spawn(function()\n        for i = recipe.time, 0, -1 do\n            updateCraftingProgress(craftingUI, i, recipe.time)\n            task.wait(1)\n        end\n        \n        -- Complete crafting\n        completeCrafting(recipeName, craftingUI)\n    end)\n    \n    return true, 'Crafting started'\nend\n\n-- Material checking\nlocal function hasMaterial(materialName)\n    -- Check inventory for material\n    for _, item in ipairs(inventory) do\n        if item.name == materialName then\n            return true\n        end\n    end\n    return false\nend\n\n-- Create crafting UI\nlocal function createCraftingUI(recipe)\n    local screenGui = player:WaitForChild('PlayerGui')\n    local craftingUI = Instance.new('Frame', screenGui)\n    craftingUI.Name = 'CraftingUI'\n    craftingUI.Size = UDim2.new(0.3, 0, 0.4, 0)\n    craftingUI.Position = UDim2.new(0.35, 0, 0.3, 0)\n    craftingUI.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)\n    craftingUI.BorderSizePixel = 2\n    craftingUI.BorderColor3 = Color3.new(0.5, 0.5, 0.5)\n    craftingUI.ZIndex = 100\n    \n    -- Title\n    local title = Instance.new('TextLabel', craftingUI)\n    title.Size = UDim2.new(1, 0, 0.2, 0)\n    title.Text = 'Crafting: ' .. recipe.result\n    title.TextColor3 = Color3.new(1, 1, 1)\n    title.BackgroundTransparency = 1\n    title.Font = Enum.Font.SourceSansBold\n    title.TextScaled = true\n    \n    -- Progress bar\n    local progressBar = Instance.new('Frame', craftingUI)\n    progressBar.Size = UDim2.new(0.8, 0, 0.1, 0)\n    progressBar.Position = UDim2.new(0.1, 0, 0.4, 0)\n    progressBar.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)\n    progressBar.BorderSizePixel = 1\n    progressBar.BorderColor3 = Color3.new(0.7, 0.7, 0.7)\n    \n    local progressFill = Instance.new('Frame', progressBar)\n    progressFill.Size = UDim2.new(0, 0, 1, 0)\n    progressFill.BackgroundColor3 = Color3.new(0, 1, 0)\n    progressFill.BorderSizePixel = 0\n    progressFill.Name = 'ProgressFill'\n    \n    -- Materials list\n    local materialsLabel = Instance.new('TextLabel', craftingUI)\n    materialsLabel.Size = UDim2.new(1, 0, 0.3, 0)\n    materialsLabel.Position = UDim2.new(0, 0, 0.6, 0)\n    materialsLabel.Text = 'Materials: ' .. table.concat(recipe.materials, ', ')\n    materialsLabel.TextColor3 = Color3.new(1, 1, 0)\n    materialsLabel.BackgroundTransparency = 1\n    materialsLabel.Font = Enum.Font.SourceSans\n    materialsLabel.TextScaled = true\n    \n    return craftingUI\nend\n\n-- Update crafting progress\nlocal function updateCraftingProgress(craftingUI, current, total)\n    local progressFill = craftingUI:FindFirstChild('ProgressFill')\n    if progressFill then\n        local progress = (total - current) / total\n        progressFill.Size = UDim2.new(progress, 0, 1, 0)\n    end\nend\n\n-- Complete crafting\nlocal function completeCrafting(recipeName, craftingUI)\n    local recipe = craftingRecipes[recipeName]\n    if not recipe then return end\n    \n    -- Remove materials\n    for _, material in ipairs(recipe.materials) do\n        removeMaterial(material)\n    end\n    \n    -- Add crafted item\n    addItem(recipe.result, 1)\n    \n    -- Success message\n    local successLabel = Instance.new('TextLabel', craftingUI)\n    successLabel.Size = UDim2.new(1, 0, 0.2, 0)\n    successLabel.Position = UDim2.new(0, 0, 0.8, 0)\n    successLabel.Text = 'Crafting Complete!'\n    successLabel.TextColor3 = Color3.new(0, 1, 0)\n    successLabel.BackgroundTransparency = 1\n    successLabel.Font = Enum.Font.SourceSansBold\n    successLabel.TextScaled = true\n    \n    -- Remove crafting UI after delay\n    task.wait(2)\n    craftingUI:Destroy()\nend\n\n-- Remove material\nlocal function removeMaterial(materialName)\n    for i, item in ipairs(inventory) do\n        if item.name == materialName then\n            if item.quantity > 1 then\n                item.quantity = item.quantity - 1\n            else\n                table.remove(inventory, i)\n            end\n            break\n        end\n    end\n    updateInventoryUI()\nend\n\n-- Survival mechanics\nlocal function updateSurvival()\n    -- Hunger decreases over time\n    hunger = math.max(0, hunger - 0.1)\n    \n    -- Thirst decreases faster\n    thirst = math.max(0, thirst - 0.15)\n    \n    -- Stamina affects movement\n    if humanoid.MoveDirection.Magnitude > 0 then\n        stamina = math.max(0, stamina - 0.2)\n    else\n        stamina = math.min(100, stamina + 0.1)\n    end\n    \n    -- Temperature affects health\n    if temperature < 35 or temperature > 40 then\n        health = math.max(0, health - 0.05)\n    end\n    \n    -- Radiation affects health\n    if radiation > 50 then\n        health = math.max(0, health - 0.1)\n        infection = math.min(100, infection + 0.05)\n    end\n    \n    -- Infection affects all stats\n    if infection > 0 then\n        hunger = math.max(0, hunger - 0.05)\n        thirst = math.max(0, thirst - 0.05)\n        stamina = math.max(0, stamina - 0.05)\n    end\n    \n    -- Apply effects to humanoid\n    if stamina < 20 then\n        humanoid.WalkSpeed = 12\n        humanoid.JumpPower = 30\n    else\n        humanoid.WalkSpeed = 20\n        humanoid.JumpPower = 50\n    end\n    \n    humanoid.Health = health\nend\n\n-- Resource gathering\nlocal function gatherResource(resourceType, amount)\n    if resources[resourceType] then\n        resources[resourceType] = resources[resourceType] + amount\n        updateResourceUI()\n        return true, 'Resource gathered'\n    end\n    return false, 'Invalid resource type'\nend\n\n-- Resource consumption\nlocal function consumeResource(resourceType, amount)\n    if resources[resourceType] and resources[resourceType] >= amount then\n        resources[resourceType] = resources[resourceType] - amount\n        updateResourceUI()\n        return true, 'Resource consumed'\n    end\n    return false, 'Not enough resources'\nend\n\n-- Use food\nlocal function useFood()\n    if consumeResource('food', 1) then\n        hunger = math.min(100, hunger + 25)\n        return true, 'Food consumed'\n    end\n    return false, 'No food available'\nend\n\n-- Use water\nlocal function useWater()\n    if consumeResource('water', 1) then\n        thirst = math.min(100, thirst + 30)\n        return true, 'Water consumed'\n    end\n    return false, 'No water available'\nend\n\n-- Use medicine\nlocal function useMedicine()\n    if consumeResource('medicine', 1) then\n        infection = math.max(0, infection - 20)\n        health = math.min(100, health + 15)\n        return true, 'Medicine used'\n    end\n    return false, 'No medicine available'\nend\n\n-- Create resource UI\nlocal function createResourceUI()\n    local screenGui = player:WaitForChild('PlayerGui')\n    local resourceUI = screenGui:FindFirstChild('ResourceUI')\n    \n    if not resourceUI then\n        resourceUI = Instance.new('Frame', screenGui)\n        resourceUI.Name = 'ResourceUI'\n        resourceUI.Size = UDim2.new(0.25, 0, 0.6, 0)\n        resourceUI.Position = UDim2.new(0.75, 0, 0.2, 0)\n        resourceUI.BackgroundColor3 = Color3.new(0.1, 0.1, 0.1)\n        resourceUI.BorderSizePixel = 2\n        resourceUI.BorderColor3 = Color3.new(0.3, 0.3, 0.3)\n        \n        -- Title\n        local title = Instance.new('TextLabel', resourceUI)\n        title.Size = UDim2.new(1, 0, 0.1, 0)\n        title.Text = 'SURVIVAL STATUS'\n        title.TextColor3 = Color3.new(1, 1, 1)\n        title.BackgroundTransparency = 1\n        title.Font = Enum.Font.SourceSansBold\n        title.TextScaled = true\n        \n        -- Health bar\n        local healthBar = createStatusBar(resourceUI, 'Health', health, 0.15, Color3.new(1, 0, 0))\n        \n        -- Hunger bar\n        local hungerBar = createStatusBar(resourceUI, 'Hunger', hunger, 0.25, Color3.new(1, 0.5, 0))\n        \n        -- Thirst bar\n        local thirstBar = createStatusBar(resourceUI, 'Thirst', thirst, 0.35, Color3.new(0, 0.5, 1))\n        \n        -- Stamina bar\n        local staminaBar = createStatusBar(resourceUI, 'Stamina', stamina, 0.45, Color3.new(0, 1, 0))\n        \n        -- Temperature display\n        local tempLabel = Instance.new('TextLabel', resourceUI)\n        tempLabel.Size = UDim2.new(1, 0, 0.08, 0)\n        tempLabel.Position = UDim2.new(0, 0, 0.55, 0)\n        tempLabel.Text = 'Temperature: ' .. math.floor(temperature) .. '°C'\n        tempLabel.TextColor3 = Color3.new(1, 1, 1)\n        tempLabel.BackgroundTransparency = 1\n        tempLabel.Font = Enum.Font.SourceSans\n        tempLabel.TextScaled = true\n        \n        -- Radiation display\n        local radLabel = Instance.new('TextLabel', resourceUI)\n        radLabel.Size = UDim2.new(1, 0, 0.08, 0)\n        radLabel.Position = UDim2.new(0, 0, 0.63, 0)\n        radLabel.Text = 'Radiation: ' .. math.floor(radiation) .. '%'\n        radLabel.TextColor3 = Color3.new(0, 1, 0)\n        radLabel.BackgroundTransparency = 1\n        radLabel.Font = Enum.Font.SourceSans\n        radLabel.TextScaled = true\n        \n        -- Infection display\n        local infLabel = Instance.new('TextLabel', resourceUI)\n        infLabel.Size = UDim2.new(1, 0, 0.08, 0)\n        infLabel.Position = UDim2.new(0, 0, 0.71, 0)\n        infLabel.Text = 'Infection: ' .. math.floor(infection) .. '%'\n        infLabel.TextColor3 = Color3.new(1, 0, 0)\n        infLabel.BackgroundTransparency = 1\n        infLabel.Font = Enum.Font.SourceSans\n        infLabel.TextScaled = true\n        \n        -- Resources display\n        local resourcesLabel = Instance.new('TextLabel', resourceUI)\n        resourcesLabel.Size = UDim2.new(1, 0, 0.08, 0)\n        resourcesLabel.Position = UDim2.new(0, 0, 0.79, 0)\n        resourcesLabel.Text = 'Resources: ' .. getTotalResources()\n        resourcesLabel.TextColor3 = Color3.new(1, 1, 0)\n        resourcesLabel.BackgroundTransparency = 1\n        resourcesLabel.Font = Enum.Font.SourceSans\n        resourcesLabel.TextScaled = true\n        \n        -- Action buttons\n        local useFoodBtn = createActionButton(resourceUI, 'Use Food', 0.87, useFood)\n        local useWaterBtn = createActionButton(resourceUI, 'Use Water', 0.93, useWater)\n        local useMedBtn = createActionButton(resourceUI, 'Use Medicine', 0.99, useMedicine)\n    end\n    \n    return resourceUI\nend\n\n-- Create status bar\nlocal function createStatusBar(parent, name, value, yPos, color)\n    local barContainer = Instance.new('Frame', parent)\n    barContainer.Size = UDim2.new(0.9, 0, 0.06, 0)\n    barContainer.Position = UDim2.new(0.05, 0, yPos, 0)\n    barContainer.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)\n    barContainer.BorderSizePixel = 1\n    barContainer.BorderColor3 = Color3.new(0.7, 0.7, 0.7)\n    \n    local barFill = Instance.new('Frame', barContainer)\n    barFill.Size = UDim2.new(value / 100, 0, 1, 0)\n    barFill.BackgroundColor3 = color\n    barFill.BorderSizePixel = 0\n    barFill.Name = name .. 'Fill'\n    \n    local barLabel = Instance.new('TextLabel', barContainer)\n    barLabel.Size = UDim2.new(1, 0, 1, 0)\n    barLabel.Text = name .. ': ' .. math.floor(value) .. '%'\n    barLabel.TextColor3 = Color3.new(1, 1, 1)\n    barLabel.BackgroundTransparency = 1\n    barLabel.Font = Enum.Font.SourceSansBold\n    barLabel.TextScaled = true\n    barLabel.ZIndex = 10\n    \n    return barContainer\nend\n\n-- Create action button\nlocal function createActionButton(parent, text, yPos, action)\n    local button = Instance.new('TextButton', parent)\n    button.Size = UDim2.new(0.4, 0, 0.04, 0)\n    button.Position = UDim2.new(0.05, 0, yPos, 0)\n    button.Text = text\n    button.TextColor3 = Color3.new(1, 1, 1)\n    button.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)\n    button.BorderSizePixel = 1\n    button.BorderColor3 = Color3.new(0.5, 0.5, 0.5)\n    button.Font = Enum.Font.SourceSans\n    button.TextScaled = true\n    \n    button.MouseButton1Click:Connect(action)\n    \n    return button\nend\n\n-- Get total resources\nlocal function getTotalResources()\n    local total = 0\n    for _, amount in pairs(resources) do\n        total = total + amount\n    end\n    return total\nend\n\n-- Update resource UI\nlocal function updateResourceUI()\n    local screenGui = player:WaitForChild('PlayerGui')\n    local resourceUI = screenGui:FindFirstChild('ResourceUI')\n    \n    if resourceUI then\n        -- Update status bars\n        local healthBar = resourceUI:FindFirstChild('HealthFill')\n        if healthBar then\n            healthBar.Size = UDim2.new(health / 100, 0, 1, 0)\n        end\n        \n        local hungerBar = resourceUI:FindFirstChild('HungerFill')\n        if hungerBar then\n            hungerBar.Size = UDim2.new(hunger / 100, 0, 1, 0)\n        end\n        \n        local thirstBar = resourceUI:FindFirstChild('ThirstFill')\n        if thirstBar then\n            thirstBar.Size = UDim2.new(thirst / 100, 0, 1, 0)\n        end\n        \n        local staminaBar = resourceUI:FindFirstChild('StaminaFill')\n        if staminaBar then\n            staminaBar.Size = UDim2.new(stamina / 100, 0, 1, 0)\n        end\n        \n        -- Update labels\n        local tempLabel = resourceUI:FindFirstChild('TextLabel', true)\n        if tempLabel then\n            tempLabel.Text = 'Temperature: ' .. math.floor(temperature) .. '°C'\n        end\n        \n        local radLabel = resourceUI:FindFirstChild('TextLabel', true)\n        if radLabel then\n            radLabel.Text = 'Radiation: ' .. math.floor(radiation) .. '%'\n        end\n        \n        local infLabel = resourceUI:FindFirstChild('TextLabel', true)\n        if infLabel then\n            infLabel.Text = 'Infection: ' .. math.floor(infection) .. '%'\n        end\n        \n        local resourcesLabel = resourceUI:FindFirstChild('TextLabel', true)\n        if resourcesLabel then\n            resourcesLabel.Text = 'Resources: ' .. getTotalResources()\n        end\n    end\nend\n\n-- Input handling\nUserInputService.InputBegan:Connect(function(input, gameProcessed)\n    if gameProcessed then return end\n    \n    if input.KeyCode == Enum.KeyCode.R then\n        -- Toggle resource UI\n        local screenGui = player:WaitForChild('PlayerGui')\n        local resourceUI = screenGui:FindFirstChild('ResourceUI')\n        if resourceUI then\n            resourceUI.Visible = not resourceUI.Visible\n        end\n    elseif input.KeyCode == Enum.KeyCode.C then\n        -- Open crafting menu\n        local screenGui = player:WaitForChild('PlayerGui')\n        local craftingMenu = screenGui:FindFirstChild('CraftingMenu')\n        if not craftingMenu then\n            createCraftingMenu()\n        else\n            craftingMenu.Visible = not craftingMenu.Visible\n        end\n    end\nend)\n\n-- Main update loop\nRunService.Heartbeat:Connect(function()\n    updateSurvival()\n    updateResourceUI()\nend)\n\n-- Initialize\ncreateResourceUI()\n\n-- Character respawn handling\nplayer.CharacterAdded:Connect(function(newCharacter)\n    character = newCharacter\n    humanoid = character:WaitForChild('Humanoid')\n    rootPart = character:WaitForChild('HumanoidRootPart')\n    health = 100\n    hunger = 100\n    thirst = 100\n    stamina = 100\n    temperature = 37\n    radiation = 0\n    infection = 0\nend)\n"}
{"prompt": "Design stealth horror with noise propagation and hearing-based AI", "completion": "-- ServerScriptService/Stealth/NoiseSystem.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal Noise = {}\nNoise.listeners = {}\nfunction Noise.register(root, threshold, onHear)\n    table.insert(Noise.listeners, {root=root, threshold=threshold or 0.3, onHear=onHear})\nend\nlocal function emitNoise(position, loudness)\n    for _, d in ipairs(Noise.listeners) do\n        if d.root then\n            local distance = (d.root.Position - position).Magnitude\n            local perceived = loudness / math.max(1, distance)\n            if perceived >= d.threshold and type(d.onHear) == 'function' then\n                d.onHear(position, perceived)\n            end\n        end\n    end\nend\nPlayers.PlayerAdded:Connect(function(p) p.CharacterAdded:Connect(function(char)\n    local hum = char:WaitForChild('Humanoid')\n    local root = char:WaitForChild('HumanoidRootPart')\n    local last = root.Position\n    RunService.Heartbeat:Connect(function(dt)\n        local v = (root.Position - last).Magnitude\n        last = root.Position\n        local loudness = math.clamp(v * (hum.WalkSpeed/16), 0, 3)\n        if loudness > 0.05 then emitNoise(root.Position, loudness) end\n    end)\nend) end)\nreturn {emitNoise = emitNoise, register = Noise.register}\n"}
{"prompt": "Implement hiding spots with breath control and detection cones", "completion": "-- ServerScriptService/Stealth/HidingSpots.server.lua\nlocal Players = game:GetService('Players')\nlocal CollectionService = game:GetService('CollectionService')\nlocal HIDE_TAG = 'HidingSpot'\nlocal breathMax = 100\nlocal breathDrain = 8\nlocal breathRegen = 12\nlocal playerState = {}\nlocal function setHiding(player, spot, hiding)\n    playerState[player] = playerState[player] or {breath = breathMax}\n    local st = playerState[player]\n    st.isHiding = hiding\n    st.spot = hiding and spot or nil\n    if hiding and spot and spot:IsA('BasePart') then\n        local char = player.Character\n        if char and char.PrimaryPart then\n            char:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, spot.Size.Y/2 + 1, 0))\n        end\n    end\nend\nfor _, spot in ipairs(CollectionService:GetTagged(HIDE_TAG)) do\n    local prompt = spot:FindFirstChildOfClass('ProximityPrompt') or Instance.new('ProximityPrompt', spot)\n    prompt.ActionText = 'Hide'\n    prompt.ObjectText = 'Closet'\n    prompt.HoldDuration = 0.15\n    prompt.MaxActivationDistance = 6\n    prompt.Triggered:Connect(function(player)\n        local st = playerState[player]\n        if st and st.isHiding then setHiding(player, spot, false) else setHiding(player, spot, true) end\n    end)\nend\nspawn(function() while true do\n    for player, st in pairs(playerState) do\n        if st.isHiding then\n            st.breath = math.max(0, st.breath - breathDrain * 0.25)\n            if st.breath <= 0 then setHiding(player, st.spot, false) end\n        else\n            st.breath = math.min(breathMax, st.breath + breathRegen * 0.25)\n        end\n    end\n    wait(0.25)\nend end)\nlocal function isPlayerVisible(npcRoot, player, coneAngleDeg, maxDistance)\n    local st = playerState[player]\n    if st and st.isHiding then return false end\n    local char = player.Character\n    local hrp = char and char:FindFirstChild('HumanoidRootPart')\n    if not hrp then return false end\n    local toPlayer = (hrp.Position - npcRoot.Position)\n    if toPlayer.Magnitude > maxDistance then return false end\n    local forward = npcRoot.CFrame.LookVector\n    local angle = math.deg(math.acos(forward:Dot(toPlayer.Unit)))\n    if angle > coneAngleDeg * 0.5 then return false end\n    local ray = Ray.new(npcRoot.Position, toPlayer.Unit * toPlayer.Magnitude)\n    local hit = workspace:FindPartOnRay(ray, npcRoot.Parent)\n    return not hit or hit:IsDescendantOf(char)\nend\nreturn { setHiding = setHiding, isPlayerVisible = isPlayerVisible }\n"}
{"prompt": "Add power and lighting system with breaker panel and fear in darkness", "completion": "-- ServerScriptService/Environment/PowerSystem.server.lua\nlocal Lighting = game:GetService('Lighting')\nlocal CollectionService = game:GetService('CollectionService')\nlocal Players = game:GetService('Players')\nlocal POWERED_TAG = 'PoweredLight'\nlocal breakerOn = true\nlocal darknessFearPerSecond = 0.7\nlocal playerFear = {}\nlocal function setPower(state)\n    breakerOn = state\n    for _, inst in ipairs(CollectionService:GetTagged(POWERED_TAG)) do\n        local light = inst:FindFirstChildOfClass('PointLight') or inst:FindFirstChildOfClass('SpotLight') or inst:FindFirstChildOfClass('SurfaceLight')\n        if light then light.Enabled = state end\n    end\n    Lighting.Brightness = state and 2 or 0.2\n    Lighting.ClockTime = state and 21 or 2\nend\nlocal function nearAnyLight(pos, radius)\n    for _, inst in ipairs(CollectionService:GetTagged(POWERED_TAG)) do\n        local light = inst:FindFirstChildOfClass('PointLight')\n        if light and light.Enabled then\n            if (inst.Position - pos).Magnitude <= (light.Range + radius) then return true end\n        end\n    end\n    return false\nend\nfor _, panel in ipairs(CollectionService:GetTagged('BreakerPanel')) do\n    local prompt = panel:FindFirstChildOfClass('ProximityPrompt') or Instance.new('ProximityPrompt', panel)\n    prompt.ActionText = 'Toggle Power'\n    prompt.HoldDuration = 0.25\n    prompt.Triggered:Connect(function() setPower(not breakerOn) end)\nend\nspawn(function() while true do\n    for _, player in ipairs(Players:GetPlayers()) do\n        local char = player.Character\n        local hrp = char and char:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local safe = breakerOn and nearAnyLight(hrp.Position, 3)\n            local delta = safe and -1.2 or darknessFearPerSecond\n            playerFear[player] = math.clamp((playerFear[player] or 0) + delta, 0, 100)\n            if playerFear[player] >= 100 then player:Kick('You surrendered to the darkness.') end\n        end\n    end\n    wait(1)\nend end)\nsetPower(true)\nreturn { setPower = setPower, playerFear = playerFear }\n"}
{"prompt": "Create dynamic horror event director that escalates tension organically", "completion": "-- ServerScriptService/Director/EventDirector.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal Director = { tension = 0, max = 100 }\nlocal function clamp(v,a,b) return math.max(a, math.min(b,v)) end\nlocal function whisper(player)\n    local char = player.Character; local hrp = char and char:FindFirstChild('HumanoidRootPart'); if not hrp then return end\n    local s = Instance.new('Sound'); s.SoundId = 'rbxassetid://9123931338'; s.Volume = 0.25; s.RollOffMaxDistance = 18; s.Parent = hrp; s:Play(); game.Debris:AddItem(s,6)\nend\nlocal function flicker()\n    local lights = {}; for _,inst in ipairs(workspace:GetDescendants()) do if inst:IsA('PointLight') or inst:IsA('SurfaceLight') or inst:IsA('SpotLight') then table.insert(lights,inst) end end\n    if #lights == 0 then return end; local l = lights[math.random(1,#lights)]; local e = l.Enabled; l.Enabled = not e; delay(0.2 + math.random(), function() l.Enabled = e end)\nend\nlocal function minorEvent() for _,p in ipairs(Players:GetPlayers()) do if math.random()<0.4 then whisper(p) end end; if math.random()<0.6 then flicker() end end\nlocal function majorEvent() for _,p in ipairs(Players:GetPlayers()) do whisper(p) end end\nRunService.Heartbeat:Connect(function(dt) Director.tension = clamp(Director.tension + dt*0.35,0,Director.max); if Director.tension>80 and math.random()<0.02 then majorEvent() end; if Director.tension>30 and math.random()<0.05 then minorEvent() end end)\nreturn Director\n"}
{"prompt": "Create keys and locks system with procedural objectives", "completion": "-- ServerScriptService/Gameplay/KeysAndLocks.server.lua\nlocal CollectionService = game:GetService('CollectionService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Remote = Instance.new('RemoteEvent', ReplicatedStorage); Remote.Name = 'KeyUsed'\nlocal KEY_TAG = 'KeyItem'\nlocal LOCK_TAG = 'LockableDoor'\nlocal keyIdToDoor = {} -- dynamic mapping per round\n\nlocal function randomizePairs()\n    local keys = CollectionService:GetTagged(KEY_TAG)\n    local locks = CollectionService:GetTagged(LOCK_TAG)\n    for i, key in ipairs(keys) do\n        local door = locks[((i-1)%#locks)+1]\n        keyIdToDoor[key:GetAttribute('KeyId') or i] = door\n    end\nend\n\nfor _, key in ipairs(CollectionService:GetTagged(KEY_TAG)) do\n    local prompt = key:FindFirstChildOfClass('ProximityPrompt') or Instance.new('ProximityPrompt', key)\n    prompt.ActionText = 'Pick Up Key'\n    prompt.Triggered:Connect(function(player)\n        local backpack = player:FindFirstChild('Backpack')\n        if backpack then key.Parent = backpack end\n    end)\nend\n\nfor _, door in ipairs(CollectionService:GetTagged(LOCK_TAG)) do\n    local prompt = door:FindFirstChildOfClass('ProximityPrompt') or Instance.new('ProximityPrompt', door)\n    prompt.ActionText = 'Unlock'\n    prompt.RequiresLineOfSight = false\n    prompt.Triggered:Connect(function(player)\n        local bp = player:FindFirstChild('Backpack')\n        local matched = false\n        if bp then\n            for _, tool in ipairs(bp:GetChildren()) do\n                if tool:IsA('Tool') and CollectionService:HasTag(tool, KEY_TAG) then\n                    local id = tool:GetAttribute('KeyId') or 0\n                    if keyIdToDoor[id] == door then\n                        matched = true; tool:Destroy(); break\n                    end\n                end\n            end\n        end\n        if matched then\n            door.CanCollide = false; door.Transparency = 0.6; Remote:FireAllClients(player, door.Name)\n        end\n    end)\nend\n\nrandomizePairs()\nreturn { randomizePairs = randomizePairs }\n"}
{"prompt": "Add barricade system with destructible boards and force thresholds", "completion": "-- ServerScriptService/Environment/Barricade.server.lua\nlocal CollectionService = game:GetService('CollectionService')\nlocal RunService = game:GetService('RunService')\nlocal BARR_TAG = 'BarricadeBoard'\n\nfor _, board in ipairs(CollectionService:GetTagged(BARR_TAG)) do\n    board:SetAttribute('Integrity', board:GetAttribute('Integrity') or 100)\nend\n\nlocal function applyForce(board, force)\n    local integrity = (board:GetAttribute('Integrity') or 100) - force\n    board:SetAttribute('Integrity', integrity)\n    if integrity <= 0 then\n        board.Anchored = false\n        board.BrickColor = BrickColor.new('Reddish brown')\n        board:BreakJoints()\n        game.Debris:AddItem(board, 8)\n    end\nend\n\nRunService.Heartbeat:Connect(function()\n    for _, board in ipairs(CollectionService:GetTagged(BARR_TAG)) do\n        if math.random() < 0.005 then\n            applyForce(board, math.random(8,16)) -- ambient strain from entity attacks\n        end\n    end\nend)\n\nreturn { applyForce = applyForce }\n"}
{"prompt": "Create ritual summoning system with multi-step phase checks", "completion": "-- ServerScriptService/Events/Ritual.server.lua\nlocal CollectionService = game:GetService('CollectionService')\nlocal Players = game:GetService('Players')\nlocal PHASES = { 'draw', 'offer', 'chant', 'ignite', 'seal' }\nlocal progress = 0\nlocal ritualCircle = workspace:FindFirstChild('RitualCircle')\n\nlocal function advance(player)\n    progress += 1\n    if progress >= #PHASES then\n        -- summon event\n        local e = Instance.new('Part', workspace); e.Size = Vector3.new(2,2,2); e.Anchored = true; e.BrickColor = BrickColor.new('Really black'); e.Position = ritualCircle.Position + Vector3.new(0,4,0)\n        local p = Instance.new('PointLight', e); p.Brightness = 5; p.Range = 16\n    end\nend\n\nfor i, phase in ipairs(PHASES) do\n    for _, obj in ipairs(CollectionService:GetTagged('Ritual_'..phase)) do\n        local prompt = obj:FindFirstChildOfClass('ProximityPrompt') or Instance.new('ProximityPrompt', obj)\n        prompt.ActionText = 'Ritual: '..phase\n        prompt.Triggered:Connect(function(player) if progress+1 == i then advance(player) end end)\n    end\nend\n\nreturn { advance = advance }\n"}
{"prompt": "Implement dynamic footsteps and occlusion audio system", "completion": "-- ServerScriptService/Audio/Footsteps.server.lua\nlocal Players = game:GetService('Players')\nlocal SoundService = game:GetService('SoundService')\nlocal Materials = {\n    [Enum.Material.Grass] = 'rbxassetid://13114759',\n    [Enum.Material.Wood] = 'rbxassetid://91142851',\n    Default = 'rbxassetid://13114759'\n}\n\nlocal function playStep(hrp, material)\n    local s = Instance.new('Sound')\n    s.SoundId = Materials[material] or Materials.Default\n    s.Volume = 0.35\n    s.RollOffMaxDistance = 35\n    s.Parent = hrp\n    s:Play()\n    game.Debris:AddItem(s, 2)\nend\n\nPlayers.PlayerAdded:Connect(function(p)\n    p.CharacterAdded:Connect(function(c)\n        local hum = c:WaitForChild('Humanoid')\n        local hrp = c:WaitForChild('HumanoidRootPart')\n        hum.StateChanged:Connect(function(_, new) if new == Enum.HumanoidStateType.Running then playStep(hrp, hrp.Material) end end)\n    end)\nend)\n\nreturn {}\n"}
{"prompt": "Build enemy vision cones with peripheral awareness and cover checks", "completion": "-- ServerScriptService/AI/Vision.server.lua\nlocal RunService = game:GetService('RunService')\nlocal Players = game:GetService('Players')\n\nlocal function canSee(npcRoot, target, coneDeg, peripheralDeg, maxDist)\n    local hrp = target.Character and target.Character:FindFirstChild('HumanoidRootPart')\n    if not hrp then return false end\n    local toP = hrp.Position - npcRoot.Position\n    if toP.Magnitude > maxDist then return false end\n    local forward = npcRoot.CFrame.LookVector\n    local angle = math.deg(math.acos(forward:Dot(toP.Unit)))\n    if angle > coneDeg*0.5 then\n        if angle <= peripheralDeg*0.5 then maxDist = maxDist*0.5 else return false end\n    end\n    local ray = Ray.new(npcRoot.Position, toP.Unit * toP.Magnitude)\n    local hit = workspace:FindPartOnRay(ray, npcRoot.Parent)\n    return not hit or hit:IsDescendantOf(target.Character)\nend\n\nreturn { canSee = canSee }\n"}
{"prompt": "Create under-bed and vent hiding mechanics with entry/exit transitions", "completion": "-- ServerScriptService/Stealth/UnderBedVent.server.lua\nlocal CollectionService = game:GetService('CollectionService')\nlocal Players = game:GetService('Players')\nfor _, spot in ipairs(CollectionService:GetTagged('UnderBed')) do\n    local prompt = spot:FindFirstChildOfClass('ProximityPrompt') or Instance.new('ProximityPrompt', spot)\n    prompt.ActionText = 'Hide Under'\n    prompt.Triggered:Connect(function(player)\n        local c = player.Character; if not c or not c.PrimaryPart then return end\n        c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, -spot.Size.Y/2 + 1, 0))\n    end)\nend\nfor _, vent in ipairs(CollectionService:GetTagged('VentEntry')) do\n    local prompt = vent:FindFirstChildOfClass('ProximityPrompt') or Instance.new('ProximityPrompt', vent)\n    prompt.ActionText = 'Enter Vent'\n    prompt.Triggered:Connect(function(player)\n        local c = player.Character; if not c or not c.PrimaryPart then return end\n        c:SetPrimaryPartCFrame(vent.CFrame * CFrame.new(0, 1, 0))\n    end)\nend\nreturn {}\n"}
{"prompt": "Add stamina, sprint, camera sway and exhaustion penalties", "completion": "-- StarterPlayerScripts/Client/Stamina.client.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal player = Players.LocalPlayer\nlocal camera = workspace.CurrentCamera\nlocal stamina = 100\nlocal sprinting = false\n\nlocal function sway(dt)\n    local t = tick()\n    local offset = math.sin(t*8) * (sprinting and 0.6 or 0.25)\n    camera.CFrame = camera.CFrame * CFrame.Angles(0, 0, math.rad(offset))\nend\n\nRunService.RenderStepped:Connect(function(dt)\n    local char = player.Character; local hum = char and char:FindFirstChild('Humanoid')\n    sprinting = hum and hum.MoveDirection.Magnitude > 0 and (hum.WalkSpeed > 16)\n    stamina = math.clamp(stamina + (sprinting and -20 or 12)*dt, 0, 100)\n    if hum then\n        if stamina <= 0 then hum.WalkSpeed = 10 else hum.WalkSpeed = 16 + (stamina>50 and 6 or 0) end\n    end\n    sway(dt)\nend)\n"}
{"prompt": "Design sonar-tracking blind entity that hunts by sound pulses", "completion": "-- ServerScriptService/AI/SonarHunter.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal monster = workspace:WaitForChild('SonarEntity')\nlocal humanoid = monster:WaitForChild('Humanoid')\nlocal root = monster:WaitForChild('HumanoidRootPart')\nlocal lastPing = 0\n\nlocal function onNoise(pos, loud)\n    lastPing = tick()\n    humanoid:MoveTo(pos)\nend\n\n-- Integrate with NoiseSystem if present\nlocal NoiseEvent = game:GetService('ReplicatedStorage'):FindFirstChild('KeyUsed')\nRunService.Heartbeat:Connect(function() if tick()-lastPing>3 then humanoid:MoveTo(root.Position + Vector3.new(math.random(-8,8),0,math.random(-8,8))) end end)\n\nreturn { onNoise = onNoise }\n"}
{"prompt": "Add blood trail system that persists and guides players subtly", "completion": "-- ServerScriptService/Environment/BloodTrail.server.lua\nlocal Debris = game:GetService('Debris')\nlocal function dropDecal(pos)\n    local p = Instance.new('Part', workspace)\n    p.Size = Vector3.new(0.2,0.05,0.2)\n    p.Anchored = true\n    p.Color = Color3.fromRGB(120,0,0)\n    p.Material = Enum.Material.SmoothPlastic\n    p.Position = pos + Vector3.new(0,0.05,0)\n    Debris:AddItem(p, 90)\nend\n\nreturn { dropDecal = dropDecal }\n"}
{"prompt": "Implement weather and thunder flash scares tied to director tension", "completion": "-- ServerScriptService/Environment/Weather.server.lua\nlocal Lighting = game:GetService('Lighting')\nlocal RunService = game:GetService('RunService')\nlocal tension = 0\n\nlocal function flash()\n    local orig = Lighting.Brightness\n    Lighting.Brightness = 6\n    delay(0.12, function() Lighting.Brightness = orig end)\nend\n\nRunService.Heartbeat:Connect(function(dt)\n    tension = math.clamp(tension + dt*0.2, 0, 100)\n    if tension > 40 and math.random() < 0.01 then flash() end\nend)\n\nreturn { flash = flash }\n"}
{"prompt": "Generate escalating haunt logic with entity phases and map-wide triggers", "completion": "-- ServerScriptService/Haunt/HauntDirector.server.lua\nlocal RS=game:GetService('RunService');local P=game:GetService('Players')\nlocal phase=0;local t=0\nlocal function scareAll(msg) for _,pl in ipairs(P:GetPlayers()) do local c=pl.Character local hrp=c and c:FindFirstChild('HumanoidRootPart') if hrp then local s=Instance.new('Sound',hrp);s.SoundId='rbxassetid://9123931338';s.Volume=0.3;s:Play();game.Debris:AddItem(s,6) end end end\nRS.Heartbeat:Connect(function(dt) t+=dt if t>20 then phase=math.min(5,phase+1); t=0; scareAll('phase') end end)\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\n"}
{"prompt": "Create modular jump-scare framework with cooldowns and line-of-sight checks", "completion": "-- ServerScriptService/Scare/JumpScare.server.lua\nlocal Debris=game:GetService('Debris');\nreturn function(hrp) local p=Instance.new('Part',workspace);p.Anchored=true;p.Size=Vector3.new(2,2,2);p.Position=hrp.Position+Vector3.new(0,4,0);Debris:AddItem(p,2) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\nlocal x=0\nfor i=1,50 do x = x + math.sin(i*0.31) end\n"}
{"prompt": "Adapt AudioController.lua patterns for modular horror gameplay systems", "completion": "local SoundService = game:GetService(\"SoundService\")\nlocal ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal RunService = game:GetService(\"RunService\")\n\nlocal Config = require(ReplicatedStorage.Fractured.Config)\n\nlocal AudioController = {}\n\nlocal function makeSound(parent, soundId, props)\n\tlocal s = Instance.new(\"Sound\")\n\ts.SoundId = soundId\n\tfor k, v in pairs(props or {}) do\n\t\ts[k] = v\n\tend\n\ts.Parent = parent\n\treturn s\nend\n\nfunction AudioController.startAmbient()\n\tlocal root = SoundService:FindFirstChild(\"FracturedLobby\")\n\tif not root then\n\t\troot = Instance.new(\"Folder\")\n\t\troot.Name = \"FracturedLobby\"\n\t\troot.Parent = SoundService\n\tend\n\troot:ClearAllChildren()\n\n\tlocal ambient = makeSound(root, Config:getSoundId(\"ambientHum\"), {\n\t\tLooped = true,\n\t\tVolume = 0.25,\n\t\tRollOffMaxDistance = 200,\n\t\tRollOffMinDistance = 30,\n\t\tPlaybackSpeed = 0.98,\n\t})\n\tlocal drips = makeSound(root, Config:getSoundId(\"distantDrips\"), {\n\t\tLooped = true,\n\t\tVolume = 0.1,\n\t\tPlaybackSpeed = 1.02,\n\t})\n\tlocal creak = makeSound(root, Config:getSoundId(\"creak\"), {\n\t\tLooped = true,\n\t\tVolume = 0.07,\n\t\tPlaybackSpeed = 0.95,\n\t})\n\tlocal whisper = makeSound(root, Config:getSoundId(\"whispers\"), {\n\t\tLooped = true,\n\t\tVolume = 0.06,\n\t\tPlaybackSpeed = 1.05,\n\t})\n\n\tambient:Play()\n\tdrips:Play()\n\tcreak:Play()\n\twhisper:Play()\n\n\t-- Subtle amplitude modulation for psychological unease\n\ttask.spawn(function()\n\t\twhile root.Parent do\n\t\t\tambient.Volume = 0.22 + math.noise(os.clock() * 0.07) * 0.05\n\t\t\tdrips.PlaybackSpeed = 1.0 + math.noise(os.clock() * 0.13) * 0.04\n\t\t\twhisper.Volume = 0.05 + math.noise(os.clock() * 0.09) * 0.03\n\t\t\tRunService.Heartbeat:Wait()\n\t\tend\n\tend)\n\n\treturn root\nend\n\nfunction AudioController.playLockedHint()\n\tlocal root = SoundService:FindFirstChild(\"FracturedLobby\") or AudioController.startAmbient()\n\tlocal id = Config.Audio.lockedChapterMurmur[math.random(1, #Config.Audio.lockedChapterMurmur)]\n\tlocal s = makeSound(root, id, { Volume = 0.1 })\n\ts.Ended:Connect(function()\n\t\tif s then s:Destroy() end\n\tend)\n\ts:Play()\nend\n\nfunction AudioController.playTransition()\n\tlocal root = SoundService:FindFirstChild(\"FracturedLobby\") or AudioController.startAmbient()\n\tlocal rumble = makeSound(root, Config:getSoundId(\"transitionRumble\"), { Volume = 0.8 })\n\trumble.Ended:Connect(function()\n\t\trumble:Destroy()\n\tend)\n\trumble:Play()\nend\n\nreturn AudioController\n\n\n"}
{"prompt": "Adapt Preloader.lua patterns for modular horror gameplay systems", "completion": "local ContentProvider = game:GetService(\"ContentProvider\")\nlocal ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal RunService = game:GetService(\"RunService\")\n\nlocal Config = require(ReplicatedStorage.Fractured.Config)\n\nlocal Preloader = {}\n\nlocal function isValidAssetId(id)\n\treturn typeof(id) == \"string\" and id:match(\"^rbxassetid://%d+\") ~= nil\nend\n\nlocal function waitSeconds(seconds)\n\tlocal t0 = os.clock()\n\twhile os.clock() - t0 < seconds do\n\t\tRunService.Heartbeat:Wait()\n\tend\nend\n\nlocal function createPreloadBin()\n\tlocal root = ReplicatedStorage:FindFirstChild(\"Fractured\") or Instance.new(\"Folder\")\n\troot.Name = \"Fractured\"\n\troot.Parent = ReplicatedStorage\n\tlocal bin = root:FindFirstChild(\"PreloadBin\")\n\tif not bin then\n\t\tbin = Instance.new(\"Folder\")\n\t\tbin.Name = \"PreloadBin\"\n\t\tbin.Parent = root\n\tend\n\tbin:ClearAllChildren()\n\treturn bin\nend\n\nlocal function preloadInstance(inst, timeout)\n\tlocal ok = false\n\tlocal finished = false\n\tlocal thread = task.spawn(function()\n\t\tlocal success = pcall(function()\n\t\t\tContentProvider:PreloadAsync({ inst })\n\t\tend)\n\t\tok = success\n\t\tfinished = true\n\tend)\n\tlocal elapsed = 0\n\twhile not finished and elapsed < timeout do\n\t\tlocal dt = RunService.Heartbeat:Wait()\n\t\telapsed += dt or 0.016\n\tend\n\treturn ok or finished\nend\n\nfunction Preloader.preloadAll(onProgress)\n\tlocal bin = createPreloadBin()\n\tlocal total = 0\n\tlocal queue = {}\n\n\t-- Prepare sounds\n\tfor _, key in ipairs(Config.Preload.sounds) do\n\t\tlocal id = Config:getSoundId(key)\n\t\tif isValidAssetId(id) then\n\t\t\tlocal s = Instance.new(\"Sound\")\n\t\t\ts.SoundId = id\n\t\t\ts.Volume = 0\n\t\t\ts.Parent = bin\n\t\t\ttable.insert(queue, s)\n\t\tend\n\tend\n\n\t-- Prepare images\n\tfor _, key in ipairs(Config.Preload.images) do\n\t\tlocal id = Config:getImageId(key)\n\t\tif isValidAssetId(id) then\n\t\t\tlocal img = Instance.new(\"ImageLabel\")\n\t\t\timg.Image = id\n\t\t\timg.Size = UDim2.new(0, 10, 0, 10)\n\t\t\timg.BackgroundTransparency = 1\n\t\t\timg.Visible = false\n\t\t\timg.Parent = bin\n\t\t\ttable.insert(queue, img)\n\t\tend\n\tend\n\n\ttotal = #queue\n\tlocal loaded = 0\n\tlocal function report()\n\t\tif onProgress then\n\t\t\tonProgress(math.clamp(loaded / math.max(total, 1), 0, 1))\n\t\tend\n\tend\n\treport()\n\n\tfor _, inst in ipairs(queue) do\n\t\tpreloadInstance(inst, 5)\n\t\tloaded += 1\n\t\treport()\n\t\twaitSeconds(math.random(1, 3) * 0.05) -- stagger for effect\n\tend\n\n\treturn true\nend\n\nreturn Preloader\n\n\n"}
{"prompt": "Adapt UIBuilder.lua patterns for modular horror gameplay systems", "completion": "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal TweenService = game:GetService(\"TweenService\")\nlocal UserInputService = game:GetService(\"UserInputService\")\n\nlocal Config = require(ReplicatedStorage.Fractured.Config)\n\nlocal UIBuilder = {}\n\nlocal function new(instanceType, props)\n\tlocal inst = Instance.new(instanceType)\n\tfor k, v in pairs(props or {}) do\n\t\tinst[k] = v\n\tend\n\treturn inst\nend\n\nlocal function createProgressBar(parent)\n\tlocal bar = new(\"Frame\", {\n\t\tName = \"ProgressBar\",\n\t\tAnchorPoint = Vector2.new(0.5, 1),\n\t\tPosition = UDim2.new(0.5, 0, 1, -20),\n\t\tSize = UDim2.new(0.5, 0, 0, 8),\n\t\tBackgroundColor3 = Color3.fromRGB(40, 0, 0),\n\t\tBackgroundTransparency = 0.2,\n\t\tBorderSizePixel = 0,\n\t\tParent = parent,\n\t})\n\n\tlocal glow = new(\"ImageLabel\", {\n\t\tName = \"Glow\",\n\t\tImage = \"rbxassetid://5028857082\", -- soft glow sprite\n\t\tImageColor3 = Config.UI.primaryGlow,\n\t\tBackgroundTransparency = 1,\n\t\tAnchorPoint = Vector2.new(0.5, 0.5),\n\t\tPosition = UDim2.new(0.5, 0, 0.5, 0),\n\t\tSize = UDim2.new(1, 40, 1, 30),\n\t\tZIndex = 0,\n\t\tParent = bar,\n\t})\n\n\tlocal fill = new(\"Frame\", {\n\t\tName = \"Fill\",\n\t\tSize = UDim2.new(0, 0, 1, 0),\n\t\tBackgroundColor3 = Config.UI.primaryColor,\n\t\tBackgroundTransparency = 0.05,\n\t\tBorderSizePixel = 0,\n\t\tZIndex = 2,\n\t\tParent = bar,\n\t})\n\n\tlocal uiCorner = new(\"UICorner\", {\n\t\tCornerRadius = UDim.new(0, 2),\n\t\tParent = bar,\n\t})\n\tnew(\"UICorner\", { CornerRadius = UDim.new(0, 2), Parent = fill })\n\n\treturn bar, fill, glow\nend\n\nlocal function createLoreOverlay(parent)\n\tlocal label = new(\"TextLabel\", {\n\t\tName = \"LoreOverlay\",\n\t\tAnchorPoint = Vector2.new(0.5, 0),\n\t\tPosition = UDim2.new(0.5, 0, 0, 24),\n\t\tSize = UDim2.new(0.8, 0, 0, 40),\n\t\tText = \"\",\n\t\tFont = Config.UI.font,\n\t\tTextColor3 = Config.UI.textColor,\n\t\tTextTransparency = 0.2,\n\t\tTextScaled = true,\n\t\tBackgroundTransparency = 1,\n\t\tParent = parent,\n\t})\n\treturn label\nend\n\nlocal function createGlitchOverlay(parent)\n\tlocal img = new(\"ImageLabel\", {\n\t\tName = \"Glitch\",\n\t\tImage = Config.Images.glitch,\n\t\tBackgroundTransparency = 1,\n\t\tImageTransparency = 1,\n\t\tSize = UDim2.new(1, 0, 1, 0),\n\t\tPosition = UDim2.new(0, 0, 0, 0),\n\t\tZIndex = 10,\n\t\tParent = parent,\n\t})\n\treturn img\nend\n\nlocal function createChapterPanel(parent)\n\tlocal panel = new(\"Frame\", {\n\t\tName = \"ChapterPanel\",\n\t\tAnchorPoint = Vector2.new(1, 0.5),\n\t\tPosition = UDim2.new(1, -32, 0.5, 0),\n\t\tSize = UDim2.new(0, 340, 0.8, 0),\n\t\tBackgroundColor3 = Config.UI.panelColor,\n\t\tBackgroundTransparency = 0.1,\n\t\tBorderSizePixel = 0,\n\t\tParent = parent,\n\t})\n\n\tnew(\"UICorner\", { CornerRadius = UDim.new(0, 8), Parent = panel })\n\tnew(\"UIListLayout\", {\n\t\tPadding = UDim.new(0, 8),\n\t\tHorizontalAlignment = Enum.HorizontalAlignment.Center,\n\t\tVerticalAlignment = Enum.VerticalAlignment.Top,\n\t\tSortOrder = Enum.SortOrder.LayoutOrder,\n\t\tParent = panel,\n\t})\n\n\tlocal header = new(\"TextLabel\", {\n\t\tName = \"Header\",\n\t\tSize = UDim2.new(1, -16, 0, 36),\n\t\tPosition = UDim2.new(0, 8, 0, 8),\n\t\tBackgroundTransparency = 1,\n\t\tText = \"Select Chapter\",\n\t\tTextXAlignment = Enum.TextXAlignment.Left,\n\t\tTextColor3 = Config.UI.textColor,\n\t\tTextTransparency = 0.1,\n\t\tFont = Config.UI.font,\n\t\tTextScaled = true,\n\t\tLayoutOrder = 1,\n\t\tParent = panel,\n\t})\n\n\tlocal container = new(\"Frame\", {\n\t\tName = \"List\",\n\t\tSize = UDim2.new(1, -16, 1, -60),\n\t\tPosition = UDim2.new(0, 8, 0, 50),\n\t\tBackgroundTransparency = 1,\n\t\tLayoutOrder = 2,\n\t\tParent = panel,\n\t})\n\n\tnew(\"UIListLayout\", {\n\t\tPadding = UDim.new(0, 6),\n\t\tHorizontalAlignment = Enum.HorizontalAlignment.Center,\n\t\tVerticalAlignment = Enum.VerticalAlignment.Top,\n\t\tSortOrder = Enum.SortOrder.LayoutOrder,\n\t\tParent = container,\n\t})\n\n\treturn panel, container\nend\n\nlocal function createChapterButton(parent, chapter)\n\tlocal isLocked = not chapter.accessible\n\tlocal btn = new(\"TextButton\", {\n\t\tName = chapter.key,\n\t\tAutoButtonColor = false,\n\t\tText = chapter.title,\n\t\tFont = Config.UI.font,\n\t\tTextXAlignment = Enum.TextXAlignment.Left,\n\t\tTextColor3 = isLocked and Config.UI.mutedTextColor or Config.UI.textColor,\n\t\tTextScaled = true,\n\t\tBackgroundColor3 = Color3.fromRGB(12, 12, 14),\n\t\tBackgroundTransparency = 0.05,\n\t\tBorderSizePixel = 0,\n\t\tSize = UDim2.new(1, 0, 0, 40),\n\t\tParent = parent,\n\t})\n\tnew(\"UICorner\", { CornerRadius = UDim.new(0, 6), Parent = btn })\n\tnew(\"UIPadding\", { PaddingLeft = UDim.new(0, 12), Parent = btn })\n\n\tlocal glow = new(\"ImageLabel\", {\n\t\tName = \"Glow\",\n\t\tImage = \"rbxassetid://5028857082\",\n\t\tImageColor3 = Config.UI.primaryGlow,\n\t\tBackgroundTransparency = 1,\n\t\tAnchorPoint = Vector2.new(0.5, 0.5),\n\t\tPosition = UDim2.new(0.5, 0, 0.5, 0),\n\t\tSize = UDim2.new(1, 16, 1, 16),\n\t\tZIndex = 0,\n\t\tImageTransparency = 1,\n\t\tParent = btn,\n\t})\n\n\tif isLocked then\n\t\tlocal veil = new(\"Frame\", {\n\t\t\tName = \"LockVeil\",\n\t\t\tBackgroundColor3 = Color3.fromRGB(0, 0, 0),\n\t\t\tBackgroundTransparency = 0.55,\n\t\t\tBorderSizePixel = 0,\n\t\t\tSize = UDim2.new(1, 0, 1, 0),\n\t\t\tZIndex = 3,\n\t\t\tParent = btn,\n\t\t})\n\t\tlocal shadow = new(\"ImageLabel\", {\n\t\t\tName = \"InnerShadow\",\n\t\t\tImage = Config.Images.shadow,\n\t\t\tBackgroundTransparency = 1,\n\t\t\tImageTransparency = 0.45,\n\t\t\tSize = UDim2.new(0, 80, 1, 0),\n\t\t\tPosition = UDim2.new(-0.2, 0, 0, 0),\n\t\t\tZIndex = 4,\n\t\t\tParent = btn,\n\t\t})\n\t\tTweenService:Create(shadow, TweenInfo.new(3, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut, -1, true), { Position = UDim2.new(1.2, 0, 0, 0) }):Play()\n\telse\n\t\tbtn.MouseEnter:Connect(function()\n\t\t\tTweenService:Create(glow, TweenInfo.new(0.18), { ImageTransparency = 0.3 }):Play()\n\t\t\tlocal h = UserInputService.VibrationMotor\n\t\t\t-- subtle screen vibration simulated via small size tween\n\t\t\tTweenService:Create(btn, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), { Size = UDim2.new(1, 0, 0, 42) }):Play()\n\t\tend)\n\t\tbtn.MouseLeave:Connect(function()\n\t\t\tTweenService:Create(glow, TweenInfo.new(0.25), { ImageTransparency = 1 }):Play()\n\t\t\tTweenService:Create(btn, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), { Size = UDim2.new(1, 0, 0, 40) }):Play()\n\t\tend)\n\tend\n\n\treturn btn\nend\n\nfunction UIBuilder.build(playerGui, existingScreenGui)\n\tlocal screen = existingScreenGui or new(\"ScreenGui\", {\n\t\tName = \"FracturedLobbyGui\",\n\t\tIgnoreGuiInset = true,\n\t\tResetOnSpawn = true,\n\t\tZIndexBehavior = Enum.ZIndexBehavior.Sibling,\n\t})\n\t-- Ensure enabled and parented to PlayerGui at runtime\n\tscreen.Enabled = true\n\tif not screen.Parent or not screen.Parent:IsDescendantOf(playerGui) then\n\t\tscreen.Parent = playerGui\n\tend\n\n\tlocal darken = screen:FindFirstChild(\"Backdrop\") or new(\"Frame\", {\n\t\tName = \"Backdrop\",\n\t\tBackgroundColor3 = Config.UI.backgroundColor,\n\t\tBackgroundTransparency = 0,\n\t\tSize = UDim2.new(1, 0, 1, 0),\n\t\tPosition = UDim2.new(0, 0, 0, 0),\n\t\tParent = screen,\n\t})\n\n\tlocal progressBar, progressFill, progressGlow = createProgressBar(screen)\n\tlocal lore = createLoreOverlay(screen)\n\tlocal glitch = createGlitchOverlay(screen)\n\tlocal panel, list = createChapterPanel(screen)\n\n\tlocal chapterButtons = {}\n\tfor _, chapter in ipairs(Config.Chapters) do\n\t\tlocal btn = createChapterButton(list, chapter)\n\t\tbtn.LayoutOrder = chapter.id + 10\n\t\tchapterButtons[chapter.key] = btn\n\tend\n\n\treturn {\n\t\tscreen = screen,\n\t\tprogressBar = progressBar,\n\t\tprogressFill = progressFill,\n\t\tprogressGlow = progressGlow,\n\t\tlore = lore,\n\t\tglitch = glitch,\n\t\tchapterButtons = chapterButtons,\n\t\tpanel = panel,\n\t}\nend\n\nfunction UIBuilder.setProgress(ui, alpha)\n\tui.progressFill.Size = UDim2.new(alpha, 0, 1, 0)\n\tlocal flick = math.random() < 0.2 and math.random() * 0.1 or 0\n\tui.progressFill.BackgroundTransparency = 0.05 + flick\nend\n\nfunction UIBuilder.playGlitch(ui)\n\tlocal img = ui.glitch\n\timg.ImageTransparency = 0.85\n\timg.Position = UDim2.new(0, math.random(-10, 10), 0, math.random(-8, 8))\n\tTweenService:Create(img, TweenInfo.new(0.15), { ImageTransparency = 1 }):Play()\nend\n\nfunction UIBuilder.setLore(ui, text)\n\tui.lore.Text = text\n\tui.lore.TextTransparency = 0.35\n\tTweenService:Create(ui.lore, TweenInfo.new(0.3), { TextTransparency = 0.08 }):Play()\nend\n\nfunction UIBuilder.fadeToBlack(ui, duration)\n\tlocal veil = ui.screen:FindFirstChild(\"Fade\")\n\tif not veil then\n\t\tveil = Instance.new(\"Frame\")\n\t\tveil.Name = \"Fade\"\n\t\tveil.BackgroundColor3 = Color3.new(0, 0, 0)\n\t\tveil.BackgroundTransparency = 1\n\t\tveil.Size = UDim2.new(1, 0, 1, 0)\n\t\tveil.ZIndex = 20\n\t\tveil.Parent = ui.screen\n\tend\n\tTweenService:Create(veil, TweenInfo.new(duration or 1.2, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), { BackgroundTransparency = 0 }):Play()\n\treturn veil\nend\n\nreturn UIBuilder\n\n\n"}
{"prompt": "Adapt EnvironmentBuilder.lua patterns for modular horror gameplay systems", "completion": "local Lighting = game:GetService(\"Lighting\")\nlocal CollectionService = game:GetService(\"CollectionService\")\nlocal ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\n\nlocal Config = require(ReplicatedStorage.Fractured.Config)\n\nlocal EnvironmentBuilder = {}\n\nlocal function setLighting()\n\tpcall(function()\n\t\tLighting.Technology = Enum.Technology.Future\n\tend)\n\tLighting.Brightness = 1.5\n\tLighting.ClockTime = 0.5\n\tLighting.Ambient = Color3.fromRGB(10, 10, 12)\n\tLighting.OutdoorAmbient = Color3.fromRGB(20, 20, 24)\n\tLighting.FogColor = Color3.fromRGB(10, 10, 12)\n\tLighting.FogStart = 20\n\tLighting.FogEnd = 120\n\n\tlocal cc = Instance.new(\"ColorCorrectionEffect\")\n\tcc.Name = \"FracturedColor\"\n\tcc.TintColor = Color3.fromRGB(210, 210, 220)\n\tcc.Contrast = 0.08\n\tcc.Saturation = -0.15\n\tcc.Parent = Lighting\n\n\tlocal bloom = Instance.new(\"BloomEffect\")\n\tbloom.Intensity = 0.3\n\tbloom.Size = 8\n\tbloom.Threshold = 2\n\tbloom.Parent = Lighting\n\n\tlocal dof = Instance.new(\"DepthOfFieldEffect\")\n\tdof.InFocusRadius = 10\n\tdof.FarIntensity = 0.25\n\tdof.NearIntensity = 0.1\n\tdof.FocusDistance = 15\n\tdof.Parent = Lighting\n\n\tlocal atmosphere = Instance.new(\"Atmosphere\")\n\tatmosphere.Density = 0.35\n\tatmosphere.Offset = 0.1\n\tatmosphere.Color = Color3.fromRGB(200, 200, 210)\n\tatmosphere.Decay = Color3.fromRGB(60, 60, 70)\n\tatmosphere.Haze = 1\n\tatmosphere.Parent = Lighting\nend\n\nlocal function part(props)\n\tlocal p = Instance.new(\"Part\")\n\tp.Anchored = true\n\tp.TopSurface = Enum.SurfaceType.Smooth\n\tp.BottomSurface = Enum.SurfaceType.Smooth\n\tfor k, v in pairs(props) do p[k] = v end\n\treturn p\nend\n\nlocal function cylinder(props)\n\tlocal p = part(props)\n\tp.Shape = Enum.PartType.Cylinder\n\treturn p\nend\n\nlocal function addDecal(surface, textureId)\n\tlocal d = Instance.new(\"Decal\")\n\td.Texture = textureId\n\td.Face = surface\n\treturn d\nend\n\nlocal function addFlickerLight(parent, color)\n\tlocal light = Instance.new(\"PointLight\")\n\tlight.Color = color or Color3.fromRGB(235, 240, 255)\n\tlight.Range = 18\n\tlight.Brightness = 2.2\n\tlight.Shadows = true\n\tlight.Parent = parent\n\tCollectionService:AddTag(light, \"FlickerLight\")\n\treturn light\nend\n\nlocal function addShadowBillboard(parent)\n\tlocal att = Instance.new(\"Attachment\")\n\tatt.Parent = parent\n\tlocal bb = Instance.new(\"BillboardGui\")\n\tbb.Name = \"ShadowBillboard\"\n\tbb.Size = UDim2.new(0, 90, 0, 120)\n\tbb.AlwaysOnTop = false\n\tbb.LightInfluence = 1\n\tbb.StudsOffset = Vector3.new(0, 0, -0.2)\n\tbb.Parent = att\n\tlocal img = Instance.new(\"ImageLabel\")\n\timg.BackgroundTransparency = 1\n\timg.Image = Config:getImageId(\"shadow\")\n\timg.ImageTransparency = 0.7\n\timg.Size = UDim2.new(1, 0, 1, 0)\n\timg.Parent = bb\n\tCollectionService:AddTag(bb, \"MovingShadow\")\n\treturn bb\nend\n\nlocal function addParticlesFog(partRef)\n\tlocal emitter = Instance.new(\"ParticleEmitter\")\n\temitter.Name = \"FloorFog\"\n\temitter.Texture = \"rbxassetid://241876061\" -- soft smoke texture placeholder\n\temitter.Rate = 6\n\temitter.Lifetime = NumberRange.new(6, 12)\n\temitter.Speed = NumberRange.new(0.1, 0.6)\n\temitter.Rotation = NumberRange.new(-10, 10)\n\temitter.RotSpeed = NumberRange.new(-2, 2)\n\temitter.Size = NumberSequence.new({\n\t\tNumberSequenceKeypoint.new(0, 3),\n\t\tNumberSequenceKeypoint.new(0.5, 5),\n\t\tNumberSequenceKeypoint.new(1, 3)\n\t})\n\temitter.Color = ColorSequence.new(Color3.fromRGB(200, 200, 210))\n\temitter.Transparency = NumberSequence.new({\n\t\tNumberSequenceKeypoint.new(0, 0.8),\n\t\tNumberSequenceKeypoint.new(0.2, 0.6),\n\t\tNumberSequenceKeypoint.new(0.8, 0.85),\n\t\tNumberSequenceKeypoint.new(1, 1)\n\t})\n\temitter.EmissionDirection = Enum.NormalId.Top\n\temitter.SpreadAngle = Vector2.new(15, 15)\n\temitter.LockedToPart = false\n\temitter.Parent = partRef\n\treturn emitter\nend\n\nlocal function addDust(partRef)\n\tlocal d = Instance.new(\"ParticleEmitter\")\n\td.Name = \"Dust\"\n\td.Texture = \"rbxassetid://258128463\" -- dust mote texture placeholder\n\td.Rate = 12\n\td.Lifetime = NumberRange.new(3, 7)\n\td.Speed = NumberRange.new(0.1, 0.3)\n\td.Size = NumberSequence.new({\n\t\tNumberSequenceKeypoint.new(0, 0.05),\n\t\tNumberSequenceKeypoint.new(0.5, 0.08),\n\t\tNumberSequenceKeypoint.new(1, 0.05)\n\t})\n\td.Transparency = NumberSequence.new({\n\t\tNumberSequenceKeypoint.new(0, 0.8),\n\t\tNumberSequenceKeypoint.new(0.5, 0.6),\n\t\tNumberSequenceKeypoint.new(1, 1)\n\t})\n\td.Parent = partRef\n\treturn d\nend\n\nfunction EnvironmentBuilder.buildLobby()\n\tsetLighting()\n\tlocal workspaceFolder = workspace:FindFirstChild(\"FracturedLobby\")\n\tif workspaceFolder then workspaceFolder:Destroy() end\n\tworkspaceFolder = Instance.new(\"Folder\")\n\tworkspaceFolder.Name = \"FracturedLobby\"\n\tworkspaceFolder.Parent = workspace\n\n\t-- Floor area\n\tlocal floor = part({\n\t\tName = \"Floor\",\n\t\tSize = Vector3.new(120, 1, 120),\n\t\tMaterial = Enum.Material.Concrete,\n\t\tColor = Color3.fromRGB(60, 60, 64),\n\t\tPosition = Vector3.new(0, 0, 0),\n\t\tParent = workspaceFolder,\n\t})\n\taddParticlesFog(floor)\n\taddDust(floor)\n\n\t-- Puddles\n\tfor i = 1, 6 do\n\t\tlocal puddle = part({\n\t\t\tName = \"Puddle\" .. i,\n\t\t\tSize = Vector3.new(math.random(4, 8), 0.05, math.random(3, 6)),\n\t\t\tMaterial = Enum.Material.Glass,\n\t\t\tColor = Color3.fromRGB(180, 190, 200),\n\t\t\tTransparency = 0.75,\n\t\t\tReflectance = 0.15,\n\t\t\tPosition = Vector3.new(math.random(-50, 50), 0.03, math.random(-50, 50)),\n\t\t\tParent = workspaceFolder,\n\t\t})\n\tend\n\n\t-- Carpet patches\n\tfor i = 1, 4 do\n\t\tlocal carpet = part({\n\t\t\tName = \"Carpet\" .. i,\n\t\t\tSize = Vector3.new(math.random(10, 20), 0.1, math.random(10, 20)),\n\t\t\tMaterial = Enum.Material.Carpet,\n\t\t\tColor = Color3.fromRGB(40, 30, 30),\n\t\t\tPosition = Vector3.new(math.random(-40, 40), 0.06, math.random(-40, 40)),\n\t\t\tParent = workspaceFolder,\n\t\t})\n\tend\n\n\t-- Walls (simple square room)\n\tlocal walls = Instance.new(\"Folder\")\n\twalls.Name = \"Walls\"\n\twalls.Parent = workspaceFolder\n\n\tlocal wallSize = 120\n\tlocal wallHeight = 24\n\tlocal wallThickness = 2\n\tlocal function makeWall(cx, cz, rot)\n\t\tlocal w = part({\n\t\t\tName = \"Wall\",\n\t\t\tSize = Vector3.new(wallSize, wallHeight, wallThickness),\n\t\t\tMaterial = Enum.Material.Concrete,\n\t\t\tColor = Color3.fromRGB(70, 70, 75),\n\t\t\tPosition = Vector3.new(cx, wallHeight / 2, cz),\n\t\t\tParent = walls,\n\t\t})\n\t\tw.Orientation = Vector3.new(0, rot, 0)\n\t\tlocal warning = addDecal(Enum.NormalId.Front, Config:getImageId(\"warning\"))\n\t\twarning.Transparency = 0.5\n\t\twarning.Parent = w\n\t\tlocal graffiti = addDecal(Enum.NormalId.Front, Config:getImageId(\"graffiti\"))\n\t\tgraffiti.Transparency = 0.4\n\t\tgraffiti.Parent = w\n\t\taddShadowBillboard(w)\n\t\treturn w\n\tend\n\n\tmakeWall(0, -wallSize/2, 0)\n\tmakeWall(0, wallSize/2, 0)\n\tmakeWall(-wallSize/2, 0, 90)\n\tmakeWall(wallSize/2, 0, 90)\n\n\t-- Ceiling grid & lights\n\tlocal ceiling = Instance.new(\"Folder\")\n\tceiling.Name = \"Ceiling\"\n\tceiling.Parent = workspaceFolder\n\tfor x = -50, 50, 20 do\n\t\tfor z = -50, 50, 20 do\n\t\t\tlocal beam = part({\n\t\t\t\tName = \"Beam\",\n\t\t\t\tSize = Vector3.new(20, 1, 2),\n\t\t\t\tMaterial = Enum.Material.Metal,\n\t\t\t\tColor = Color3.fromRGB(50, 50, 55),\n\t\t\t\tPosition = Vector3.new(x, wallHeight - 1, z),\n\t\t\t\tParent = ceiling,\n\t\t\t})\n\t\t\tbeam.Orientation = Vector3.new(0, 90, 0)\n\t\t\tlocal fixture = part({\n\t\t\t\tName = \"LightFixture\",\n\t\t\t\tSize = Vector3.new(2, 0.4, 2),\n\t\t\t\tMaterial = Enum.Material.Metal,\n\t\t\t\tColor = Color3.fromRGB(200, 200, 205),\n\t\t\t\tPosition = beam.Position + Vector3.new(0, -0.8, 0),\n\t\t\t\tParent = ceiling,\n\t\t\t})\n\t\t\taddFlickerLight(fixture, Color3.fromRGB(230, 235, 255))\n\t\tend\n\tend\n\n\t-- Pipes along walls\n\tlocal pipes = Instance.new(\"Folder\")\n\tpipes.Name = \"Pipes\"\n\tpipes.Parent = workspaceFolder\n\tfor z = -50, 50, 10 do\n\t\tlocal p1 = cylinder({\n\t\t\tName = \"PipeZ\" .. z,\n\t\t\tSize = Vector3.new(1, 1, 10),\n\t\t\tMaterial = Enum.Material.Metal,\n\t\t\tColor = Color3.fromRGB(90, 90, 95),\n\t\t\tPosition = Vector3.new(-wallSize/2 + 1, 8 + math.random(-2, 2), z),\n\t\t\tParent = pipes,\n\t\t})\n\t\tp1.Orientation = Vector3.new(0, 90, 0)\n\tend\n\n\t-- Vents\n\tlocal vents = Instance.new(\"Folder\")\n\tvents.Name = \"Vents\"\n\tvents.Parent = workspaceFolder\n\tfor x = -40, 40, 20 do\n\t\tlocal v = part({\n\t\t\tName = \"Vent\" .. x,\n\t\t\tSize = Vector3.new(6, 1, 6),\n\t\t\tMaterial = Enum.Material.Metal,\n\t\t\tColor = Color3.fromRGB(120, 120, 125),\n\t\t\tPosition = Vector3.new(x, wallHeight - 2, -wallSize/2 + 2),\n\t\t\tParent = vents,\n\t\t})\n\t\taddShadowBillboard(v)\n\tend\n\n\t-- Debris piles\n\tlocal debris = Instance.new(\"Folder\")\n\tdebris.Name = \"Debris\"\n\tdebris.Parent = workspaceFolder\n\tfor i = 1, 20 do\n\t\tlocal junk = part({\n\t\t\tName = \"Debris\" .. i,\n\t\t\tSize = Vector3.new(math.random(1, 3), math.random(1, 2), math.random(1, 3)),\n\t\t\tMaterial = Enum.Material.Concrete,\n\t\t\tColor = Color3.fromRGB(50 + math.random(-5, 5), 50 + math.random(-5, 5), 52 + math.random(-5, 5)),\n\t\t\tPosition = Vector3.new(math.random(-55, 55), 0.5, math.random(-55, 55)),\n\t\t\tParent = debris,\n\t\t})\n\tend\n\n\t-- Spawns\n\tlocal lobbySpawn = Instance.new(\"SpawnLocation\")\n\tlobbySpawn.Name = \"LobbySpawn\"\n\tlobbySpawn.Position = Vector3.new(0, 2, 0)\n\tlobbySpawn.Size = Vector3.new(6, 1, 6)\n\tlobbySpawn.Anchored = true\n\tlobbySpawn.Transparency = 1\n\tlobbySpawn.Neutral = true\n\tlobbySpawn.Parent = workspaceFolder\n\n\tlocal chapter1Spawn = Instance.new(\"Part\")\n\tchapter1Spawn.Name = \"Chapter1Spawn\"\n\tchapter1Spawn.Position = Vector3.new(0, 2, 40)\n\tchapter1Spawn.Size = Vector3.new(4, 1, 4)\n\tchapter1Spawn.Anchored = true\n\tchapter1Spawn.Transparency = 1\n\tchapter1Spawn.Parent = workspaceFolder\n\n\t-- Safety floor: large, invisible, anchored, directly under the lobby spawn\n\tlocal safetyFloor = part({\n\t\tName = \"SafetyFloor\",\n\t\tSize = Vector3.new(1000, 1, 1000),\n\t\tPosition = Vector3.new(lobbySpawn.Position.X, 0, lobbySpawn.Position.Z),\n\t\tMaterial = Enum.Material.SmoothPlastic,\n\t\tTransparency = 1,\n\t\tCanCollide = true,\n\t\tParent = workspace, -- must be parented to Workspace\n\t})\n\n\treturn workspaceFolder\nend\n\nreturn EnvironmentBuilder\n\n\n"}
{"prompt": "Adapt LobbyServer.server.lua patterns for modular horror gameplay systems", "completion": "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal Players = game:GetService(\"Players\")\nlocal TeleportService = game:GetService(\"TeleportService\")\n\nlocal Net = require(ReplicatedStorage.Fractured.Net)\nlocal Config = require(ReplicatedStorage.Fractured.Config)\n\n-- Defer require of ServerStorage module to runtime to avoid plugin errors\nlocal EnvironmentBuilder = require(game:GetService(\"ServerStorage\").Fractured.EnvironmentBuilder)\n\n-- Build lobby environment once on server start\nlocal lobbyFolder = EnvironmentBuilder.buildLobby()\n\n-- Remote networking\nlocal StartChapter = Net:getRemoteEvent(\"StartChapter\")\n\nStartChapter.OnServerEvent:Connect(function(player, chapterKey)\n\tlocal chosen\n\tfor _, ch in ipairs(Config.Chapters) do\n\t\tif ch.key == chapterKey then\n\t\t\tchosen = ch\n\t\t\tbreak\n\t\tend\n\tend\n\tif not chosen then return end\n\tif not chosen.accessible then return end\n\n\t-- If using universe placeId for chapter, teleport. Otherwise move player to spawn.\n\tif chosen.placeId then\n\t\tpcall(function()\n\t\t\tTeleportService:TeleportAsync(chosen.placeId, { player })\n\t\tend)\n\telse\n\t\tlocal spawnPart = workspace:FindFirstChild(\"FracturedLobby\") and workspace.FracturedLobby:FindFirstChild(chosen.spawnName or \"Chapter1Spawn\")\n\t\tif spawnPart then\n\t\t\tlocal char = player.Character or player.CharacterAdded:Wait()\n\t\t\t-- Ensure safe spawn height above the safety floor\n\t\t\tlocal offsetY = 4\n\t\t\tchar:PivotTo(CFrame.new(spawnPart.Position + Vector3.new(0, offsetY, 0)))\n\t\tend\n\tend\nend)\n\n\n"}
{"prompt": "Adapt LobbyClient.client.lua patterns for modular horror gameplay systems", "completion": "local Players = game:GetService(\"Players\")\nlocal ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\nlocal TweenService = game:GetService(\"TweenService\")\nlocal RunService = game:GetService(\"RunService\")\nlocal ContentProvider = game:GetService(\"ContentProvider\")\n\nlocal player = Players.LocalPlayer\nlocal playerGui = player:WaitForChild(\"PlayerGui\")\n\nlocal Config = require(ReplicatedStorage.Fractured.Config)\nlocal UIBuilder = require(ReplicatedStorage.Fractured.UIBuilder)\nlocal Preloader = require(ReplicatedStorage.Fractured.Preloader)\nlocal AudioController = require(ReplicatedStorage.Fractured.AudioController)\nlocal Net = require(ReplicatedStorage.Fractured.Net)\n\n-- If a ScreenGui already exists in StarterGui and replicated to PlayerGui, use it\nlocal existing = playerGui:FindFirstChild(\"FracturedLobbyGui\")\nlocal ui = UIBuilder.build(playerGui, existing)\nAudioController.startAmbient()\n\n-- Preload assets and update progress bar with flicker.\ntask.spawn(function()\n\tPreloader.preloadAll(function(alpha)\n\t\tUIBuilder.setProgress(ui, alpha)\n\tend)\n\t-- Start ambient glitch/lore loops\n\tlocal function loopLore()\n\t\twhile ui.screen.Parent do\n\t\t\tUIBuilder.setLore(ui, Config.LoreSnippets[math.random(1, #Config.LoreSnippets)])\n\t\t\ttask.wait(math.random(Config.UI.loreInterval.Min, Config.UI.loreInterval.Max))\n\t\tend\n\tend\n\tlocal function loopGlitch()\n\t\twhile ui.screen.Parent do\n\t\t\tUIBuilder.playGlitch(ui)\n\t\t\ttask.wait(math.random(Config.UI.glitchInterval.Min, Config.UI.glitchInterval.Max) * 0.35)\n\t\tend\n\tend\n\tcoroutine.wrap(loopLore)()\n\tcoroutine.wrap(loopGlitch)()\nend)\n\n-- Lighting flicker via tagged lights from server environment\nlocal function animateFlicker()\n\twhile ui.screen.Parent do\n\t\tfor _, light in ipairs(workspace:GetDescendants()) do\n\t\t\tif light:IsA(\"PointLight\") and light.Parent and light.Parent:IsA(\"BasePart\") then\n\t\t\t\t-- random flicker with occasional color shift\n\t\t\t\tif math.random() < 0.08 then\n\t\t\t\t\tlocal origB = light.Brightness\n\t\t\t\t\tlocal origC = light.Color\n\t\t\t\t\tlight.Brightness = origB * (0.2 + math.random())\n\t\t\t\t\tif math.random() < 0.2 then\n\t\t\t\t\t\tlight.Color = Color3.fromRGB(200 + math.random(-30, 30), 200 + math.random(-30, 30), 255)\n\t\t\t\t\tend\n\t\t\t\t\ttask.wait(0.05 + math.random() * 0.1)\n\t\t\t\t\tlight.Brightness = origB\n\t\t\t\t\tlight.Color = origC\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tRunService.Heartbeat:Wait()\n\tend\nend\ncoroutine.wrap(animateFlicker)()\n\n-- Moving wall shadows\nlocal function animateShadows()\n\twhile ui.screen.Parent do\n\t\tfor _, bb in ipairs(workspace:GetDescendants()) do\n\t\t\tif bb:IsA(\"BillboardGui\") and bb.Name == \"ShadowBillboard\" then\n\t\t\t\tlocal img = bb:FindFirstChildOfClass(\"ImageLabel\")\n\t\t\t\tif img then\n\t\t\t\t\timg.ImageTransparency = 0.6 + math.noise(os.clock() * 0.7) * 0.2\n\t\t\t\t\tbb.StudsOffset = Vector3.new(0, 0, -0.2 + math.noise(os.clock() * 0.5) * 0.4)\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\tRunService.RenderStepped:Wait()\n\tend\nend\ncoroutine.wrap(animateShadows)()\n\n-- Chapter buttons\nlocal StartChapter = Net:getRemoteEvent(\"StartChapter\")\nfor _, ch in ipairs(Config.Chapters) do\n\tlocal btn = ui.chapterButtons[ch.key]\n\tif btn then\n\t\tbtn.MouseButton1Click:Connect(function()\n\t\t\tif ch.accessible then\n\t\t\t\tAudioController.playTransition()\n\t\t\t\tlocal veil = UIBuilder.fadeToBlack(ui, 1.2)\n\t\t\t\tStartChapter:FireServer(ch.key)\n\t\t\t\ttask.wait(1.5)\n\t\t\t\tveil.BackgroundTransparency = 0\n\t\t\telse\n\t\t\t\tAudioController.playLockedHint()\n\t\t\t\tUIBuilder.playGlitch(ui)\n\t\t\tend\n\t\tend)\n\n\t\tif not ch.accessible then\n\t\t\tbtn.MouseEnter:Connect(function()\n\t\t\t\tAudioController.playLockedHint()\n\t\t\tend)\n\t\tend\n\tend\nend\n\n-- Idle locked-chapter hints\ntask.spawn(function()\n\twhile ui.screen.Parent do\n\t\tlocal waitTime = math.random(7, 14)\n\t\ttask.wait(waitTime)\n\t\tAudioController.playLockedHint()\n\tend\nend)\n\n\n"}
{"prompt": "Adapt Config.lua patterns for modular horror gameplay systems", "completion": "local Config = {}\n\n-- Centralized configuration for lobby UI, audio, chapters, and assets.\n-- Replace placeholder asset IDs with your own uploaded assets as needed.\n\nConfig.GameName = \"Fractured Reality\"\n\nConfig.Chapters = {\n\t{ id = 1, key = \"Chapter1\", title = \"Chapter 1 – The Waking\", accessible = true, placeId = nil, spawnName = \"Chapter1Spawn\" },\n\t{ id = 2, key = \"Chapter2\", title = \"Chapter 2 – Hallways of Madness\", accessible = false },\n\t{ id = 3, key = \"Chapter3\", title = \"Chapter 3 – Whispering Rooms\", accessible = false },\n\t{ id = 4, key = \"Chapter4\", title = \"Chapter 4 – The Hollow Corridor\", accessible = false },\n\t{ id = 5, key = \"Chapter5\", title = \"Chapter 5 – Shattered Laboratories\", accessible = false },\n\t{ id = 6, key = \"Chapter6\", title = \"Chapter 6 – The Fractured Wing\", accessible = false },\n\t{ id = 7, key = \"Chapter7\", title = \"Chapter 7 – Crawling Darkness\", accessible = false },\n\t{ id = 8, key = \"Chapter8\", title = \"Chapter 8 – Final Convergence\", accessible = false },\n}\n\nConfig.UI = {\n\tfont = Enum.Font.GothamMedium,\n\tprimaryColor = Color3.fromRGB(230, 60, 60), -- red accent\n\tprimaryGlow = Color3.fromRGB(255, 30, 30),\n\ttextColor = Color3.fromRGB(220, 220, 220),\n\tmutedTextColor = Color3.fromRGB(130, 130, 130),\n\tbackgroundColor = Color3.fromRGB(8, 8, 10),\n\tpanelColor = Color3.fromRGB(18, 18, 22),\n\tprogressFlickerMin = 0.75,\n\tprogressFlickerMax = 1.0,\n\tprogressFlickerInterval = NumberRange.new(0.08, 0.23),\n\tglitchInterval = NumberRange.new(4, 9),\n\tloreInterval = NumberRange.new(6, 12),\n}\n\nConfig.Images = {\n\tglitch = \"rbxassetid://1234567890\", -- placeholder\n\tshadow = \"rbxassetid://1234567891\",\n\tcracks = \"rbxassetid://1234567892\",\n\twarning = \"rbxassetid://1234567893\",\n\tgraffiti = \"rbxassetid://1234567894\",\n}\n\nConfig.Audio = {\n\tambientHum = \"rbxassetid://1234567001\",\n\tdistantDrips = \"rbxassetid://1234567002\",\n\tcreak = \"rbxassetid://1234567003\",\n\twhispers = \"rbxassetid://1234567004\",\n\ttransitionRumble = \"rbxassetid://1234567005\",\n\tlockedChapterMurmur = {\n\t\t\"rbxassetid://1234567011\",\n\t\t\"rbxassetid://1234567012\",\n\t\t\"rbxassetid://1234567013\",\n\t},\n}\n\nConfig.LoreSnippets = {\n\t\"Your reflection blinks when you don’t.\",\n\t\"Some doors lead back to where you stood, but colder.\",\n\t\"If you see me, don’t look at me.\",\n\t\"Humming stops when it’s close. Silence isn’t safe.\",\n\t\"Pipes rattle from breath, not water.\",\n\t\"Follow the stains. They dry toward exits.\",\n\t\"Whispers come from your left. The answer is right.\",\n\t\"Shadows move to where light won’t.\",\n\t\"Fragments ease the noise, not the truth.\",\n\t\"It remembers the order you chose to run.\",\n}\n\nConfig.Preload = {\n\tsounds = {\n\t\t\"ambientHum\",\n\t\t\"distantDrips\",\n\t\t\"creak\",\n\t\t\"whispers\",\n\t\t\"transitionRumble\",\n\t\t-- locked murmurs\n\t\tunpack((function(list)\n\t\t\tlocal ids = {}\n\t\t\tfor _, v in ipairs(list) do table.insert(ids, v) end\n\t\t\treturn ids\n\t\tend)(Config.Audio.lockedChapterMurmur)),\n\t},\n\timages = {\n\t\t\"glitch\",\n\t\t\"shadow\",\n\t\t\"cracks\",\n\t\t\"warning\",\n\t\t\"graffiti\",\n\t},\n}\n\nfunction Config:getSoundId(keyOrId)\n\tif not keyOrId then return nil end\n\tif typeof(keyOrId) == \"string\" and self.Audio[keyOrId] then\n\t\treturn self.Audio[keyOrId]\n\tend\n\treturn keyOrId\nend\n\nfunction Config:getImageId(keyOrId)\n\tif not keyOrId then return nil end\n\tif typeof(keyOrId) == \"string\" and self.Images[keyOrId] then\n\t\treturn self.Images[keyOrId]\n\tend\n\treturn keyOrId\nend\n\nreturn Config\n\n\n"}
{"prompt": "Adapt Net.lua patterns for modular horror gameplay systems", "completion": "local ReplicatedStorage = game:GetService(\"ReplicatedStorage\")\n\nlocal Net = {}\n\nlocal ROOT_NAME = \"Fractured\"\nlocal REMOTES_NAME = \"Remotes\"\n\nlocal function getRoot()\n\tlocal root = ReplicatedStorage:FindFirstChild(ROOT_NAME)\n\tif not root then\n\t\troot = Instance.new(\"Folder\")\n\t\troot.Name = ROOT_NAME\n\t\troot.Parent = ReplicatedStorage\n\tend\n\treturn root\nend\n\nlocal function getRemotes()\n\tlocal root = getRoot()\n\tlocal remotes = root:FindFirstChild(REMOTES_NAME)\n\tif not remotes then\n\t\tremotes = Instance.new(\"Folder\")\n\t\tremotes.Name = REMOTES_NAME\n\t\tremotes.Parent = root\n\tend\n\treturn remotes\nend\n\nfunction Net:getRemoteEvent(name)\n\tlocal remotes = getRemotes()\n\tlocal evt = remotes:FindFirstChild(name)\n\tif not evt then\n\t\tevt = Instance.new(\"RemoteEvent\")\n\t\tevt.Name = name\n\t\tevt.Parent = remotes\n\tend\n\treturn evt\nend\n\nreturn Net\n\n\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual X6ICV9)", "completion": "-- ServerScriptService/Horror/Ritual_X6ICV9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_X6ICV9 = 667492\nlocal UNIQUE_NAME = 'Ritual_X6ICV9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_X6ICV9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker YZX0ZM)", "completion": "-- ServerScriptService/Horror/NoiseStalker_YZX0ZM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YZX0ZM = 778833\nlocal UNIQUE_NAME = 'NoiseStalker_YZX0ZM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YZX0ZM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_YZX0ZM%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche GR77JT)", "completion": "-- ServerScriptService/Horror/Psyche_GR77JT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GR77JT = 18824\nlocal UNIQUE_NAME = 'Psyche_GR77JT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GR77JT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_GR77JT%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem C4IWP7)", "completion": "-- ServerScriptService/Horror/HideSystem_C4IWP7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C4IWP7 = 231356\nlocal UNIQUE_NAME = 'HideSystem_C4IWP7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C4IWP7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_C4IWP7_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 3CR6U9)", "completion": "-- ServerScriptService/Horror/NetScares_3CR6U9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3CR6U9 = 283973\nlocal UNIQUE_NAME = 'NetScares_3CR6U9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3CR6U9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_3CR6U9'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker BFX3UE)", "completion": "-- ServerScriptService/Horror/NoiseStalker_BFX3UE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BFX3UE = 225399\nlocal UNIQUE_NAME = 'NoiseStalker_BFX3UE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BFX3UE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_BFX3UE%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual DCWE00)", "completion": "-- ServerScriptService/Horror/Ritual_DCWE00.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DCWE00 = 3341\nlocal UNIQUE_NAME = 'Ritual_DCWE00'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DCWE00%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual PD4HNU)", "completion": "-- ServerScriptService/Horror/Ritual_PD4HNU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PD4HNU = 794206\nlocal UNIQUE_NAME = 'Ritual_PD4HNU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PD4HNU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting X32MVI)", "completion": "-- ServerScriptService/Horror/FearLighting_X32MVI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_X32MVI = 10424\nlocal UNIQUE_NAME = 'FearLighting_X32MVI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_X32MVI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_X32MVI%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases XC7URC)", "completion": "-- ServerScriptService/Horror/BossPhases_XC7URC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XC7URC = 175180\nlocal UNIQUE_NAME = 'BossPhases_XC7URC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XC7URC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_XC7URC+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem LE0WV2)", "completion": "-- ServerScriptService/Horror/HideSystem_LE0WV2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LE0WV2 = 92787\nlocal UNIQUE_NAME = 'HideSystem_LE0WV2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LE0WV2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_LE0WV2_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual FDI5N1)", "completion": "-- ServerScriptService/Horror/Ritual_FDI5N1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FDI5N1 = 994437\nlocal UNIQUE_NAME = 'Ritual_FDI5N1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FDI5N1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting DW0R87)", "completion": "-- ServerScriptService/Horror/FearLighting_DW0R87.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DW0R87 = 272107\nlocal UNIQUE_NAME = 'FearLighting_DW0R87'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DW0R87%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_DW0R87%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting PA9NY4)", "completion": "-- ServerScriptService/Horror/FearLighting_PA9NY4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PA9NY4 = 464052\nlocal UNIQUE_NAME = 'FearLighting_PA9NY4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PA9NY4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_PA9NY4%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 8N2QO2)", "completion": "-- ServerScriptService/Horror/Psyche_8N2QO2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8N2QO2 = 298939\nlocal UNIQUE_NAME = 'Psyche_8N2QO2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8N2QO2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_8N2QO2%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI A1A5SP)", "completion": "-- ServerScriptService/Horror/MonsterAI_A1A5SP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_A1A5SP = 390091\nlocal UNIQUE_NAME = 'MonsterAI_A1A5SP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_A1A5SP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_A1A5SP%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem C5LLKK)", "completion": "-- ServerScriptService/Horror/HideSystem_C5LLKK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C5LLKK = 190659\nlocal UNIQUE_NAME = 'HideSystem_C5LLKK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C5LLKK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_C5LLKK_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases Z61PB1)", "completion": "-- ServerScriptService/Horror/BossPhases_Z61PB1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Z61PB1 = 945695\nlocal UNIQUE_NAME = 'BossPhases_Z61PB1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Z61PB1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_Z61PB1+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares QLNP56)", "completion": "-- ServerScriptService/Horror/NetScares_QLNP56.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QLNP56 = 533968\nlocal UNIQUE_NAME = 'NetScares_QLNP56'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QLNP56%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_QLNP56'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 1CFH4L)", "completion": "-- ServerScriptService/Horror/BossPhases_1CFH4L.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1CFH4L = 582849\nlocal UNIQUE_NAME = 'BossPhases_1CFH4L'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1CFH4L%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_1CFH4L+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 059N70)", "completion": "-- ServerScriptService/Horror/HideSystem_059N70.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_059N70 = 404054\nlocal UNIQUE_NAME = 'HideSystem_059N70'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_059N70%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_059N70_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting OOS4GP)", "completion": "-- ServerScriptService/Horror/FearLighting_OOS4GP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OOS4GP = 26730\nlocal UNIQUE_NAME = 'FearLighting_OOS4GP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OOS4GP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_OOS4GP%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche SDLYA6)", "completion": "-- ServerScriptService/Horror/Psyche_SDLYA6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SDLYA6 = 642688\nlocal UNIQUE_NAME = 'Psyche_SDLYA6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SDLYA6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_SDLYA6%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 0BZ619)", "completion": "-- ServerScriptService/Horror/MonsterAI_0BZ619.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0BZ619 = 850453\nlocal UNIQUE_NAME = 'MonsterAI_0BZ619'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0BZ619%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_0BZ619%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem CU41XN)", "completion": "-- ServerScriptService/Horror/HideSystem_CU41XN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CU41XN = 708695\nlocal UNIQUE_NAME = 'HideSystem_CU41XN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CU41XN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_CU41XN_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses OS9ZCI)", "completion": "-- ServerScriptService/Horror/InventoryFuses_OS9ZCI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OS9ZCI = 998038\nlocal UNIQUE_NAME = 'InventoryFuses_OS9ZCI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OS9ZCI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_OS9ZCI_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 6TAYAW)", "completion": "-- ServerScriptService/Horror/InventoryFuses_6TAYAW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6TAYAW = 940347\nlocal UNIQUE_NAME = 'InventoryFuses_6TAYAW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6TAYAW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_6TAYAW_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem ZCMYB6)", "completion": "-- ServerScriptService/Horror/HideSystem_ZCMYB6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZCMYB6 = 849596\nlocal UNIQUE_NAME = 'HideSystem_ZCMYB6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZCMYB6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_ZCMYB6_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms VEJIX8)", "completion": "-- ServerScriptService/Horror/ProcRooms_VEJIX8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VEJIX8 = 976255\nlocal UNIQUE_NAME = 'ProcRooms_VEJIX8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VEJIX8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_VEJIX8%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_VEJIX8%10), 8, 16 + (SEED_VEJIX8%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_VEJIX8%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual X56RDM)", "completion": "-- ServerScriptService/Horror/Ritual_X56RDM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_X56RDM = 956450\nlocal UNIQUE_NAME = 'Ritual_X56RDM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_X56RDM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 76I5OJ)", "completion": "-- ServerScriptService/Horror/NetScares_76I5OJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_76I5OJ = 155878\nlocal UNIQUE_NAME = 'NetScares_76I5OJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_76I5OJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_76I5OJ'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 3MQNXA)", "completion": "-- ServerScriptService/Horror/InventoryFuses_3MQNXA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3MQNXA = 692553\nlocal UNIQUE_NAME = 'InventoryFuses_3MQNXA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3MQNXA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_3MQNXA_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem YKMY9F)", "completion": "-- ServerScriptService/Horror/HideSystem_YKMY9F.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YKMY9F = 745268\nlocal UNIQUE_NAME = 'HideSystem_YKMY9F'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YKMY9F%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_YKMY9F_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases YPCH4O)", "completion": "-- ServerScriptService/Horror/BossPhases_YPCH4O.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YPCH4O = 834146\nlocal UNIQUE_NAME = 'BossPhases_YPCH4O'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YPCH4O%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_YPCH4O+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 0OPEJB)", "completion": "-- ServerScriptService/Horror/NetScares_0OPEJB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0OPEJB = 747892\nlocal UNIQUE_NAME = 'NetScares_0OPEJB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0OPEJB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_0OPEJB'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 3MXFIB)", "completion": "-- ServerScriptService/Horror/Ritual_3MXFIB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3MXFIB = 720019\nlocal UNIQUE_NAME = 'Ritual_3MXFIB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3MXFIB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 9AE7HY)", "completion": "-- ServerScriptService/Horror/FearLighting_9AE7HY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9AE7HY = 179502\nlocal UNIQUE_NAME = 'FearLighting_9AE7HY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9AE7HY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_9AE7HY%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem S5X4W6)", "completion": "-- ServerScriptService/Horror/HideSystem_S5X4W6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S5X4W6 = 921474\nlocal UNIQUE_NAME = 'HideSystem_S5X4W6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S5X4W6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_S5X4W6_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 8AXSOB)", "completion": "-- ServerScriptService/Horror/HideSystem_8AXSOB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8AXSOB = 208486\nlocal UNIQUE_NAME = 'HideSystem_8AXSOB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8AXSOB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_8AXSOB_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares WAAZIT)", "completion": "-- ServerScriptService/Horror/NetScares_WAAZIT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WAAZIT = 527757\nlocal UNIQUE_NAME = 'NetScares_WAAZIT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WAAZIT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_WAAZIT'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker H2SGVW)", "completion": "-- ServerScriptService/Horror/NoiseStalker_H2SGVW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_H2SGVW = 78049\nlocal UNIQUE_NAME = 'NoiseStalker_H2SGVW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_H2SGVW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_H2SGVW%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual GBRQD9)", "completion": "-- ServerScriptService/Horror/Ritual_GBRQD9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GBRQD9 = 61513\nlocal UNIQUE_NAME = 'Ritual_GBRQD9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GBRQD9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses IDC01C)", "completion": "-- ServerScriptService/Horror/InventoryFuses_IDC01C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IDC01C = 362003\nlocal UNIQUE_NAME = 'InventoryFuses_IDC01C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IDC01C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_IDC01C_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem K85XVW)", "completion": "-- ServerScriptService/Horror/HideSystem_K85XVW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_K85XVW = 870352\nlocal UNIQUE_NAME = 'HideSystem_K85XVW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_K85XVW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_K85XVW_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 5CFZ6D)", "completion": "-- ServerScriptService/Horror/InventoryFuses_5CFZ6D.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5CFZ6D = 501665\nlocal UNIQUE_NAME = 'InventoryFuses_5CFZ6D'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5CFZ6D%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_5CFZ6D_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares LTUIJM)", "completion": "-- ServerScriptService/Horror/NetScares_LTUIJM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LTUIJM = 337857\nlocal UNIQUE_NAME = 'NetScares_LTUIJM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LTUIJM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_LTUIJM'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases R25968)", "completion": "-- ServerScriptService/Horror/BossPhases_R25968.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_R25968 = 749088\nlocal UNIQUE_NAME = 'BossPhases_R25968'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_R25968%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_R25968+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses L26TJV)", "completion": "-- ServerScriptService/Horror/InventoryFuses_L26TJV.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_L26TJV = 562053\nlocal UNIQUE_NAME = 'InventoryFuses_L26TJV'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_L26TJV%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_L26TJV_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 3HF9ZX)", "completion": "-- ServerScriptService/Horror/Ritual_3HF9ZX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3HF9ZX = 507912\nlocal UNIQUE_NAME = 'Ritual_3HF9ZX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3HF9ZX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses TC7XF8)", "completion": "-- ServerScriptService/Horror/InventoryFuses_TC7XF8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TC7XF8 = 223132\nlocal UNIQUE_NAME = 'InventoryFuses_TC7XF8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TC7XF8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_TC7XF8_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche BUIDIJ)", "completion": "-- ServerScriptService/Horror/Psyche_BUIDIJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BUIDIJ = 241081\nlocal UNIQUE_NAME = 'Psyche_BUIDIJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BUIDIJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_BUIDIJ%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses GTQQJB)", "completion": "-- ServerScriptService/Horror/InventoryFuses_GTQQJB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GTQQJB = 132864\nlocal UNIQUE_NAME = 'InventoryFuses_GTQQJB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GTQQJB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_GTQQJB_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI TTP72W)", "completion": "-- ServerScriptService/Horror/MonsterAI_TTP72W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TTP72W = 996432\nlocal UNIQUE_NAME = 'MonsterAI_TTP72W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TTP72W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_TTP72W%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem Y9TXFI)", "completion": "-- ServerScriptService/Horror/HideSystem_Y9TXFI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Y9TXFI = 373031\nlocal UNIQUE_NAME = 'HideSystem_Y9TXFI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Y9TXFI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_Y9TXFI_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 4UNQ8A)", "completion": "-- ServerScriptService/Horror/InventoryFuses_4UNQ8A.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4UNQ8A = 39584\nlocal UNIQUE_NAME = 'InventoryFuses_4UNQ8A'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4UNQ8A%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_4UNQ8A_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker QW92Z1)", "completion": "-- ServerScriptService/Horror/NoiseStalker_QW92Z1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QW92Z1 = 127571\nlocal UNIQUE_NAME = 'NoiseStalker_QW92Z1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QW92Z1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_QW92Z1%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 9QJGB6)", "completion": "-- ServerScriptService/Horror/HideSystem_9QJGB6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9QJGB6 = 890253\nlocal UNIQUE_NAME = 'HideSystem_9QJGB6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9QJGB6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_9QJGB6_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI HRWENK)", "completion": "-- ServerScriptService/Horror/MonsterAI_HRWENK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HRWENK = 888273\nlocal UNIQUE_NAME = 'MonsterAI_HRWENK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HRWENK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_HRWENK%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker BZGGMN)", "completion": "-- ServerScriptService/Horror/NoiseStalker_BZGGMN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BZGGMN = 31586\nlocal UNIQUE_NAME = 'NoiseStalker_BZGGMN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BZGGMN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_BZGGMN%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses MJWODD)", "completion": "-- ServerScriptService/Horror/InventoryFuses_MJWODD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MJWODD = 807687\nlocal UNIQUE_NAME = 'InventoryFuses_MJWODD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MJWODD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_MJWODD_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 73IU3H)", "completion": "-- ServerScriptService/Horror/ProcRooms_73IU3H.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_73IU3H = 530589\nlocal UNIQUE_NAME = 'ProcRooms_73IU3H'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_73IU3H%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_73IU3H%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_73IU3H%10), 8, 16 + (SEED_73IU3H%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_73IU3H%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms N2VUPY)", "completion": "-- ServerScriptService/Horror/ProcRooms_N2VUPY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_N2VUPY = 823343\nlocal UNIQUE_NAME = 'ProcRooms_N2VUPY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_N2VUPY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_N2VUPY%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_N2VUPY%10), 8, 16 + (SEED_N2VUPY%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_N2VUPY%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 72FZPC)", "completion": "-- ServerScriptService/Horror/HideSystem_72FZPC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_72FZPC = 816255\nlocal UNIQUE_NAME = 'HideSystem_72FZPC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_72FZPC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_72FZPC_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual V266TH)", "completion": "-- ServerScriptService/Horror/Ritual_V266TH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V266TH = 974220\nlocal UNIQUE_NAME = 'Ritual_V266TH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V266TH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting L5JQG3)", "completion": "-- ServerScriptService/Horror/FearLighting_L5JQG3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_L5JQG3 = 797906\nlocal UNIQUE_NAME = 'FearLighting_L5JQG3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_L5JQG3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_L5JQG3%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 298O0U)", "completion": "-- ServerScriptService/Horror/NetScares_298O0U.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_298O0U = 468325\nlocal UNIQUE_NAME = 'NetScares_298O0U'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_298O0U%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_298O0U'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares ONZ8ND)", "completion": "-- ServerScriptService/Horror/NetScares_ONZ8ND.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ONZ8ND = 826528\nlocal UNIQUE_NAME = 'NetScares_ONZ8ND'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ONZ8ND%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_ONZ8ND'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses G071Y8)", "completion": "-- ServerScriptService/Horror/InventoryFuses_G071Y8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G071Y8 = 582073\nlocal UNIQUE_NAME = 'InventoryFuses_G071Y8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G071Y8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_G071Y8_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual WTQAHN)", "completion": "-- ServerScriptService/Horror/Ritual_WTQAHN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WTQAHN = 489619\nlocal UNIQUE_NAME = 'Ritual_WTQAHN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WTQAHN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker U4R3WO)", "completion": "-- ServerScriptService/Horror/NoiseStalker_U4R3WO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_U4R3WO = 763036\nlocal UNIQUE_NAME = 'NoiseStalker_U4R3WO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_U4R3WO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_U4R3WO%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem F0N63M)", "completion": "-- ServerScriptService/Horror/HideSystem_F0N63M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_F0N63M = 301198\nlocal UNIQUE_NAME = 'HideSystem_F0N63M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_F0N63M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_F0N63M_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting JQISH1)", "completion": "-- ServerScriptService/Horror/FearLighting_JQISH1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JQISH1 = 119574\nlocal UNIQUE_NAME = 'FearLighting_JQISH1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JQISH1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_JQISH1%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting X0M602)", "completion": "-- ServerScriptService/Horror/FearLighting_X0M602.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_X0M602 = 987585\nlocal UNIQUE_NAME = 'FearLighting_X0M602'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_X0M602%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_X0M602%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche O39RO9)", "completion": "-- ServerScriptService/Horror/Psyche_O39RO9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O39RO9 = 587719\nlocal UNIQUE_NAME = 'Psyche_O39RO9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O39RO9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_O39RO9%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares WBB0DA)", "completion": "-- ServerScriptService/Horror/NetScares_WBB0DA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WBB0DA = 755209\nlocal UNIQUE_NAME = 'NetScares_WBB0DA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WBB0DA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_WBB0DA'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 8GFE3E)", "completion": "-- ServerScriptService/Horror/ProcRooms_8GFE3E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8GFE3E = 462681\nlocal UNIQUE_NAME = 'ProcRooms_8GFE3E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8GFE3E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_8GFE3E%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_8GFE3E%10), 8, 16 + (SEED_8GFE3E%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_8GFE3E%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 0EEVYP)", "completion": "-- ServerScriptService/Horror/MonsterAI_0EEVYP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0EEVYP = 703728\nlocal UNIQUE_NAME = 'MonsterAI_0EEVYP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0EEVYP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_0EEVYP%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares JSMPA1)", "completion": "-- ServerScriptService/Horror/NetScares_JSMPA1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JSMPA1 = 77539\nlocal UNIQUE_NAME = 'NetScares_JSMPA1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JSMPA1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_JSMPA1'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares RBYLC6)", "completion": "-- ServerScriptService/Horror/NetScares_RBYLC6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RBYLC6 = 465513\nlocal UNIQUE_NAME = 'NetScares_RBYLC6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RBYLC6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_RBYLC6'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker JQV7TJ)", "completion": "-- ServerScriptService/Horror/NoiseStalker_JQV7TJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JQV7TJ = 862910\nlocal UNIQUE_NAME = 'NoiseStalker_JQV7TJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JQV7TJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_JQV7TJ%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 3BQD3W)", "completion": "-- ServerScriptService/Horror/NoiseStalker_3BQD3W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3BQD3W = 186956\nlocal UNIQUE_NAME = 'NoiseStalker_3BQD3W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3BQD3W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_3BQD3W%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting TKN574)", "completion": "-- ServerScriptService/Horror/FearLighting_TKN574.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TKN574 = 437216\nlocal UNIQUE_NAME = 'FearLighting_TKN574'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TKN574%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_TKN574%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI WLIONK)", "completion": "-- ServerScriptService/Horror/MonsterAI_WLIONK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WLIONK = 811463\nlocal UNIQUE_NAME = 'MonsterAI_WLIONK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WLIONK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_WLIONK%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 2WHN5Y)", "completion": "-- ServerScriptService/Horror/BossPhases_2WHN5Y.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2WHN5Y = 861321\nlocal UNIQUE_NAME = 'BossPhases_2WHN5Y'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2WHN5Y%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_2WHN5Y+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 7N9IPZ)", "completion": "-- ServerScriptService/Horror/NetScares_7N9IPZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7N9IPZ = 876324\nlocal UNIQUE_NAME = 'NetScares_7N9IPZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7N9IPZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_7N9IPZ'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI BEHNZO)", "completion": "-- ServerScriptService/Horror/MonsterAI_BEHNZO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BEHNZO = 691098\nlocal UNIQUE_NAME = 'MonsterAI_BEHNZO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BEHNZO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_BEHNZO%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases CQDOYO)", "completion": "-- ServerScriptService/Horror/BossPhases_CQDOYO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CQDOYO = 507777\nlocal UNIQUE_NAME = 'BossPhases_CQDOYO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CQDOYO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_CQDOYO+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases X1ARA0)", "completion": "-- ServerScriptService/Horror/BossPhases_X1ARA0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_X1ARA0 = 461742\nlocal UNIQUE_NAME = 'BossPhases_X1ARA0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_X1ARA0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_X1ARA0+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 40EXUD)", "completion": "-- ServerScriptService/Horror/MonsterAI_40EXUD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_40EXUD = 448661\nlocal UNIQUE_NAME = 'MonsterAI_40EXUD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_40EXUD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_40EXUD%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker TR3BWN)", "completion": "-- ServerScriptService/Horror/NoiseStalker_TR3BWN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TR3BWN = 805768\nlocal UNIQUE_NAME = 'NoiseStalker_TR3BWN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TR3BWN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_TR3BWN%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual PSSPYZ)", "completion": "-- ServerScriptService/Horror/Ritual_PSSPYZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PSSPYZ = 310140\nlocal UNIQUE_NAME = 'Ritual_PSSPYZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PSSPYZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting KFF2ZT)", "completion": "-- ServerScriptService/Horror/FearLighting_KFF2ZT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KFF2ZT = 752802\nlocal UNIQUE_NAME = 'FearLighting_KFF2ZT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KFF2ZT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_KFF2ZT%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 5WR37U)", "completion": "-- ServerScriptService/Horror/BossPhases_5WR37U.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5WR37U = 496438\nlocal UNIQUE_NAME = 'BossPhases_5WR37U'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5WR37U%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_5WR37U+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses NIXXJN)", "completion": "-- ServerScriptService/Horror/InventoryFuses_NIXXJN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NIXXJN = 917305\nlocal UNIQUE_NAME = 'InventoryFuses_NIXXJN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NIXXJN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_NIXXJN_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses EDNI3Q)", "completion": "-- ServerScriptService/Horror/InventoryFuses_EDNI3Q.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EDNI3Q = 171243\nlocal UNIQUE_NAME = 'InventoryFuses_EDNI3Q'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EDNI3Q%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_EDNI3Q_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual IL3ZT1)", "completion": "-- ServerScriptService/Horror/Ritual_IL3ZT1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IL3ZT1 = 281510\nlocal UNIQUE_NAME = 'Ritual_IL3ZT1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IL3ZT1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses T3MS78)", "completion": "-- ServerScriptService/Horror/InventoryFuses_T3MS78.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T3MS78 = 772521\nlocal UNIQUE_NAME = 'InventoryFuses_T3MS78'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T3MS78%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_T3MS78_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 1PWX6V)", "completion": "-- ServerScriptService/Horror/NetScares_1PWX6V.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1PWX6V = 282234\nlocal UNIQUE_NAME = 'NetScares_1PWX6V'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1PWX6V%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_1PWX6V'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem VFW2HC)", "completion": "-- ServerScriptService/Horror/HideSystem_VFW2HC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VFW2HC = 667967\nlocal UNIQUE_NAME = 'HideSystem_VFW2HC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VFW2HC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_VFW2HC_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI WS1AJG)", "completion": "-- ServerScriptService/Horror/MonsterAI_WS1AJG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WS1AJG = 734495\nlocal UNIQUE_NAME = 'MonsterAI_WS1AJG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WS1AJG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_WS1AJG%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual N1KC8I)", "completion": "-- ServerScriptService/Horror/Ritual_N1KC8I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_N1KC8I = 317484\nlocal UNIQUE_NAME = 'Ritual_N1KC8I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_N1KC8I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases QOODCU)", "completion": "-- ServerScriptService/Horror/BossPhases_QOODCU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QOODCU = 601401\nlocal UNIQUE_NAME = 'BossPhases_QOODCU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QOODCU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_QOODCU+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms VCF75L)", "completion": "-- ServerScriptService/Horror/ProcRooms_VCF75L.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VCF75L = 897410\nlocal UNIQUE_NAME = 'ProcRooms_VCF75L'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VCF75L%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_VCF75L%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_VCF75L%10), 8, 16 + (SEED_VCF75L%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_VCF75L%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares ZPJF80)", "completion": "-- ServerScriptService/Horror/NetScares_ZPJF80.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZPJF80 = 411465\nlocal UNIQUE_NAME = 'NetScares_ZPJF80'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZPJF80%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_ZPJF80'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 9I7V2G)", "completion": "-- ServerScriptService/Horror/InventoryFuses_9I7V2G.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9I7V2G = 707668\nlocal UNIQUE_NAME = 'InventoryFuses_9I7V2G'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9I7V2G%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_9I7V2G_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 6RQ1X7)", "completion": "-- ServerScriptService/Horror/InventoryFuses_6RQ1X7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6RQ1X7 = 821794\nlocal UNIQUE_NAME = 'InventoryFuses_6RQ1X7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6RQ1X7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_6RQ1X7_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases LZD0JH)", "completion": "-- ServerScriptService/Horror/BossPhases_LZD0JH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LZD0JH = 898068\nlocal UNIQUE_NAME = 'BossPhases_LZD0JH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LZD0JH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_LZD0JH+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 2LUB3Q)", "completion": "-- ServerScriptService/Horror/ProcRooms_2LUB3Q.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2LUB3Q = 722406\nlocal UNIQUE_NAME = 'ProcRooms_2LUB3Q'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2LUB3Q%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_2LUB3Q%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_2LUB3Q%10), 8, 16 + (SEED_2LUB3Q%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_2LUB3Q%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker Y6TLNG)", "completion": "-- ServerScriptService/Horror/NoiseStalker_Y6TLNG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Y6TLNG = 232037\nlocal UNIQUE_NAME = 'NoiseStalker_Y6TLNG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Y6TLNG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_Y6TLNG%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem Q8LGQZ)", "completion": "-- ServerScriptService/Horror/HideSystem_Q8LGQZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Q8LGQZ = 150039\nlocal UNIQUE_NAME = 'HideSystem_Q8LGQZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Q8LGQZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_Q8LGQZ_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting MQ2U03)", "completion": "-- ServerScriptService/Horror/FearLighting_MQ2U03.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MQ2U03 = 637610\nlocal UNIQUE_NAME = 'FearLighting_MQ2U03'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MQ2U03%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_MQ2U03%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 8QOCFK)", "completion": "-- ServerScriptService/Horror/FearLighting_8QOCFK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8QOCFK = 430897\nlocal UNIQUE_NAME = 'FearLighting_8QOCFK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8QOCFK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_8QOCFK%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche B5U6L6)", "completion": "-- ServerScriptService/Horror/Psyche_B5U6L6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_B5U6L6 = 722355\nlocal UNIQUE_NAME = 'Psyche_B5U6L6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_B5U6L6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_B5U6L6%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting CXDKDO)", "completion": "-- ServerScriptService/Horror/FearLighting_CXDKDO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CXDKDO = 208711\nlocal UNIQUE_NAME = 'FearLighting_CXDKDO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CXDKDO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_CXDKDO%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms Z6V6NV)", "completion": "-- ServerScriptService/Horror/ProcRooms_Z6V6NV.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Z6V6NV = 335562\nlocal UNIQUE_NAME = 'ProcRooms_Z6V6NV'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Z6V6NV%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_Z6V6NV%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_Z6V6NV%10), 8, 16 + (SEED_Z6V6NV%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_Z6V6NV%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 55NX23)", "completion": "-- ServerScriptService/Horror/Psyche_55NX23.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_55NX23 = 169408\nlocal UNIQUE_NAME = 'Psyche_55NX23'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_55NX23%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_55NX23%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses I42VCC)", "completion": "-- ServerScriptService/Horror/InventoryFuses_I42VCC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_I42VCC = 224095\nlocal UNIQUE_NAME = 'InventoryFuses_I42VCC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_I42VCC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_I42VCC_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem WEGSY2)", "completion": "-- ServerScriptService/Horror/HideSystem_WEGSY2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WEGSY2 = 805862\nlocal UNIQUE_NAME = 'HideSystem_WEGSY2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WEGSY2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_WEGSY2_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 8UL3W8)", "completion": "-- ServerScriptService/Horror/Ritual_8UL3W8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8UL3W8 = 39293\nlocal UNIQUE_NAME = 'Ritual_8UL3W8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8UL3W8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem F9MTB1)", "completion": "-- ServerScriptService/Horror/HideSystem_F9MTB1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_F9MTB1 = 501559\nlocal UNIQUE_NAME = 'HideSystem_F9MTB1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_F9MTB1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_F9MTB1_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 0PAW8I)", "completion": "-- ServerScriptService/Horror/Ritual_0PAW8I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0PAW8I = 199521\nlocal UNIQUE_NAME = 'Ritual_0PAW8I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0PAW8I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem GH5BG4)", "completion": "-- ServerScriptService/Horror/HideSystem_GH5BG4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GH5BG4 = 85214\nlocal UNIQUE_NAME = 'HideSystem_GH5BG4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GH5BG4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_GH5BG4_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 0NR83I)", "completion": "-- ServerScriptService/Horror/ProcRooms_0NR83I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0NR83I = 964871\nlocal UNIQUE_NAME = 'ProcRooms_0NR83I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0NR83I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_0NR83I%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_0NR83I%10), 8, 16 + (SEED_0NR83I%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_0NR83I%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem P5N68V)", "completion": "-- ServerScriptService/Horror/HideSystem_P5N68V.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_P5N68V = 246435\nlocal UNIQUE_NAME = 'HideSystem_P5N68V'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_P5N68V%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_P5N68V_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 2T5NCO)", "completion": "-- ServerScriptService/Horror/Ritual_2T5NCO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2T5NCO = 335119\nlocal UNIQUE_NAME = 'Ritual_2T5NCO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2T5NCO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI BSWC28)", "completion": "-- ServerScriptService/Horror/MonsterAI_BSWC28.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BSWC28 = 415867\nlocal UNIQUE_NAME = 'MonsterAI_BSWC28'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BSWC28%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_BSWC28%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem F8HM48)", "completion": "-- ServerScriptService/Horror/HideSystem_F8HM48.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_F8HM48 = 680040\nlocal UNIQUE_NAME = 'HideSystem_F8HM48'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_F8HM48%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_F8HM48_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 1O7CV4)", "completion": "-- ServerScriptService/Horror/BossPhases_1O7CV4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1O7CV4 = 778003\nlocal UNIQUE_NAME = 'BossPhases_1O7CV4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1O7CV4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_1O7CV4+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms Z3AWX3)", "completion": "-- ServerScriptService/Horror/ProcRooms_Z3AWX3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Z3AWX3 = 663041\nlocal UNIQUE_NAME = 'ProcRooms_Z3AWX3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Z3AWX3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_Z3AWX3%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_Z3AWX3%10), 8, 16 + (SEED_Z3AWX3%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_Z3AWX3%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares RAZ8XB)", "completion": "-- ServerScriptService/Horror/NetScares_RAZ8XB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RAZ8XB = 773565\nlocal UNIQUE_NAME = 'NetScares_RAZ8XB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RAZ8XB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_RAZ8XB'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI NY4JUU)", "completion": "-- ServerScriptService/Horror/MonsterAI_NY4JUU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NY4JUU = 120972\nlocal UNIQUE_NAME = 'MonsterAI_NY4JUU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NY4JUU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_NY4JUU%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker EX4K5R)", "completion": "-- ServerScriptService/Horror/NoiseStalker_EX4K5R.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EX4K5R = 138008\nlocal UNIQUE_NAME = 'NoiseStalker_EX4K5R'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EX4K5R%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_EX4K5R%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting LKN563)", "completion": "-- ServerScriptService/Horror/FearLighting_LKN563.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LKN563 = 435372\nlocal UNIQUE_NAME = 'FearLighting_LKN563'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LKN563%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_LKN563%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 695JRA)", "completion": "-- ServerScriptService/Horror/FearLighting_695JRA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_695JRA = 758047\nlocal UNIQUE_NAME = 'FearLighting_695JRA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_695JRA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_695JRA%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche KOZLMR)", "completion": "-- ServerScriptService/Horror/Psyche_KOZLMR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KOZLMR = 874951\nlocal UNIQUE_NAME = 'Psyche_KOZLMR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KOZLMR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_KOZLMR%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses YP9S44)", "completion": "-- ServerScriptService/Horror/InventoryFuses_YP9S44.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YP9S44 = 864887\nlocal UNIQUE_NAME = 'InventoryFuses_YP9S44'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YP9S44%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_YP9S44_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting TU2S52)", "completion": "-- ServerScriptService/Horror/FearLighting_TU2S52.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TU2S52 = 50166\nlocal UNIQUE_NAME = 'FearLighting_TU2S52'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TU2S52%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_TU2S52%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem CMGQTO)", "completion": "-- ServerScriptService/Horror/HideSystem_CMGQTO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CMGQTO = 605957\nlocal UNIQUE_NAME = 'HideSystem_CMGQTO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CMGQTO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_CMGQTO_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI ITIIEC)", "completion": "-- ServerScriptService/Horror/MonsterAI_ITIIEC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ITIIEC = 387811\nlocal UNIQUE_NAME = 'MonsterAI_ITIIEC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ITIIEC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_ITIIEC%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting GDXU4O)", "completion": "-- ServerScriptService/Horror/FearLighting_GDXU4O.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GDXU4O = 691658\nlocal UNIQUE_NAME = 'FearLighting_GDXU4O'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GDXU4O%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_GDXU4O%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI NSTO4W)", "completion": "-- ServerScriptService/Horror/MonsterAI_NSTO4W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NSTO4W = 26699\nlocal UNIQUE_NAME = 'MonsterAI_NSTO4W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NSTO4W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_NSTO4W%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual CVL4UL)", "completion": "-- ServerScriptService/Horror/Ritual_CVL4UL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CVL4UL = 257449\nlocal UNIQUE_NAME = 'Ritual_CVL4UL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CVL4UL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 9WRWBC)", "completion": "-- ServerScriptService/Horror/MonsterAI_9WRWBC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9WRWBC = 260038\nlocal UNIQUE_NAME = 'MonsterAI_9WRWBC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9WRWBC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_9WRWBC%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker RXE9C8)", "completion": "-- ServerScriptService/Horror/NoiseStalker_RXE9C8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RXE9C8 = 868459\nlocal UNIQUE_NAME = 'NoiseStalker_RXE9C8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RXE9C8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_RXE9C8%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche SQJ3D4)", "completion": "-- ServerScriptService/Horror/Psyche_SQJ3D4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SQJ3D4 = 593852\nlocal UNIQUE_NAME = 'Psyche_SQJ3D4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SQJ3D4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_SQJ3D4%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases HB0APK)", "completion": "-- ServerScriptService/Horror/BossPhases_HB0APK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HB0APK = 335157\nlocal UNIQUE_NAME = 'BossPhases_HB0APK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HB0APK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_HB0APK+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual LUKD1O)", "completion": "-- ServerScriptService/Horror/Ritual_LUKD1O.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LUKD1O = 255359\nlocal UNIQUE_NAME = 'Ritual_LUKD1O'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LUKD1O%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 7VEFTO)", "completion": "-- ServerScriptService/Horror/MonsterAI_7VEFTO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7VEFTO = 826465\nlocal UNIQUE_NAME = 'MonsterAI_7VEFTO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7VEFTO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_7VEFTO%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms GM9B8S)", "completion": "-- ServerScriptService/Horror/ProcRooms_GM9B8S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GM9B8S = 812276\nlocal UNIQUE_NAME = 'ProcRooms_GM9B8S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GM9B8S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_GM9B8S%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_GM9B8S%10), 8, 16 + (SEED_GM9B8S%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_GM9B8S%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 6K9GGI)", "completion": "-- ServerScriptService/Horror/NoiseStalker_6K9GGI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6K9GGI = 53778\nlocal UNIQUE_NAME = 'NoiseStalker_6K9GGI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6K9GGI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_6K9GGI%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 4CZ5DD)", "completion": "-- ServerScriptService/Horror/InventoryFuses_4CZ5DD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4CZ5DD = 999009\nlocal UNIQUE_NAME = 'InventoryFuses_4CZ5DD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4CZ5DD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_4CZ5DD_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses E2KYFK)", "completion": "-- ServerScriptService/Horror/InventoryFuses_E2KYFK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_E2KYFK = 729327\nlocal UNIQUE_NAME = 'InventoryFuses_E2KYFK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_E2KYFK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_E2KYFK_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 1D0QGT)", "completion": "-- ServerScriptService/Horror/NoiseStalker_1D0QGT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1D0QGT = 973111\nlocal UNIQUE_NAME = 'NoiseStalker_1D0QGT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1D0QGT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_1D0QGT%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI MWZPVY)", "completion": "-- ServerScriptService/Horror/MonsterAI_MWZPVY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MWZPVY = 46974\nlocal UNIQUE_NAME = 'MonsterAI_MWZPVY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MWZPVY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_MWZPVY%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche J4CAGP)", "completion": "-- ServerScriptService/Horror/Psyche_J4CAGP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_J4CAGP = 973416\nlocal UNIQUE_NAME = 'Psyche_J4CAGP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_J4CAGP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_J4CAGP%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 0IS8SZ)", "completion": "-- ServerScriptService/Horror/HideSystem_0IS8SZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0IS8SZ = 28761\nlocal UNIQUE_NAME = 'HideSystem_0IS8SZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0IS8SZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_0IS8SZ_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI LL3L75)", "completion": "-- ServerScriptService/Horror/MonsterAI_LL3L75.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LL3L75 = 938183\nlocal UNIQUE_NAME = 'MonsterAI_LL3L75'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LL3L75%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_LL3L75%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual MD2R06)", "completion": "-- ServerScriptService/Horror/Ritual_MD2R06.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MD2R06 = 910202\nlocal UNIQUE_NAME = 'Ritual_MD2R06'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MD2R06%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases TM4WFJ)", "completion": "-- ServerScriptService/Horror/BossPhases_TM4WFJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TM4WFJ = 802904\nlocal UNIQUE_NAME = 'BossPhases_TM4WFJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TM4WFJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_TM4WFJ+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 3FLV8K)", "completion": "-- ServerScriptService/Horror/NoiseStalker_3FLV8K.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3FLV8K = 886637\nlocal UNIQUE_NAME = 'NoiseStalker_3FLV8K'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3FLV8K%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_3FLV8K%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting WO2Z2E)", "completion": "-- ServerScriptService/Horror/FearLighting_WO2Z2E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WO2Z2E = 276064\nlocal UNIQUE_NAME = 'FearLighting_WO2Z2E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WO2Z2E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_WO2Z2E%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses BCX95O)", "completion": "-- ServerScriptService/Horror/InventoryFuses_BCX95O.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BCX95O = 234195\nlocal UNIQUE_NAME = 'InventoryFuses_BCX95O'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BCX95O%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_BCX95O_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 5T884P)", "completion": "-- ServerScriptService/Horror/ProcRooms_5T884P.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5T884P = 43925\nlocal UNIQUE_NAME = 'ProcRooms_5T884P'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5T884P%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_5T884P%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_5T884P%10), 8, 16 + (SEED_5T884P%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_5T884P%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche K91D1Y)", "completion": "-- ServerScriptService/Horror/Psyche_K91D1Y.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_K91D1Y = 455899\nlocal UNIQUE_NAME = 'Psyche_K91D1Y'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_K91D1Y%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_K91D1Y%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche RRMFF0)", "completion": "-- ServerScriptService/Horror/Psyche_RRMFF0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RRMFF0 = 351458\nlocal UNIQUE_NAME = 'Psyche_RRMFF0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RRMFF0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_RRMFF0%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 78ZC43)", "completion": "-- ServerScriptService/Horror/InventoryFuses_78ZC43.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_78ZC43 = 641448\nlocal UNIQUE_NAME = 'InventoryFuses_78ZC43'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_78ZC43%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_78ZC43_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases W5AYIN)", "completion": "-- ServerScriptService/Horror/BossPhases_W5AYIN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_W5AYIN = 425657\nlocal UNIQUE_NAME = 'BossPhases_W5AYIN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_W5AYIN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_W5AYIN+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 1H9WJ0)", "completion": "-- ServerScriptService/Horror/NoiseStalker_1H9WJ0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1H9WJ0 = 676617\nlocal UNIQUE_NAME = 'NoiseStalker_1H9WJ0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1H9WJ0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_1H9WJ0%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI OJ5IE9)", "completion": "-- ServerScriptService/Horror/MonsterAI_OJ5IE9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OJ5IE9 = 806850\nlocal UNIQUE_NAME = 'MonsterAI_OJ5IE9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OJ5IE9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_OJ5IE9%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 0KGCNR)", "completion": "-- ServerScriptService/Horror/HideSystem_0KGCNR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0KGCNR = 669781\nlocal UNIQUE_NAME = 'HideSystem_0KGCNR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0KGCNR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_0KGCNR_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting FCHAYE)", "completion": "-- ServerScriptService/Horror/FearLighting_FCHAYE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FCHAYE = 148527\nlocal UNIQUE_NAME = 'FearLighting_FCHAYE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FCHAYE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_FCHAYE%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 7S8ZDZ)", "completion": "-- ServerScriptService/Horror/Psyche_7S8ZDZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7S8ZDZ = 987876\nlocal UNIQUE_NAME = 'Psyche_7S8ZDZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7S8ZDZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_7S8ZDZ%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI GLUT0O)", "completion": "-- ServerScriptService/Horror/MonsterAI_GLUT0O.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GLUT0O = 150845\nlocal UNIQUE_NAME = 'MonsterAI_GLUT0O'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GLUT0O%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_GLUT0O%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem ZTRHIT)", "completion": "-- ServerScriptService/Horror/HideSystem_ZTRHIT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZTRHIT = 903709\nlocal UNIQUE_NAME = 'HideSystem_ZTRHIT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZTRHIT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_ZTRHIT_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares V4FKTA)", "completion": "-- ServerScriptService/Horror/NetScares_V4FKTA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V4FKTA = 598536\nlocal UNIQUE_NAME = 'NetScares_V4FKTA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V4FKTA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_V4FKTA'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche IHF4G6)", "completion": "-- ServerScriptService/Horror/Psyche_IHF4G6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IHF4G6 = 111205\nlocal UNIQUE_NAME = 'Psyche_IHF4G6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IHF4G6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_IHF4G6%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 0MVJD1)", "completion": "-- ServerScriptService/Horror/FearLighting_0MVJD1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0MVJD1 = 809813\nlocal UNIQUE_NAME = 'FearLighting_0MVJD1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0MVJD1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_0MVJD1%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 0SLH3H)", "completion": "-- ServerScriptService/Horror/InventoryFuses_0SLH3H.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0SLH3H = 339445\nlocal UNIQUE_NAME = 'InventoryFuses_0SLH3H'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0SLH3H%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_0SLH3H_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares AG4VHI)", "completion": "-- ServerScriptService/Horror/NetScares_AG4VHI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AG4VHI = 211921\nlocal UNIQUE_NAME = 'NetScares_AG4VHI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AG4VHI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_AG4VHI'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker FJBE97)", "completion": "-- ServerScriptService/Horror/NoiseStalker_FJBE97.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FJBE97 = 398607\nlocal UNIQUE_NAME = 'NoiseStalker_FJBE97'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FJBE97%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_FJBE97%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem WUX35R)", "completion": "-- ServerScriptService/Horror/HideSystem_WUX35R.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WUX35R = 336722\nlocal UNIQUE_NAME = 'HideSystem_WUX35R'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WUX35R%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_WUX35R_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem I17Y9S)", "completion": "-- ServerScriptService/Horror/HideSystem_I17Y9S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_I17Y9S = 386969\nlocal UNIQUE_NAME = 'HideSystem_I17Y9S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_I17Y9S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_I17Y9S_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 03Y9XJ)", "completion": "-- ServerScriptService/Horror/FearLighting_03Y9XJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_03Y9XJ = 202129\nlocal UNIQUE_NAME = 'FearLighting_03Y9XJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_03Y9XJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_03Y9XJ%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares EEB27G)", "completion": "-- ServerScriptService/Horror/NetScares_EEB27G.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EEB27G = 374336\nlocal UNIQUE_NAME = 'NetScares_EEB27G'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EEB27G%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_EEB27G'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases Q2C5YB)", "completion": "-- ServerScriptService/Horror/BossPhases_Q2C5YB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Q2C5YB = 500396\nlocal UNIQUE_NAME = 'BossPhases_Q2C5YB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Q2C5YB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_Q2C5YB+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual Z5X45E)", "completion": "-- ServerScriptService/Horror/Ritual_Z5X45E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Z5X45E = 873764\nlocal UNIQUE_NAME = 'Ritual_Z5X45E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Z5X45E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI JQX6J7)", "completion": "-- ServerScriptService/Horror/MonsterAI_JQX6J7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JQX6J7 = 446592\nlocal UNIQUE_NAME = 'MonsterAI_JQX6J7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JQX6J7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_JQX6J7%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem YFP0AK)", "completion": "-- ServerScriptService/Horror/HideSystem_YFP0AK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YFP0AK = 759140\nlocal UNIQUE_NAME = 'HideSystem_YFP0AK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YFP0AK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_YFP0AK_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses HQ6GEZ)", "completion": "-- ServerScriptService/Horror/InventoryFuses_HQ6GEZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HQ6GEZ = 522552\nlocal UNIQUE_NAME = 'InventoryFuses_HQ6GEZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HQ6GEZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_HQ6GEZ_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares YOR43G)", "completion": "-- ServerScriptService/Horror/NetScares_YOR43G.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YOR43G = 795828\nlocal UNIQUE_NAME = 'NetScares_YOR43G'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YOR43G%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_YOR43G'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 2D7L6E)", "completion": "-- ServerScriptService/Horror/NoiseStalker_2D7L6E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2D7L6E = 396300\nlocal UNIQUE_NAME = 'NoiseStalker_2D7L6E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2D7L6E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_2D7L6E%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms AE440L)", "completion": "-- ServerScriptService/Horror/ProcRooms_AE440L.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AE440L = 622640\nlocal UNIQUE_NAME = 'ProcRooms_AE440L'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AE440L%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_AE440L%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_AE440L%10), 8, 16 + (SEED_AE440L%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_AE440L%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms PL5C5M)", "completion": "-- ServerScriptService/Horror/ProcRooms_PL5C5M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PL5C5M = 663536\nlocal UNIQUE_NAME = 'ProcRooms_PL5C5M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PL5C5M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_PL5C5M%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_PL5C5M%10), 8, 16 + (SEED_PL5C5M%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_PL5C5M%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 7F4FDC)", "completion": "-- ServerScriptService/Horror/InventoryFuses_7F4FDC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7F4FDC = 228364\nlocal UNIQUE_NAME = 'InventoryFuses_7F4FDC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7F4FDC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_7F4FDC_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 6SF51U)", "completion": "-- ServerScriptService/Horror/MonsterAI_6SF51U.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6SF51U = 482690\nlocal UNIQUE_NAME = 'MonsterAI_6SF51U'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6SF51U%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_6SF51U%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 52MFMH)", "completion": "-- ServerScriptService/Horror/NoiseStalker_52MFMH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_52MFMH = 357248\nlocal UNIQUE_NAME = 'NoiseStalker_52MFMH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_52MFMH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_52MFMH%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche S8A7JS)", "completion": "-- ServerScriptService/Horror/Psyche_S8A7JS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S8A7JS = 768953\nlocal UNIQUE_NAME = 'Psyche_S8A7JS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S8A7JS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_S8A7JS%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses LACBBN)", "completion": "-- ServerScriptService/Horror/InventoryFuses_LACBBN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LACBBN = 811483\nlocal UNIQUE_NAME = 'InventoryFuses_LACBBN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LACBBN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_LACBBN_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual AQTDVM)", "completion": "-- ServerScriptService/Horror/Ritual_AQTDVM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AQTDVM = 188024\nlocal UNIQUE_NAME = 'Ritual_AQTDVM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AQTDVM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares WNGUL9)", "completion": "-- ServerScriptService/Horror/NetScares_WNGUL9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WNGUL9 = 36423\nlocal UNIQUE_NAME = 'NetScares_WNGUL9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WNGUL9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_WNGUL9'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche WTKM5Z)", "completion": "-- ServerScriptService/Horror/Psyche_WTKM5Z.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WTKM5Z = 443996\nlocal UNIQUE_NAME = 'Psyche_WTKM5Z'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WTKM5Z%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_WTKM5Z%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem X3BCXS)", "completion": "-- ServerScriptService/Horror/HideSystem_X3BCXS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_X3BCXS = 668938\nlocal UNIQUE_NAME = 'HideSystem_X3BCXS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_X3BCXS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_X3BCXS_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 0L05QQ)", "completion": "-- ServerScriptService/Horror/FearLighting_0L05QQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0L05QQ = 321896\nlocal UNIQUE_NAME = 'FearLighting_0L05QQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0L05QQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_0L05QQ%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 4T9R3M)", "completion": "-- ServerScriptService/Horror/InventoryFuses_4T9R3M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4T9R3M = 11615\nlocal UNIQUE_NAME = 'InventoryFuses_4T9R3M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4T9R3M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_4T9R3M_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI QEDRSP)", "completion": "-- ServerScriptService/Horror/MonsterAI_QEDRSP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QEDRSP = 883981\nlocal UNIQUE_NAME = 'MonsterAI_QEDRSP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QEDRSP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_QEDRSP%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche WQ1A2K)", "completion": "-- ServerScriptService/Horror/Psyche_WQ1A2K.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WQ1A2K = 565895\nlocal UNIQUE_NAME = 'Psyche_WQ1A2K'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WQ1A2K%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_WQ1A2K%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche TQRWE3)", "completion": "-- ServerScriptService/Horror/Psyche_TQRWE3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TQRWE3 = 295502\nlocal UNIQUE_NAME = 'Psyche_TQRWE3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TQRWE3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_TQRWE3%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares T9ZOZL)", "completion": "-- ServerScriptService/Horror/NetScares_T9ZOZL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T9ZOZL = 919049\nlocal UNIQUE_NAME = 'NetScares_T9ZOZL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T9ZOZL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_T9ZOZL'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 4N0UAO)", "completion": "-- ServerScriptService/Horror/NoiseStalker_4N0UAO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4N0UAO = 61490\nlocal UNIQUE_NAME = 'NoiseStalker_4N0UAO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4N0UAO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_4N0UAO%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting FUWDPY)", "completion": "-- ServerScriptService/Horror/FearLighting_FUWDPY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FUWDPY = 36522\nlocal UNIQUE_NAME = 'FearLighting_FUWDPY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FUWDPY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_FUWDPY%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual TIYG3H)", "completion": "-- ServerScriptService/Horror/Ritual_TIYG3H.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TIYG3H = 405554\nlocal UNIQUE_NAME = 'Ritual_TIYG3H'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TIYG3H%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual FF59P9)", "completion": "-- ServerScriptService/Horror/Ritual_FF59P9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FF59P9 = 257961\nlocal UNIQUE_NAME = 'Ritual_FF59P9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FF59P9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 38APBZ)", "completion": "-- ServerScriptService/Horror/HideSystem_38APBZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_38APBZ = 900593\nlocal UNIQUE_NAME = 'HideSystem_38APBZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_38APBZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_38APBZ_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche GWO36F)", "completion": "-- ServerScriptService/Horror/Psyche_GWO36F.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GWO36F = 498758\nlocal UNIQUE_NAME = 'Psyche_GWO36F'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GWO36F%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_GWO36F%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting YMTY5V)", "completion": "-- ServerScriptService/Horror/FearLighting_YMTY5V.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YMTY5V = 26418\nlocal UNIQUE_NAME = 'FearLighting_YMTY5V'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YMTY5V%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_YMTY5V%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 3XTI1I)", "completion": "-- ServerScriptService/Horror/HideSystem_3XTI1I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3XTI1I = 881695\nlocal UNIQUE_NAME = 'HideSystem_3XTI1I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3XTI1I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_3XTI1I_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 95EJ08)", "completion": "-- ServerScriptService/Horror/Psyche_95EJ08.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_95EJ08 = 98878\nlocal UNIQUE_NAME = 'Psyche_95EJ08'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_95EJ08%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_95EJ08%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares P5YEUS)", "completion": "-- ServerScriptService/Horror/NetScares_P5YEUS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_P5YEUS = 964758\nlocal UNIQUE_NAME = 'NetScares_P5YEUS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_P5YEUS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_P5YEUS'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases HRS8JZ)", "completion": "-- ServerScriptService/Horror/BossPhases_HRS8JZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HRS8JZ = 848296\nlocal UNIQUE_NAME = 'BossPhases_HRS8JZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HRS8JZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_HRS8JZ+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem BN6X4R)", "completion": "-- ServerScriptService/Horror/HideSystem_BN6X4R.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BN6X4R = 491242\nlocal UNIQUE_NAME = 'HideSystem_BN6X4R'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BN6X4R%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_BN6X4R_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche AHFVB5)", "completion": "-- ServerScriptService/Horror/Psyche_AHFVB5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AHFVB5 = 158019\nlocal UNIQUE_NAME = 'Psyche_AHFVB5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AHFVB5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_AHFVB5%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche J76IZZ)", "completion": "-- ServerScriptService/Horror/Psyche_J76IZZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_J76IZZ = 978309\nlocal UNIQUE_NAME = 'Psyche_J76IZZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_J76IZZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_J76IZZ%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms TOWXMB)", "completion": "-- ServerScriptService/Horror/ProcRooms_TOWXMB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TOWXMB = 550206\nlocal UNIQUE_NAME = 'ProcRooms_TOWXMB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TOWXMB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_TOWXMB%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_TOWXMB%10), 8, 16 + (SEED_TOWXMB%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_TOWXMB%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 1ZH1YN)", "completion": "-- ServerScriptService/Horror/HideSystem_1ZH1YN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1ZH1YN = 946151\nlocal UNIQUE_NAME = 'HideSystem_1ZH1YN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1ZH1YN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_1ZH1YN_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker GB4F67)", "completion": "-- ServerScriptService/Horror/NoiseStalker_GB4F67.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GB4F67 = 169104\nlocal UNIQUE_NAME = 'NoiseStalker_GB4F67'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GB4F67%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_GB4F67%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses IJA6WI)", "completion": "-- ServerScriptService/Horror/InventoryFuses_IJA6WI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IJA6WI = 953374\nlocal UNIQUE_NAME = 'InventoryFuses_IJA6WI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IJA6WI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_IJA6WI_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 7JVR5Q)", "completion": "-- ServerScriptService/Horror/MonsterAI_7JVR5Q.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7JVR5Q = 542618\nlocal UNIQUE_NAME = 'MonsterAI_7JVR5Q'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7JVR5Q%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_7JVR5Q%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms EJQMXR)", "completion": "-- ServerScriptService/Horror/ProcRooms_EJQMXR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EJQMXR = 862231\nlocal UNIQUE_NAME = 'ProcRooms_EJQMXR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EJQMXR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_EJQMXR%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_EJQMXR%10), 8, 16 + (SEED_EJQMXR%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_EJQMXR%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem ZMY830)", "completion": "-- ServerScriptService/Horror/HideSystem_ZMY830.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZMY830 = 509101\nlocal UNIQUE_NAME = 'HideSystem_ZMY830'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZMY830%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_ZMY830_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms WHNGDC)", "completion": "-- ServerScriptService/Horror/ProcRooms_WHNGDC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WHNGDC = 133299\nlocal UNIQUE_NAME = 'ProcRooms_WHNGDC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WHNGDC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_WHNGDC%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_WHNGDC%10), 8, 16 + (SEED_WHNGDC%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_WHNGDC%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms M9B5SX)", "completion": "-- ServerScriptService/Horror/ProcRooms_M9B5SX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_M9B5SX = 59432\nlocal UNIQUE_NAME = 'ProcRooms_M9B5SX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_M9B5SX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_M9B5SX%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_M9B5SX%10), 8, 16 + (SEED_M9B5SX%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_M9B5SX%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem KI6ZC2)", "completion": "-- ServerScriptService/Horror/HideSystem_KI6ZC2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KI6ZC2 = 483655\nlocal UNIQUE_NAME = 'HideSystem_KI6ZC2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KI6ZC2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_KI6ZC2_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 0V0S5Q)", "completion": "-- ServerScriptService/Horror/Psyche_0V0S5Q.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0V0S5Q = 393127\nlocal UNIQUE_NAME = 'Psyche_0V0S5Q'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0V0S5Q%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_0V0S5Q%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker I0CWFS)", "completion": "-- ServerScriptService/Horror/NoiseStalker_I0CWFS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_I0CWFS = 76223\nlocal UNIQUE_NAME = 'NoiseStalker_I0CWFS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_I0CWFS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_I0CWFS%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 49SQGD)", "completion": "-- ServerScriptService/Horror/BossPhases_49SQGD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_49SQGD = 768412\nlocal UNIQUE_NAME = 'BossPhases_49SQGD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_49SQGD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_49SQGD+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI VNE5OA)", "completion": "-- ServerScriptService/Horror/MonsterAI_VNE5OA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VNE5OA = 520164\nlocal UNIQUE_NAME = 'MonsterAI_VNE5OA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VNE5OA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_VNE5OA%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual MAS3T0)", "completion": "-- ServerScriptService/Horror/Ritual_MAS3T0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MAS3T0 = 447249\nlocal UNIQUE_NAME = 'Ritual_MAS3T0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MAS3T0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 082MC0)", "completion": "-- ServerScriptService/Horror/ProcRooms_082MC0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_082MC0 = 419625\nlocal UNIQUE_NAME = 'ProcRooms_082MC0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_082MC0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_082MC0%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_082MC0%10), 8, 16 + (SEED_082MC0%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_082MC0%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 1MZI9F)", "completion": "-- ServerScriptService/Horror/HideSystem_1MZI9F.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1MZI9F = 609145\nlocal UNIQUE_NAME = 'HideSystem_1MZI9F'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1MZI9F%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_1MZI9F_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem PWJZ9W)", "completion": "-- ServerScriptService/Horror/HideSystem_PWJZ9W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PWJZ9W = 984479\nlocal UNIQUE_NAME = 'HideSystem_PWJZ9W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PWJZ9W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_PWJZ9W_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 4ZUUMW)", "completion": "-- ServerScriptService/Horror/FearLighting_4ZUUMW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4ZUUMW = 675370\nlocal UNIQUE_NAME = 'FearLighting_4ZUUMW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4ZUUMW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_4ZUUMW%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem VQ0NDY)", "completion": "-- ServerScriptService/Horror/HideSystem_VQ0NDY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VQ0NDY = 764922\nlocal UNIQUE_NAME = 'HideSystem_VQ0NDY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VQ0NDY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_VQ0NDY_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI T7K3TD)", "completion": "-- ServerScriptService/Horror/MonsterAI_T7K3TD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T7K3TD = 489477\nlocal UNIQUE_NAME = 'MonsterAI_T7K3TD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T7K3TD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_T7K3TD%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares H3P6LS)", "completion": "-- ServerScriptService/Horror/NetScares_H3P6LS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_H3P6LS = 732126\nlocal UNIQUE_NAME = 'NetScares_H3P6LS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_H3P6LS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_H3P6LS'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker VRBEHB)", "completion": "-- ServerScriptService/Horror/NoiseStalker_VRBEHB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VRBEHB = 509355\nlocal UNIQUE_NAME = 'NoiseStalker_VRBEHB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VRBEHB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_VRBEHB%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual ZL2I7B)", "completion": "-- ServerScriptService/Horror/Ritual_ZL2I7B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZL2I7B = 810320\nlocal UNIQUE_NAME = 'Ritual_ZL2I7B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZL2I7B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker L5XTZN)", "completion": "-- ServerScriptService/Horror/NoiseStalker_L5XTZN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_L5XTZN = 357491\nlocal UNIQUE_NAME = 'NoiseStalker_L5XTZN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_L5XTZN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_L5XTZN%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 3W5GFR)", "completion": "-- ServerScriptService/Horror/NoiseStalker_3W5GFR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3W5GFR = 875651\nlocal UNIQUE_NAME = 'NoiseStalker_3W5GFR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3W5GFR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_3W5GFR%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses QN5DY5)", "completion": "-- ServerScriptService/Horror/InventoryFuses_QN5DY5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QN5DY5 = 550627\nlocal UNIQUE_NAME = 'InventoryFuses_QN5DY5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QN5DY5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_QN5DY5_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 4AUBCA)", "completion": "-- ServerScriptService/Horror/HideSystem_4AUBCA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4AUBCA = 244544\nlocal UNIQUE_NAME = 'HideSystem_4AUBCA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4AUBCA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_4AUBCA_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker YCFJ5Z)", "completion": "-- ServerScriptService/Horror/NoiseStalker_YCFJ5Z.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YCFJ5Z = 407083\nlocal UNIQUE_NAME = 'NoiseStalker_YCFJ5Z'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YCFJ5Z%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_YCFJ5Z%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses NZGXVS)", "completion": "-- ServerScriptService/Horror/InventoryFuses_NZGXVS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NZGXVS = 358688\nlocal UNIQUE_NAME = 'InventoryFuses_NZGXVS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NZGXVS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_NZGXVS_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual T9INGO)", "completion": "-- ServerScriptService/Horror/Ritual_T9INGO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T9INGO = 667380\nlocal UNIQUE_NAME = 'Ritual_T9INGO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T9INGO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting GUBGKA)", "completion": "-- ServerScriptService/Horror/FearLighting_GUBGKA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GUBGKA = 584708\nlocal UNIQUE_NAME = 'FearLighting_GUBGKA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GUBGKA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_GUBGKA%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 4GXC8K)", "completion": "-- ServerScriptService/Horror/Psyche_4GXC8K.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4GXC8K = 386438\nlocal UNIQUE_NAME = 'Psyche_4GXC8K'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4GXC8K%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_4GXC8K%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker JF2Q6B)", "completion": "-- ServerScriptService/Horror/NoiseStalker_JF2Q6B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JF2Q6B = 617041\nlocal UNIQUE_NAME = 'NoiseStalker_JF2Q6B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JF2Q6B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_JF2Q6B%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms FAZMJN)", "completion": "-- ServerScriptService/Horror/ProcRooms_FAZMJN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FAZMJN = 506453\nlocal UNIQUE_NAME = 'ProcRooms_FAZMJN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FAZMJN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_FAZMJN%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_FAZMJN%10), 8, 16 + (SEED_FAZMJN%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_FAZMJN%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 7UZHAT)", "completion": "-- ServerScriptService/Horror/InventoryFuses_7UZHAT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7UZHAT = 606960\nlocal UNIQUE_NAME = 'InventoryFuses_7UZHAT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7UZHAT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_7UZHAT_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual GPXJGS)", "completion": "-- ServerScriptService/Horror/Ritual_GPXJGS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GPXJGS = 7530\nlocal UNIQUE_NAME = 'Ritual_GPXJGS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GPXJGS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem NJNRWA)", "completion": "-- ServerScriptService/Horror/HideSystem_NJNRWA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NJNRWA = 935316\nlocal UNIQUE_NAME = 'HideSystem_NJNRWA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NJNRWA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_NJNRWA_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI OSKRH9)", "completion": "-- ServerScriptService/Horror/MonsterAI_OSKRH9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OSKRH9 = 633399\nlocal UNIQUE_NAME = 'MonsterAI_OSKRH9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OSKRH9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_OSKRH9%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI ZXXHZ4)", "completion": "-- ServerScriptService/Horror/MonsterAI_ZXXHZ4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZXXHZ4 = 873924\nlocal UNIQUE_NAME = 'MonsterAI_ZXXHZ4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZXXHZ4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_ZXXHZ4%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases RUGT4J)", "completion": "-- ServerScriptService/Horror/BossPhases_RUGT4J.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RUGT4J = 632882\nlocal UNIQUE_NAME = 'BossPhases_RUGT4J'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RUGT4J%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_RUGT4J+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms QXQ0P2)", "completion": "-- ServerScriptService/Horror/ProcRooms_QXQ0P2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QXQ0P2 = 280347\nlocal UNIQUE_NAME = 'ProcRooms_QXQ0P2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QXQ0P2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_QXQ0P2%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_QXQ0P2%10), 8, 16 + (SEED_QXQ0P2%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_QXQ0P2%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 74TQSL)", "completion": "-- ServerScriptService/Horror/HideSystem_74TQSL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_74TQSL = 92301\nlocal UNIQUE_NAME = 'HideSystem_74TQSL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_74TQSL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_74TQSL_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI WFJ1AG)", "completion": "-- ServerScriptService/Horror/MonsterAI_WFJ1AG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WFJ1AG = 371636\nlocal UNIQUE_NAME = 'MonsterAI_WFJ1AG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WFJ1AG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_WFJ1AG%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses PXGJQU)", "completion": "-- ServerScriptService/Horror/InventoryFuses_PXGJQU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PXGJQU = 526122\nlocal UNIQUE_NAME = 'InventoryFuses_PXGJQU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PXGJQU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_PXGJQU_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses UYJ5CD)", "completion": "-- ServerScriptService/Horror/InventoryFuses_UYJ5CD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UYJ5CD = 513918\nlocal UNIQUE_NAME = 'InventoryFuses_UYJ5CD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UYJ5CD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_UYJ5CD_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases L94SVK)", "completion": "-- ServerScriptService/Horror/BossPhases_L94SVK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_L94SVK = 408883\nlocal UNIQUE_NAME = 'BossPhases_L94SVK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_L94SVK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_L94SVK+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche NCAIVW)", "completion": "-- ServerScriptService/Horror/Psyche_NCAIVW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NCAIVW = 199239\nlocal UNIQUE_NAME = 'Psyche_NCAIVW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NCAIVW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_NCAIVW%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 8VP0GA)", "completion": "-- ServerScriptService/Horror/FearLighting_8VP0GA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8VP0GA = 689567\nlocal UNIQUE_NAME = 'FearLighting_8VP0GA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8VP0GA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_8VP0GA%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI BQ60ZQ)", "completion": "-- ServerScriptService/Horror/MonsterAI_BQ60ZQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BQ60ZQ = 18667\nlocal UNIQUE_NAME = 'MonsterAI_BQ60ZQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BQ60ZQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_BQ60ZQ%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms N0K9GF)", "completion": "-- ServerScriptService/Horror/ProcRooms_N0K9GF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_N0K9GF = 36791\nlocal UNIQUE_NAME = 'ProcRooms_N0K9GF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_N0K9GF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_N0K9GF%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_N0K9GF%10), 8, 16 + (SEED_N0K9GF%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_N0K9GF%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses YT65SJ)", "completion": "-- ServerScriptService/Horror/InventoryFuses_YT65SJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YT65SJ = 978531\nlocal UNIQUE_NAME = 'InventoryFuses_YT65SJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YT65SJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_YT65SJ_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche P7WZHT)", "completion": "-- ServerScriptService/Horror/Psyche_P7WZHT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_P7WZHT = 32973\nlocal UNIQUE_NAME = 'Psyche_P7WZHT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_P7WZHT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_P7WZHT%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 0NYK8P)", "completion": "-- ServerScriptService/Horror/HideSystem_0NYK8P.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0NYK8P = 996071\nlocal UNIQUE_NAME = 'HideSystem_0NYK8P'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0NYK8P%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_0NYK8P_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 8TV4DH)", "completion": "-- ServerScriptService/Horror/NoiseStalker_8TV4DH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8TV4DH = 170249\nlocal UNIQUE_NAME = 'NoiseStalker_8TV4DH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8TV4DH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_8TV4DH%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche IPG0Y8)", "completion": "-- ServerScriptService/Horror/Psyche_IPG0Y8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IPG0Y8 = 566750\nlocal UNIQUE_NAME = 'Psyche_IPG0Y8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IPG0Y8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_IPG0Y8%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 5I18AT)", "completion": "-- ServerScriptService/Horror/NoiseStalker_5I18AT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5I18AT = 975123\nlocal UNIQUE_NAME = 'NoiseStalker_5I18AT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5I18AT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_5I18AT%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI OGCEBD)", "completion": "-- ServerScriptService/Horror/MonsterAI_OGCEBD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OGCEBD = 699022\nlocal UNIQUE_NAME = 'MonsterAI_OGCEBD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OGCEBD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_OGCEBD%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 5NJWOR)", "completion": "-- ServerScriptService/Horror/BossPhases_5NJWOR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5NJWOR = 978421\nlocal UNIQUE_NAME = 'BossPhases_5NJWOR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5NJWOR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_5NJWOR+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 0PCTWT)", "completion": "-- ServerScriptService/Horror/FearLighting_0PCTWT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0PCTWT = 772159\nlocal UNIQUE_NAME = 'FearLighting_0PCTWT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0PCTWT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_0PCTWT%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem UT0INF)", "completion": "-- ServerScriptService/Horror/HideSystem_UT0INF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UT0INF = 993060\nlocal UNIQUE_NAME = 'HideSystem_UT0INF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UT0INF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_UT0INF_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker WODLTD)", "completion": "-- ServerScriptService/Horror/NoiseStalker_WODLTD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WODLTD = 323773\nlocal UNIQUE_NAME = 'NoiseStalker_WODLTD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WODLTD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_WODLTD%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 4OEC1C)", "completion": "-- ServerScriptService/Horror/ProcRooms_4OEC1C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4OEC1C = 705867\nlocal UNIQUE_NAME = 'ProcRooms_4OEC1C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4OEC1C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_4OEC1C%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_4OEC1C%10), 8, 16 + (SEED_4OEC1C%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_4OEC1C%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 37D2MC)", "completion": "-- ServerScriptService/Horror/Psyche_37D2MC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_37D2MC = 710058\nlocal UNIQUE_NAME = 'Psyche_37D2MC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_37D2MC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_37D2MC%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 2ELS4Z)", "completion": "-- ServerScriptService/Horror/MonsterAI_2ELS4Z.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2ELS4Z = 61981\nlocal UNIQUE_NAME = 'MonsterAI_2ELS4Z'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2ELS4Z%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_2ELS4Z%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares K6VVIK)", "completion": "-- ServerScriptService/Horror/NetScares_K6VVIK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_K6VVIK = 143102\nlocal UNIQUE_NAME = 'NetScares_K6VVIK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_K6VVIK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_K6VVIK'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares S80GD7)", "completion": "-- ServerScriptService/Horror/NetScares_S80GD7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S80GD7 = 181522\nlocal UNIQUE_NAME = 'NetScares_S80GD7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S80GD7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_S80GD7'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares SWIC2U)", "completion": "-- ServerScriptService/Horror/NetScares_SWIC2U.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SWIC2U = 127326\nlocal UNIQUE_NAME = 'NetScares_SWIC2U'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SWIC2U%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_SWIC2U'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker OQV0L3)", "completion": "-- ServerScriptService/Horror/NoiseStalker_OQV0L3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OQV0L3 = 949960\nlocal UNIQUE_NAME = 'NoiseStalker_OQV0L3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OQV0L3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_OQV0L3%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares EA4KE2)", "completion": "-- ServerScriptService/Horror/NetScares_EA4KE2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EA4KE2 = 275450\nlocal UNIQUE_NAME = 'NetScares_EA4KE2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EA4KE2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_EA4KE2'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI CUVSCX)", "completion": "-- ServerScriptService/Horror/MonsterAI_CUVSCX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CUVSCX = 982223\nlocal UNIQUE_NAME = 'MonsterAI_CUVSCX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CUVSCX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_CUVSCX%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche FZQW82)", "completion": "-- ServerScriptService/Horror/Psyche_FZQW82.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FZQW82 = 248467\nlocal UNIQUE_NAME = 'Psyche_FZQW82'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FZQW82%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_FZQW82%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting QOLT9A)", "completion": "-- ServerScriptService/Horror/FearLighting_QOLT9A.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QOLT9A = 717502\nlocal UNIQUE_NAME = 'FearLighting_QOLT9A'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QOLT9A%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_QOLT9A%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares GAFZIN)", "completion": "-- ServerScriptService/Horror/NetScares_GAFZIN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GAFZIN = 776398\nlocal UNIQUE_NAME = 'NetScares_GAFZIN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GAFZIN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_GAFZIN'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche D5T5K8)", "completion": "-- ServerScriptService/Horror/Psyche_D5T5K8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_D5T5K8 = 472842\nlocal UNIQUE_NAME = 'Psyche_D5T5K8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_D5T5K8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_D5T5K8%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem NET19E)", "completion": "-- ServerScriptService/Horror/HideSystem_NET19E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NET19E = 628184\nlocal UNIQUE_NAME = 'HideSystem_NET19E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NET19E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_NET19E_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche PRB7XW)", "completion": "-- ServerScriptService/Horror/Psyche_PRB7XW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PRB7XW = 769548\nlocal UNIQUE_NAME = 'Psyche_PRB7XW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PRB7XW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_PRB7XW%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses FKU9Q9)", "completion": "-- ServerScriptService/Horror/InventoryFuses_FKU9Q9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FKU9Q9 = 774859\nlocal UNIQUE_NAME = 'InventoryFuses_FKU9Q9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FKU9Q9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_FKU9Q9_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting WJUQKD)", "completion": "-- ServerScriptService/Horror/FearLighting_WJUQKD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WJUQKD = 166486\nlocal UNIQUE_NAME = 'FearLighting_WJUQKD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WJUQKD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_WJUQKD%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 79OVNJ)", "completion": "-- ServerScriptService/Horror/HideSystem_79OVNJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_79OVNJ = 25786\nlocal UNIQUE_NAME = 'HideSystem_79OVNJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_79OVNJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_79OVNJ_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual HCBLHT)", "completion": "-- ServerScriptService/Horror/Ritual_HCBLHT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HCBLHT = 664769\nlocal UNIQUE_NAME = 'Ritual_HCBLHT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HCBLHT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 4PVBAR)", "completion": "-- ServerScriptService/Horror/HideSystem_4PVBAR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4PVBAR = 27589\nlocal UNIQUE_NAME = 'HideSystem_4PVBAR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4PVBAR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_4PVBAR_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem RM9Z38)", "completion": "-- ServerScriptService/Horror/HideSystem_RM9Z38.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RM9Z38 = 216544\nlocal UNIQUE_NAME = 'HideSystem_RM9Z38'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RM9Z38%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_RM9Z38_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses VVO0Z7)", "completion": "-- ServerScriptService/Horror/InventoryFuses_VVO0Z7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VVO0Z7 = 866500\nlocal UNIQUE_NAME = 'InventoryFuses_VVO0Z7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VVO0Z7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_VVO0Z7_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI OOR09D)", "completion": "-- ServerScriptService/Horror/MonsterAI_OOR09D.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OOR09D = 127090\nlocal UNIQUE_NAME = 'MonsterAI_OOR09D'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OOR09D%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_OOR09D%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases JD4IV5)", "completion": "-- ServerScriptService/Horror/BossPhases_JD4IV5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JD4IV5 = 719310\nlocal UNIQUE_NAME = 'BossPhases_JD4IV5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JD4IV5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_JD4IV5+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 7GC9UQ)", "completion": "-- ServerScriptService/Horror/MonsterAI_7GC9UQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7GC9UQ = 463916\nlocal UNIQUE_NAME = 'MonsterAI_7GC9UQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7GC9UQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_7GC9UQ%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases GKPY78)", "completion": "-- ServerScriptService/Horror/BossPhases_GKPY78.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GKPY78 = 377021\nlocal UNIQUE_NAME = 'BossPhases_GKPY78'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GKPY78%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_GKPY78+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting EWWA80)", "completion": "-- ServerScriptService/Horror/FearLighting_EWWA80.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EWWA80 = 571442\nlocal UNIQUE_NAME = 'FearLighting_EWWA80'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EWWA80%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_EWWA80%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting VCJWRC)", "completion": "-- ServerScriptService/Horror/FearLighting_VCJWRC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VCJWRC = 155703\nlocal UNIQUE_NAME = 'FearLighting_VCJWRC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VCJWRC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_VCJWRC%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker XXFEZG)", "completion": "-- ServerScriptService/Horror/NoiseStalker_XXFEZG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XXFEZG = 221160\nlocal UNIQUE_NAME = 'NoiseStalker_XXFEZG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XXFEZG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_XXFEZG%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem HLP1SK)", "completion": "-- ServerScriptService/Horror/HideSystem_HLP1SK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HLP1SK = 280032\nlocal UNIQUE_NAME = 'HideSystem_HLP1SK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HLP1SK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_HLP1SK_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 0WRP4P)", "completion": "-- ServerScriptService/Horror/ProcRooms_0WRP4P.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0WRP4P = 194387\nlocal UNIQUE_NAME = 'ProcRooms_0WRP4P'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0WRP4P%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_0WRP4P%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_0WRP4P%10), 8, 16 + (SEED_0WRP4P%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_0WRP4P%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses ZUIAH4)", "completion": "-- ServerScriptService/Horror/InventoryFuses_ZUIAH4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZUIAH4 = 905324\nlocal UNIQUE_NAME = 'InventoryFuses_ZUIAH4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZUIAH4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_ZUIAH4_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 1RLVIV)", "completion": "-- ServerScriptService/Horror/FearLighting_1RLVIV.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1RLVIV = 243392\nlocal UNIQUE_NAME = 'FearLighting_1RLVIV'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1RLVIV%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_1RLVIV%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual D10PI3)", "completion": "-- ServerScriptService/Horror/Ritual_D10PI3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_D10PI3 = 665083\nlocal UNIQUE_NAME = 'Ritual_D10PI3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_D10PI3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 9W2MJI)", "completion": "-- ServerScriptService/Horror/MonsterAI_9W2MJI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9W2MJI = 514769\nlocal UNIQUE_NAME = 'MonsterAI_9W2MJI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9W2MJI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_9W2MJI%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual KR3I3T)", "completion": "-- ServerScriptService/Horror/Ritual_KR3I3T.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KR3I3T = 251729\nlocal UNIQUE_NAME = 'Ritual_KR3I3T'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KR3I3T%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses SH8SO3)", "completion": "-- ServerScriptService/Horror/InventoryFuses_SH8SO3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SH8SO3 = 335232\nlocal UNIQUE_NAME = 'InventoryFuses_SH8SO3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SH8SO3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_SH8SO3_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms JW3EIN)", "completion": "-- ServerScriptService/Horror/ProcRooms_JW3EIN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JW3EIN = 377411\nlocal UNIQUE_NAME = 'ProcRooms_JW3EIN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JW3EIN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_JW3EIN%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_JW3EIN%10), 8, 16 + (SEED_JW3EIN%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_JW3EIN%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual BZQBU9)", "completion": "-- ServerScriptService/Horror/Ritual_BZQBU9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BZQBU9 = 108450\nlocal UNIQUE_NAME = 'Ritual_BZQBU9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BZQBU9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 1KPXXU)", "completion": "-- ServerScriptService/Horror/NoiseStalker_1KPXXU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1KPXXU = 659807\nlocal UNIQUE_NAME = 'NoiseStalker_1KPXXU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1KPXXU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_1KPXXU%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI A2XTV1)", "completion": "-- ServerScriptService/Horror/MonsterAI_A2XTV1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_A2XTV1 = 266046\nlocal UNIQUE_NAME = 'MonsterAI_A2XTV1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_A2XTV1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_A2XTV1%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares YXRNPL)", "completion": "-- ServerScriptService/Horror/NetScares_YXRNPL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YXRNPL = 593365\nlocal UNIQUE_NAME = 'NetScares_YXRNPL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YXRNPL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_YXRNPL'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual RU3YBZ)", "completion": "-- ServerScriptService/Horror/Ritual_RU3YBZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RU3YBZ = 510800\nlocal UNIQUE_NAME = 'Ritual_RU3YBZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RU3YBZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem WT6OJR)", "completion": "-- ServerScriptService/Horror/HideSystem_WT6OJR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WT6OJR = 978324\nlocal UNIQUE_NAME = 'HideSystem_WT6OJR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WT6OJR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_WT6OJR_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 8UJIQK)", "completion": "-- ServerScriptService/Horror/NoiseStalker_8UJIQK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8UJIQK = 266449\nlocal UNIQUE_NAME = 'NoiseStalker_8UJIQK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8UJIQK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_8UJIQK%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 3KN0XG)", "completion": "-- ServerScriptService/Horror/MonsterAI_3KN0XG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3KN0XG = 40541\nlocal UNIQUE_NAME = 'MonsterAI_3KN0XG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3KN0XG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_3KN0XG%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases F97T2Q)", "completion": "-- ServerScriptService/Horror/BossPhases_F97T2Q.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_F97T2Q = 683383\nlocal UNIQUE_NAME = 'BossPhases_F97T2Q'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_F97T2Q%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_F97T2Q+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares VG34VS)", "completion": "-- ServerScriptService/Horror/NetScares_VG34VS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VG34VS = 917309\nlocal UNIQUE_NAME = 'NetScares_VG34VS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VG34VS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_VG34VS'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms BKUMX5)", "completion": "-- ServerScriptService/Horror/ProcRooms_BKUMX5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BKUMX5 = 497197\nlocal UNIQUE_NAME = 'ProcRooms_BKUMX5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BKUMX5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_BKUMX5%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_BKUMX5%10), 8, 16 + (SEED_BKUMX5%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_BKUMX5%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares G8Z6L4)", "completion": "-- ServerScriptService/Horror/NetScares_G8Z6L4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G8Z6L4 = 76814\nlocal UNIQUE_NAME = 'NetScares_G8Z6L4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G8Z6L4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_G8Z6L4'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem HBST9E)", "completion": "-- ServerScriptService/Horror/HideSystem_HBST9E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HBST9E = 316214\nlocal UNIQUE_NAME = 'HideSystem_HBST9E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HBST9E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_HBST9E_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 3IHJEI)", "completion": "-- ServerScriptService/Horror/NoiseStalker_3IHJEI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3IHJEI = 918599\nlocal UNIQUE_NAME = 'NoiseStalker_3IHJEI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3IHJEI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_3IHJEI%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses QCT2FC)", "completion": "-- ServerScriptService/Horror/InventoryFuses_QCT2FC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QCT2FC = 977956\nlocal UNIQUE_NAME = 'InventoryFuses_QCT2FC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QCT2FC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_QCT2FC_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses QIZU0K)", "completion": "-- ServerScriptService/Horror/InventoryFuses_QIZU0K.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QIZU0K = 123305\nlocal UNIQUE_NAME = 'InventoryFuses_QIZU0K'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QIZU0K%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_QIZU0K_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem FQEIQA)", "completion": "-- ServerScriptService/Horror/HideSystem_FQEIQA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FQEIQA = 432383\nlocal UNIQUE_NAME = 'HideSystem_FQEIQA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FQEIQA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_FQEIQA_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms SIV4EY)", "completion": "-- ServerScriptService/Horror/ProcRooms_SIV4EY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SIV4EY = 612522\nlocal UNIQUE_NAME = 'ProcRooms_SIV4EY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SIV4EY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_SIV4EY%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_SIV4EY%10), 8, 16 + (SEED_SIV4EY%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_SIV4EY%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases VL90VZ)", "completion": "-- ServerScriptService/Horror/BossPhases_VL90VZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VL90VZ = 572196\nlocal UNIQUE_NAME = 'BossPhases_VL90VZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VL90VZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_VL90VZ+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual WGVGFJ)", "completion": "-- ServerScriptService/Horror/Ritual_WGVGFJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WGVGFJ = 290644\nlocal UNIQUE_NAME = 'Ritual_WGVGFJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WGVGFJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual JXPLUU)", "completion": "-- ServerScriptService/Horror/Ritual_JXPLUU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JXPLUU = 360866\nlocal UNIQUE_NAME = 'Ritual_JXPLUU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JXPLUU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms EFOOVK)", "completion": "-- ServerScriptService/Horror/ProcRooms_EFOOVK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EFOOVK = 974479\nlocal UNIQUE_NAME = 'ProcRooms_EFOOVK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EFOOVK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_EFOOVK%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_EFOOVK%10), 8, 16 + (SEED_EFOOVK%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_EFOOVK%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 7GZLW7)", "completion": "-- ServerScriptService/Horror/NoiseStalker_7GZLW7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7GZLW7 = 540420\nlocal UNIQUE_NAME = 'NoiseStalker_7GZLW7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7GZLW7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_7GZLW7%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 4BAJS7)", "completion": "-- ServerScriptService/Horror/InventoryFuses_4BAJS7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4BAJS7 = 481902\nlocal UNIQUE_NAME = 'InventoryFuses_4BAJS7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4BAJS7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_4BAJS7_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 0FDZ8R)", "completion": "-- ServerScriptService/Horror/FearLighting_0FDZ8R.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0FDZ8R = 923255\nlocal UNIQUE_NAME = 'FearLighting_0FDZ8R'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0FDZ8R%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_0FDZ8R%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 4V8OCH)", "completion": "-- ServerScriptService/Horror/InventoryFuses_4V8OCH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4V8OCH = 732061\nlocal UNIQUE_NAME = 'InventoryFuses_4V8OCH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4V8OCH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_4V8OCH_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual XCELRG)", "completion": "-- ServerScriptService/Horror/Ritual_XCELRG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XCELRG = 656805\nlocal UNIQUE_NAME = 'Ritual_XCELRG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XCELRG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem WAOEX6)", "completion": "-- ServerScriptService/Horror/HideSystem_WAOEX6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WAOEX6 = 272560\nlocal UNIQUE_NAME = 'HideSystem_WAOEX6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WAOEX6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_WAOEX6_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 67QCKO)", "completion": "-- ServerScriptService/Horror/NoiseStalker_67QCKO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_67QCKO = 268422\nlocal UNIQUE_NAME = 'NoiseStalker_67QCKO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_67QCKO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_67QCKO%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting RH7BFZ)", "completion": "-- ServerScriptService/Horror/FearLighting_RH7BFZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RH7BFZ = 990970\nlocal UNIQUE_NAME = 'FearLighting_RH7BFZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RH7BFZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_RH7BFZ%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem AEPGNE)", "completion": "-- ServerScriptService/Horror/HideSystem_AEPGNE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AEPGNE = 737020\nlocal UNIQUE_NAME = 'HideSystem_AEPGNE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AEPGNE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_AEPGNE_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker XE8JK9)", "completion": "-- ServerScriptService/Horror/NoiseStalker_XE8JK9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XE8JK9 = 6706\nlocal UNIQUE_NAME = 'NoiseStalker_XE8JK9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XE8JK9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_XE8JK9%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI HSSAUB)", "completion": "-- ServerScriptService/Horror/MonsterAI_HSSAUB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HSSAUB = 479994\nlocal UNIQUE_NAME = 'MonsterAI_HSSAUB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HSSAUB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_HSSAUB%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses D3ZH01)", "completion": "-- ServerScriptService/Horror/InventoryFuses_D3ZH01.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_D3ZH01 = 969174\nlocal UNIQUE_NAME = 'InventoryFuses_D3ZH01'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_D3ZH01%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_D3ZH01_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual C1Q2EK)", "completion": "-- ServerScriptService/Horror/Ritual_C1Q2EK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C1Q2EK = 47657\nlocal UNIQUE_NAME = 'Ritual_C1Q2EK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C1Q2EK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem Q63ONE)", "completion": "-- ServerScriptService/Horror/HideSystem_Q63ONE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Q63ONE = 823801\nlocal UNIQUE_NAME = 'HideSystem_Q63ONE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Q63ONE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_Q63ONE_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 85N2L5)", "completion": "-- ServerScriptService/Horror/FearLighting_85N2L5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_85N2L5 = 902569\nlocal UNIQUE_NAME = 'FearLighting_85N2L5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_85N2L5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_85N2L5%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI BOLC8Z)", "completion": "-- ServerScriptService/Horror/MonsterAI_BOLC8Z.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BOLC8Z = 782682\nlocal UNIQUE_NAME = 'MonsterAI_BOLC8Z'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BOLC8Z%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_BOLC8Z%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI WVM8PP)", "completion": "-- ServerScriptService/Horror/MonsterAI_WVM8PP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WVM8PP = 699453\nlocal UNIQUE_NAME = 'MonsterAI_WVM8PP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WVM8PP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_WVM8PP%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses FWX9R0)", "completion": "-- ServerScriptService/Horror/InventoryFuses_FWX9R0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FWX9R0 = 889942\nlocal UNIQUE_NAME = 'InventoryFuses_FWX9R0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FWX9R0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_FWX9R0_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting U9W0WZ)", "completion": "-- ServerScriptService/Horror/FearLighting_U9W0WZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_U9W0WZ = 3201\nlocal UNIQUE_NAME = 'FearLighting_U9W0WZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_U9W0WZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_U9W0WZ%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI DMEEUW)", "completion": "-- ServerScriptService/Horror/MonsterAI_DMEEUW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DMEEUW = 584855\nlocal UNIQUE_NAME = 'MonsterAI_DMEEUW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DMEEUW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_DMEEUW%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 2DZOQ9)", "completion": "-- ServerScriptService/Horror/BossPhases_2DZOQ9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2DZOQ9 = 175789\nlocal UNIQUE_NAME = 'BossPhases_2DZOQ9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2DZOQ9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_2DZOQ9+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker QCHSPB)", "completion": "-- ServerScriptService/Horror/NoiseStalker_QCHSPB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QCHSPB = 786637\nlocal UNIQUE_NAME = 'NoiseStalker_QCHSPB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QCHSPB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_QCHSPB%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 0HWND9)", "completion": "-- ServerScriptService/Horror/NoiseStalker_0HWND9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0HWND9 = 360802\nlocal UNIQUE_NAME = 'NoiseStalker_0HWND9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0HWND9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_0HWND9%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases R17MPV)", "completion": "-- ServerScriptService/Horror/BossPhases_R17MPV.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_R17MPV = 266566\nlocal UNIQUE_NAME = 'BossPhases_R17MPV'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_R17MPV%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_R17MPV+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses EQA9KN)", "completion": "-- ServerScriptService/Horror/InventoryFuses_EQA9KN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EQA9KN = 124621\nlocal UNIQUE_NAME = 'InventoryFuses_EQA9KN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EQA9KN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_EQA9KN_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases LD63EI)", "completion": "-- ServerScriptService/Horror/BossPhases_LD63EI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LD63EI = 784461\nlocal UNIQUE_NAME = 'BossPhases_LD63EI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LD63EI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_LD63EI+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms I1JHZI)", "completion": "-- ServerScriptService/Horror/ProcRooms_I1JHZI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_I1JHZI = 561699\nlocal UNIQUE_NAME = 'ProcRooms_I1JHZI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_I1JHZI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_I1JHZI%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_I1JHZI%10), 8, 16 + (SEED_I1JHZI%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_I1JHZI%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche VP152L)", "completion": "-- ServerScriptService/Horror/Psyche_VP152L.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VP152L = 420391\nlocal UNIQUE_NAME = 'Psyche_VP152L'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VP152L%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_VP152L%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms FVWIR0)", "completion": "-- ServerScriptService/Horror/ProcRooms_FVWIR0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FVWIR0 = 214289\nlocal UNIQUE_NAME = 'ProcRooms_FVWIR0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FVWIR0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_FVWIR0%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_FVWIR0%10), 8, 16 + (SEED_FVWIR0%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_FVWIR0%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche SP2Y8F)", "completion": "-- ServerScriptService/Horror/Psyche_SP2Y8F.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SP2Y8F = 716424\nlocal UNIQUE_NAME = 'Psyche_SP2Y8F'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SP2Y8F%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_SP2Y8F%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche RVHNFX)", "completion": "-- ServerScriptService/Horror/Psyche_RVHNFX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RVHNFX = 941880\nlocal UNIQUE_NAME = 'Psyche_RVHNFX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RVHNFX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_RVHNFX%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses VW2JZ3)", "completion": "-- ServerScriptService/Horror/InventoryFuses_VW2JZ3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VW2JZ3 = 885501\nlocal UNIQUE_NAME = 'InventoryFuses_VW2JZ3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VW2JZ3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_VW2JZ3_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker LIZNE3)", "completion": "-- ServerScriptService/Horror/NoiseStalker_LIZNE3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LIZNE3 = 755196\nlocal UNIQUE_NAME = 'NoiseStalker_LIZNE3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LIZNE3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_LIZNE3%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem V55MSM)", "completion": "-- ServerScriptService/Horror/HideSystem_V55MSM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V55MSM = 255223\nlocal UNIQUE_NAME = 'HideSystem_V55MSM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V55MSM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_V55MSM_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting WHIZSI)", "completion": "-- ServerScriptService/Horror/FearLighting_WHIZSI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WHIZSI = 217865\nlocal UNIQUE_NAME = 'FearLighting_WHIZSI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WHIZSI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_WHIZSI%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares JVT8QL)", "completion": "-- ServerScriptService/Horror/NetScares_JVT8QL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JVT8QL = 151385\nlocal UNIQUE_NAME = 'NetScares_JVT8QL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JVT8QL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_JVT8QL'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual S9WH4D)", "completion": "-- ServerScriptService/Horror/Ritual_S9WH4D.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S9WH4D = 308689\nlocal UNIQUE_NAME = 'Ritual_S9WH4D'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S9WH4D%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual RYGFXB)", "completion": "-- ServerScriptService/Horror/Ritual_RYGFXB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RYGFXB = 757812\nlocal UNIQUE_NAME = 'Ritual_RYGFXB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RYGFXB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases ME0Y2X)", "completion": "-- ServerScriptService/Horror/BossPhases_ME0Y2X.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ME0Y2X = 147458\nlocal UNIQUE_NAME = 'BossPhases_ME0Y2X'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ME0Y2X%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_ME0Y2X+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual DPHCB0)", "completion": "-- ServerScriptService/Horror/Ritual_DPHCB0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DPHCB0 = 577489\nlocal UNIQUE_NAME = 'Ritual_DPHCB0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DPHCB0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual BSEIXN)", "completion": "-- ServerScriptService/Horror/Ritual_BSEIXN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BSEIXN = 813949\nlocal UNIQUE_NAME = 'Ritual_BSEIXN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BSEIXN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 2Y4TCZ)", "completion": "-- ServerScriptService/Horror/MonsterAI_2Y4TCZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2Y4TCZ = 867956\nlocal UNIQUE_NAME = 'MonsterAI_2Y4TCZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2Y4TCZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_2Y4TCZ%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases CNNKLZ)", "completion": "-- ServerScriptService/Horror/BossPhases_CNNKLZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CNNKLZ = 786969\nlocal UNIQUE_NAME = 'BossPhases_CNNKLZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CNNKLZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_CNNKLZ+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting A9RGQF)", "completion": "-- ServerScriptService/Horror/FearLighting_A9RGQF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_A9RGQF = 432760\nlocal UNIQUE_NAME = 'FearLighting_A9RGQF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_A9RGQF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_A9RGQF%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 6CCCN2)", "completion": "-- ServerScriptService/Horror/NoiseStalker_6CCCN2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6CCCN2 = 991964\nlocal UNIQUE_NAME = 'NoiseStalker_6CCCN2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6CCCN2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_6CCCN2%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche E6AVAI)", "completion": "-- ServerScriptService/Horror/Psyche_E6AVAI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_E6AVAI = 54043\nlocal UNIQUE_NAME = 'Psyche_E6AVAI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_E6AVAI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_E6AVAI%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms CQS3CF)", "completion": "-- ServerScriptService/Horror/ProcRooms_CQS3CF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CQS3CF = 485441\nlocal UNIQUE_NAME = 'ProcRooms_CQS3CF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CQS3CF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_CQS3CF%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_CQS3CF%10), 8, 16 + (SEED_CQS3CF%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_CQS3CF%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses D5DNXW)", "completion": "-- ServerScriptService/Horror/InventoryFuses_D5DNXW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_D5DNXW = 656958\nlocal UNIQUE_NAME = 'InventoryFuses_D5DNXW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_D5DNXW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_D5DNXW_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses WIS6UT)", "completion": "-- ServerScriptService/Horror/InventoryFuses_WIS6UT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WIS6UT = 525877\nlocal UNIQUE_NAME = 'InventoryFuses_WIS6UT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WIS6UT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_WIS6UT_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 0I4V7D)", "completion": "-- ServerScriptService/Horror/HideSystem_0I4V7D.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0I4V7D = 392964\nlocal UNIQUE_NAME = 'HideSystem_0I4V7D'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0I4V7D%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_0I4V7D_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms JZUPYT)", "completion": "-- ServerScriptService/Horror/ProcRooms_JZUPYT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JZUPYT = 109637\nlocal UNIQUE_NAME = 'ProcRooms_JZUPYT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JZUPYT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_JZUPYT%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_JZUPYT%10), 8, 16 + (SEED_JZUPYT%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_JZUPYT%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses P73AUZ)", "completion": "-- ServerScriptService/Horror/InventoryFuses_P73AUZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_P73AUZ = 365389\nlocal UNIQUE_NAME = 'InventoryFuses_P73AUZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_P73AUZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_P73AUZ_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares EZPADX)", "completion": "-- ServerScriptService/Horror/NetScares_EZPADX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EZPADX = 23072\nlocal UNIQUE_NAME = 'NetScares_EZPADX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EZPADX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_EZPADX'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms W8KNCW)", "completion": "-- ServerScriptService/Horror/ProcRooms_W8KNCW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_W8KNCW = 275161\nlocal UNIQUE_NAME = 'ProcRooms_W8KNCW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_W8KNCW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_W8KNCW%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_W8KNCW%10), 8, 16 + (SEED_W8KNCW%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_W8KNCW%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting O0YPRZ)", "completion": "-- ServerScriptService/Horror/FearLighting_O0YPRZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O0YPRZ = 84065\nlocal UNIQUE_NAME = 'FearLighting_O0YPRZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O0YPRZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_O0YPRZ%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares PO4A29)", "completion": "-- ServerScriptService/Horror/NetScares_PO4A29.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PO4A29 = 547063\nlocal UNIQUE_NAME = 'NetScares_PO4A29'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PO4A29%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_PO4A29'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 0649ES)", "completion": "-- ServerScriptService/Horror/ProcRooms_0649ES.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0649ES = 12254\nlocal UNIQUE_NAME = 'ProcRooms_0649ES'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0649ES%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_0649ES%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_0649ES%10), 8, 16 + (SEED_0649ES%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_0649ES%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares I7JAHX)", "completion": "-- ServerScriptService/Horror/NetScares_I7JAHX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_I7JAHX = 287095\nlocal UNIQUE_NAME = 'NetScares_I7JAHX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_I7JAHX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_I7JAHX'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 3Q5U0F)", "completion": "-- ServerScriptService/Horror/ProcRooms_3Q5U0F.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3Q5U0F = 997654\nlocal UNIQUE_NAME = 'ProcRooms_3Q5U0F'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3Q5U0F%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_3Q5U0F%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_3Q5U0F%10), 8, 16 + (SEED_3Q5U0F%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_3Q5U0F%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche NFS8JE)", "completion": "-- ServerScriptService/Horror/Psyche_NFS8JE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NFS8JE = 669827\nlocal UNIQUE_NAME = 'Psyche_NFS8JE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NFS8JE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_NFS8JE%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 8QI59R)", "completion": "-- ServerScriptService/Horror/InventoryFuses_8QI59R.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8QI59R = 160308\nlocal UNIQUE_NAME = 'InventoryFuses_8QI59R'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8QI59R%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_8QI59R_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms FX3372)", "completion": "-- ServerScriptService/Horror/ProcRooms_FX3372.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FX3372 = 873027\nlocal UNIQUE_NAME = 'ProcRooms_FX3372'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FX3372%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_FX3372%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_FX3372%10), 8, 16 + (SEED_FX3372%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_FX3372%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI TWSUZV)", "completion": "-- ServerScriptService/Horror/MonsterAI_TWSUZV.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TWSUZV = 194440\nlocal UNIQUE_NAME = 'MonsterAI_TWSUZV'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TWSUZV%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_TWSUZV%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting MY9603)", "completion": "-- ServerScriptService/Horror/FearLighting_MY9603.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MY9603 = 597251\nlocal UNIQUE_NAME = 'FearLighting_MY9603'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MY9603%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_MY9603%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 013TF7)", "completion": "-- ServerScriptService/Horror/MonsterAI_013TF7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_013TF7 = 634072\nlocal UNIQUE_NAME = 'MonsterAI_013TF7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_013TF7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_013TF7%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker FMJPXC)", "completion": "-- ServerScriptService/Horror/NoiseStalker_FMJPXC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FMJPXC = 128880\nlocal UNIQUE_NAME = 'NoiseStalker_FMJPXC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FMJPXC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_FMJPXC%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 0TULDS)", "completion": "-- ServerScriptService/Horror/HideSystem_0TULDS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0TULDS = 112896\nlocal UNIQUE_NAME = 'HideSystem_0TULDS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0TULDS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_0TULDS_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual S9RMR6)", "completion": "-- ServerScriptService/Horror/Ritual_S9RMR6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S9RMR6 = 989359\nlocal UNIQUE_NAME = 'Ritual_S9RMR6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S9RMR6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares S782QS)", "completion": "-- ServerScriptService/Horror/NetScares_S782QS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S782QS = 270085\nlocal UNIQUE_NAME = 'NetScares_S782QS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S782QS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_S782QS'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases JM9ZJ3)", "completion": "-- ServerScriptService/Horror/BossPhases_JM9ZJ3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JM9ZJ3 = 312680\nlocal UNIQUE_NAME = 'BossPhases_JM9ZJ3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JM9ZJ3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_JM9ZJ3+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche YMIGIS)", "completion": "-- ServerScriptService/Horror/Psyche_YMIGIS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YMIGIS = 580144\nlocal UNIQUE_NAME = 'Psyche_YMIGIS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YMIGIS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_YMIGIS%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms R3JCIA)", "completion": "-- ServerScriptService/Horror/ProcRooms_R3JCIA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_R3JCIA = 525529\nlocal UNIQUE_NAME = 'ProcRooms_R3JCIA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_R3JCIA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_R3JCIA%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_R3JCIA%10), 8, 16 + (SEED_R3JCIA%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_R3JCIA%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual JEY980)", "completion": "-- ServerScriptService/Horror/Ritual_JEY980.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JEY980 = 463538\nlocal UNIQUE_NAME = 'Ritual_JEY980'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JEY980%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker OXE0YB)", "completion": "-- ServerScriptService/Horror/NoiseStalker_OXE0YB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OXE0YB = 460564\nlocal UNIQUE_NAME = 'NoiseStalker_OXE0YB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OXE0YB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_OXE0YB%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares VE25X0)", "completion": "-- ServerScriptService/Horror/NetScares_VE25X0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VE25X0 = 104736\nlocal UNIQUE_NAME = 'NetScares_VE25X0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VE25X0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_VE25X0'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual LTRTFX)", "completion": "-- ServerScriptService/Horror/Ritual_LTRTFX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LTRTFX = 378448\nlocal UNIQUE_NAME = 'Ritual_LTRTFX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LTRTFX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms SR6M19)", "completion": "-- ServerScriptService/Horror/ProcRooms_SR6M19.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SR6M19 = 979083\nlocal UNIQUE_NAME = 'ProcRooms_SR6M19'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SR6M19%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_SR6M19%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_SR6M19%10), 8, 16 + (SEED_SR6M19%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_SR6M19%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 878ZK6)", "completion": "-- ServerScriptService/Horror/HideSystem_878ZK6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_878ZK6 = 766651\nlocal UNIQUE_NAME = 'HideSystem_878ZK6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_878ZK6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_878ZK6_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual KR3TE1)", "completion": "-- ServerScriptService/Horror/Ritual_KR3TE1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KR3TE1 = 367932\nlocal UNIQUE_NAME = 'Ritual_KR3TE1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KR3TE1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker YYSOBG)", "completion": "-- ServerScriptService/Horror/NoiseStalker_YYSOBG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YYSOBG = 13143\nlocal UNIQUE_NAME = 'NoiseStalker_YYSOBG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YYSOBG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_YYSOBG%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI HX4B2P)", "completion": "-- ServerScriptService/Horror/MonsterAI_HX4B2P.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HX4B2P = 791207\nlocal UNIQUE_NAME = 'MonsterAI_HX4B2P'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HX4B2P%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_HX4B2P%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares B895XA)", "completion": "-- ServerScriptService/Horror/NetScares_B895XA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_B895XA = 3976\nlocal UNIQUE_NAME = 'NetScares_B895XA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_B895XA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_B895XA'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 02FA3W)", "completion": "-- ServerScriptService/Horror/NetScares_02FA3W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_02FA3W = 637735\nlocal UNIQUE_NAME = 'NetScares_02FA3W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_02FA3W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_02FA3W'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual NCBJ21)", "completion": "-- ServerScriptService/Horror/Ritual_NCBJ21.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NCBJ21 = 114992\nlocal UNIQUE_NAME = 'Ritual_NCBJ21'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NCBJ21%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses U80EHK)", "completion": "-- ServerScriptService/Horror/InventoryFuses_U80EHK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_U80EHK = 358644\nlocal UNIQUE_NAME = 'InventoryFuses_U80EHK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_U80EHK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_U80EHK_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 5X3T27)", "completion": "-- ServerScriptService/Horror/NetScares_5X3T27.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5X3T27 = 717342\nlocal UNIQUE_NAME = 'NetScares_5X3T27'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5X3T27%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_5X3T27'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche U3UEC7)", "completion": "-- ServerScriptService/Horror/Psyche_U3UEC7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_U3UEC7 = 455029\nlocal UNIQUE_NAME = 'Psyche_U3UEC7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_U3UEC7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_U3UEC7%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms G46L8E)", "completion": "-- ServerScriptService/Horror/ProcRooms_G46L8E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G46L8E = 334425\nlocal UNIQUE_NAME = 'ProcRooms_G46L8E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G46L8E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_G46L8E%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_G46L8E%10), 8, 16 + (SEED_G46L8E%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_G46L8E%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 9FVS4H)", "completion": "-- ServerScriptService/Horror/MonsterAI_9FVS4H.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9FVS4H = 582119\nlocal UNIQUE_NAME = 'MonsterAI_9FVS4H'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9FVS4H%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_9FVS4H%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 1TKES5)", "completion": "-- ServerScriptService/Horror/NoiseStalker_1TKES5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1TKES5 = 956510\nlocal UNIQUE_NAME = 'NoiseStalker_1TKES5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1TKES5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_1TKES5%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases LDV8XW)", "completion": "-- ServerScriptService/Horror/BossPhases_LDV8XW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LDV8XW = 471678\nlocal UNIQUE_NAME = 'BossPhases_LDV8XW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LDV8XW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_LDV8XW+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares AERLLW)", "completion": "-- ServerScriptService/Horror/NetScares_AERLLW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AERLLW = 960901\nlocal UNIQUE_NAME = 'NetScares_AERLLW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AERLLW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_AERLLW'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 6DRZEU)", "completion": "-- ServerScriptService/Horror/NoiseStalker_6DRZEU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6DRZEU = 567164\nlocal UNIQUE_NAME = 'NoiseStalker_6DRZEU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6DRZEU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_6DRZEU%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms RU6TS4)", "completion": "-- ServerScriptService/Horror/ProcRooms_RU6TS4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RU6TS4 = 617805\nlocal UNIQUE_NAME = 'ProcRooms_RU6TS4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RU6TS4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_RU6TS4%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_RU6TS4%10), 8, 16 + (SEED_RU6TS4%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_RU6TS4%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 7VLZ7X)", "completion": "-- ServerScriptService/Horror/NoiseStalker_7VLZ7X.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7VLZ7X = 993912\nlocal UNIQUE_NAME = 'NoiseStalker_7VLZ7X'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7VLZ7X%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_7VLZ7X%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 6QQ86G)", "completion": "-- ServerScriptService/Horror/NetScares_6QQ86G.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6QQ86G = 567662\nlocal UNIQUE_NAME = 'NetScares_6QQ86G'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6QQ86G%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_6QQ86G'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 54RFLO)", "completion": "-- ServerScriptService/Horror/NoiseStalker_54RFLO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_54RFLO = 462510\nlocal UNIQUE_NAME = 'NoiseStalker_54RFLO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_54RFLO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_54RFLO%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker KEWAF1)", "completion": "-- ServerScriptService/Horror/NoiseStalker_KEWAF1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KEWAF1 = 435134\nlocal UNIQUE_NAME = 'NoiseStalker_KEWAF1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KEWAF1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_KEWAF1%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 40GF2T)", "completion": "-- ServerScriptService/Horror/BossPhases_40GF2T.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_40GF2T = 223646\nlocal UNIQUE_NAME = 'BossPhases_40GF2T'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_40GF2T%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_40GF2T+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI VF62OS)", "completion": "-- ServerScriptService/Horror/MonsterAI_VF62OS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VF62OS = 819165\nlocal UNIQUE_NAME = 'MonsterAI_VF62OS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VF62OS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_VF62OS%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem QWG6Z7)", "completion": "-- ServerScriptService/Horror/HideSystem_QWG6Z7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QWG6Z7 = 127767\nlocal UNIQUE_NAME = 'HideSystem_QWG6Z7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QWG6Z7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_QWG6Z7_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker NV5PHJ)", "completion": "-- ServerScriptService/Horror/NoiseStalker_NV5PHJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NV5PHJ = 777792\nlocal UNIQUE_NAME = 'NoiseStalker_NV5PHJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NV5PHJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_NV5PHJ%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem BUOFE1)", "completion": "-- ServerScriptService/Horror/HideSystem_BUOFE1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BUOFE1 = 409807\nlocal UNIQUE_NAME = 'HideSystem_BUOFE1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BUOFE1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_BUOFE1_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 9GXW30)", "completion": "-- ServerScriptService/Horror/NoiseStalker_9GXW30.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9GXW30 = 812950\nlocal UNIQUE_NAME = 'NoiseStalker_9GXW30'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9GXW30%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_9GXW30%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases IEGCOS)", "completion": "-- ServerScriptService/Horror/BossPhases_IEGCOS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IEGCOS = 320391\nlocal UNIQUE_NAME = 'BossPhases_IEGCOS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IEGCOS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_IEGCOS+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares OF1XTW)", "completion": "-- ServerScriptService/Horror/NetScares_OF1XTW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OF1XTW = 315101\nlocal UNIQUE_NAME = 'NetScares_OF1XTW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OF1XTW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_OF1XTW'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual XD93Z6)", "completion": "-- ServerScriptService/Horror/Ritual_XD93Z6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XD93Z6 = 916705\nlocal UNIQUE_NAME = 'Ritual_XD93Z6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XD93Z6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual J0SBMQ)", "completion": "-- ServerScriptService/Horror/Ritual_J0SBMQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_J0SBMQ = 182130\nlocal UNIQUE_NAME = 'Ritual_J0SBMQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_J0SBMQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual JS139G)", "completion": "-- ServerScriptService/Horror/Ritual_JS139G.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JS139G = 423527\nlocal UNIQUE_NAME = 'Ritual_JS139G'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JS139G%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem T83GEK)", "completion": "-- ServerScriptService/Horror/HideSystem_T83GEK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T83GEK = 943557\nlocal UNIQUE_NAME = 'HideSystem_T83GEK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T83GEK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_T83GEK_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases RLMY8B)", "completion": "-- ServerScriptService/Horror/BossPhases_RLMY8B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RLMY8B = 482373\nlocal UNIQUE_NAME = 'BossPhases_RLMY8B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RLMY8B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_RLMY8B+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem U0I6ER)", "completion": "-- ServerScriptService/Horror/HideSystem_U0I6ER.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_U0I6ER = 729428\nlocal UNIQUE_NAME = 'HideSystem_U0I6ER'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_U0I6ER%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_U0I6ER_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 38Z2FM)", "completion": "-- ServerScriptService/Horror/BossPhases_38Z2FM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_38Z2FM = 496191\nlocal UNIQUE_NAME = 'BossPhases_38Z2FM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_38Z2FM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_38Z2FM+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 44PND2)", "completion": "-- ServerScriptService/Horror/FearLighting_44PND2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_44PND2 = 508861\nlocal UNIQUE_NAME = 'FearLighting_44PND2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_44PND2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_44PND2%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 8XRKM9)", "completion": "-- ServerScriptService/Horror/MonsterAI_8XRKM9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8XRKM9 = 508966\nlocal UNIQUE_NAME = 'MonsterAI_8XRKM9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8XRKM9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_8XRKM9%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 4XO2JT)", "completion": "-- ServerScriptService/Horror/BossPhases_4XO2JT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4XO2JT = 594148\nlocal UNIQUE_NAME = 'BossPhases_4XO2JT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4XO2JT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_4XO2JT+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 5QXMT2)", "completion": "-- ServerScriptService/Horror/NoiseStalker_5QXMT2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5QXMT2 = 642797\nlocal UNIQUE_NAME = 'NoiseStalker_5QXMT2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5QXMT2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_5QXMT2%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 0S9AZ7)", "completion": "-- ServerScriptService/Horror/NetScares_0S9AZ7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0S9AZ7 = 909084\nlocal UNIQUE_NAME = 'NetScares_0S9AZ7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0S9AZ7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_0S9AZ7'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 1BYBK7)", "completion": "-- ServerScriptService/Horror/HideSystem_1BYBK7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1BYBK7 = 598721\nlocal UNIQUE_NAME = 'HideSystem_1BYBK7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1BYBK7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_1BYBK7_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 26XPSG)", "completion": "-- ServerScriptService/Horror/ProcRooms_26XPSG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_26XPSG = 376441\nlocal UNIQUE_NAME = 'ProcRooms_26XPSG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_26XPSG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_26XPSG%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_26XPSG%10), 8, 16 + (SEED_26XPSG%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_26XPSG%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 49WOK3)", "completion": "-- ServerScriptService/Horror/NoiseStalker_49WOK3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_49WOK3 = 805302\nlocal UNIQUE_NAME = 'NoiseStalker_49WOK3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_49WOK3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_49WOK3%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche V7PKCW)", "completion": "-- ServerScriptService/Horror/Psyche_V7PKCW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V7PKCW = 577900\nlocal UNIQUE_NAME = 'Psyche_V7PKCW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V7PKCW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_V7PKCW%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker VP1N4C)", "completion": "-- ServerScriptService/Horror/NoiseStalker_VP1N4C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VP1N4C = 471140\nlocal UNIQUE_NAME = 'NoiseStalker_VP1N4C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VP1N4C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_VP1N4C%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche VRK61R)", "completion": "-- ServerScriptService/Horror/Psyche_VRK61R.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VRK61R = 400090\nlocal UNIQUE_NAME = 'Psyche_VRK61R'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VRK61R%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_VRK61R%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche SDHZSI)", "completion": "-- ServerScriptService/Horror/Psyche_SDHZSI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SDHZSI = 371957\nlocal UNIQUE_NAME = 'Psyche_SDHZSI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SDHZSI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_SDHZSI%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses FHF1AI)", "completion": "-- ServerScriptService/Horror/InventoryFuses_FHF1AI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FHF1AI = 334144\nlocal UNIQUE_NAME = 'InventoryFuses_FHF1AI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FHF1AI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_FHF1AI_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 42D9EX)", "completion": "-- ServerScriptService/Horror/BossPhases_42D9EX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_42D9EX = 634806\nlocal UNIQUE_NAME = 'BossPhases_42D9EX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_42D9EX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_42D9EX+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases ZO3AG2)", "completion": "-- ServerScriptService/Horror/BossPhases_ZO3AG2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZO3AG2 = 147432\nlocal UNIQUE_NAME = 'BossPhases_ZO3AG2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZO3AG2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_ZO3AG2+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 3BED56)", "completion": "-- ServerScriptService/Horror/NetScares_3BED56.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3BED56 = 531016\nlocal UNIQUE_NAME = 'NetScares_3BED56'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3BED56%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_3BED56'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 0JOS6U)", "completion": "-- ServerScriptService/Horror/HideSystem_0JOS6U.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0JOS6U = 551105\nlocal UNIQUE_NAME = 'HideSystem_0JOS6U'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0JOS6U%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_0JOS6U_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI Q7C1K6)", "completion": "-- ServerScriptService/Horror/MonsterAI_Q7C1K6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Q7C1K6 = 249341\nlocal UNIQUE_NAME = 'MonsterAI_Q7C1K6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Q7C1K6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_Q7C1K6%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker RHXFW1)", "completion": "-- ServerScriptService/Horror/NoiseStalker_RHXFW1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RHXFW1 = 795128\nlocal UNIQUE_NAME = 'NoiseStalker_RHXFW1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RHXFW1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_RHXFW1%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting R1KBGA)", "completion": "-- ServerScriptService/Horror/FearLighting_R1KBGA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_R1KBGA = 423069\nlocal UNIQUE_NAME = 'FearLighting_R1KBGA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_R1KBGA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_R1KBGA%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 3TPV5O)", "completion": "-- ServerScriptService/Horror/HideSystem_3TPV5O.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3TPV5O = 948099\nlocal UNIQUE_NAME = 'HideSystem_3TPV5O'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3TPV5O%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_3TPV5O_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms T84R9U)", "completion": "-- ServerScriptService/Horror/ProcRooms_T84R9U.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T84R9U = 974758\nlocal UNIQUE_NAME = 'ProcRooms_T84R9U'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T84R9U%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_T84R9U%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_T84R9U%10), 8, 16 + (SEED_T84R9U%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_T84R9U%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 1H7MAS)", "completion": "-- ServerScriptService/Horror/BossPhases_1H7MAS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1H7MAS = 742452\nlocal UNIQUE_NAME = 'BossPhases_1H7MAS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1H7MAS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_1H7MAS+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 1WF7BJ)", "completion": "-- ServerScriptService/Horror/NetScares_1WF7BJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1WF7BJ = 72119\nlocal UNIQUE_NAME = 'NetScares_1WF7BJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1WF7BJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_1WF7BJ'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares USPVG7)", "completion": "-- ServerScriptService/Horror/NetScares_USPVG7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_USPVG7 = 20155\nlocal UNIQUE_NAME = 'NetScares_USPVG7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_USPVG7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_USPVG7'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 5KLATH)", "completion": "-- ServerScriptService/Horror/NoiseStalker_5KLATH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5KLATH = 532475\nlocal UNIQUE_NAME = 'NoiseStalker_5KLATH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5KLATH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_5KLATH%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche C4P71L)", "completion": "-- ServerScriptService/Horror/Psyche_C4P71L.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C4P71L = 25035\nlocal UNIQUE_NAME = 'Psyche_C4P71L'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C4P71L%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_C4P71L%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker T9O7NX)", "completion": "-- ServerScriptService/Horror/NoiseStalker_T9O7NX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T9O7NX = 240392\nlocal UNIQUE_NAME = 'NoiseStalker_T9O7NX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T9O7NX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_T9O7NX%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares BIXV4B)", "completion": "-- ServerScriptService/Horror/NetScares_BIXV4B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BIXV4B = 195677\nlocal UNIQUE_NAME = 'NetScares_BIXV4B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BIXV4B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_BIXV4B'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem C8K9WN)", "completion": "-- ServerScriptService/Horror/HideSystem_C8K9WN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C8K9WN = 844873\nlocal UNIQUE_NAME = 'HideSystem_C8K9WN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C8K9WN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_C8K9WN_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases SCJPA7)", "completion": "-- ServerScriptService/Horror/BossPhases_SCJPA7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SCJPA7 = 60559\nlocal UNIQUE_NAME = 'BossPhases_SCJPA7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SCJPA7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_SCJPA7+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual GO8L3S)", "completion": "-- ServerScriptService/Horror/Ritual_GO8L3S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GO8L3S = 96455\nlocal UNIQUE_NAME = 'Ritual_GO8L3S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GO8L3S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms ZM8250)", "completion": "-- ServerScriptService/Horror/ProcRooms_ZM8250.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZM8250 = 4869\nlocal UNIQUE_NAME = 'ProcRooms_ZM8250'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZM8250%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_ZM8250%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_ZM8250%10), 8, 16 + (SEED_ZM8250%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_ZM8250%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 5JUH3S)", "completion": "-- ServerScriptService/Horror/NoiseStalker_5JUH3S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5JUH3S = 235059\nlocal UNIQUE_NAME = 'NoiseStalker_5JUH3S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5JUH3S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_5JUH3S%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares GAS682)", "completion": "-- ServerScriptService/Horror/NetScares_GAS682.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GAS682 = 123216\nlocal UNIQUE_NAME = 'NetScares_GAS682'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GAS682%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_GAS682'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting E1NBY6)", "completion": "-- ServerScriptService/Horror/FearLighting_E1NBY6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_E1NBY6 = 199493\nlocal UNIQUE_NAME = 'FearLighting_E1NBY6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_E1NBY6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_E1NBY6%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases TJEMVH)", "completion": "-- ServerScriptService/Horror/BossPhases_TJEMVH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TJEMVH = 9913\nlocal UNIQUE_NAME = 'BossPhases_TJEMVH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TJEMVH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_TJEMVH+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI INA04I)", "completion": "-- ServerScriptService/Horror/MonsterAI_INA04I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_INA04I = 483667\nlocal UNIQUE_NAME = 'MonsterAI_INA04I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_INA04I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_INA04I%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses NJOWCB)", "completion": "-- ServerScriptService/Horror/InventoryFuses_NJOWCB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NJOWCB = 261759\nlocal UNIQUE_NAME = 'InventoryFuses_NJOWCB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NJOWCB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_NJOWCB_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting C8BCHR)", "completion": "-- ServerScriptService/Horror/FearLighting_C8BCHR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C8BCHR = 66355\nlocal UNIQUE_NAME = 'FearLighting_C8BCHR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C8BCHR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_C8BCHR%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem R235K5)", "completion": "-- ServerScriptService/Horror/HideSystem_R235K5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_R235K5 = 288450\nlocal UNIQUE_NAME = 'HideSystem_R235K5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_R235K5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_R235K5_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 9CRTTU)", "completion": "-- ServerScriptService/Horror/FearLighting_9CRTTU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9CRTTU = 549365\nlocal UNIQUE_NAME = 'FearLighting_9CRTTU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9CRTTU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_9CRTTU%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 60KFZC)", "completion": "-- ServerScriptService/Horror/MonsterAI_60KFZC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_60KFZC = 807680\nlocal UNIQUE_NAME = 'MonsterAI_60KFZC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_60KFZC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_60KFZC%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting WD0WP7)", "completion": "-- ServerScriptService/Horror/FearLighting_WD0WP7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WD0WP7 = 849029\nlocal UNIQUE_NAME = 'FearLighting_WD0WP7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WD0WP7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_WD0WP7%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI PFEH0B)", "completion": "-- ServerScriptService/Horror/MonsterAI_PFEH0B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PFEH0B = 897130\nlocal UNIQUE_NAME = 'MonsterAI_PFEH0B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PFEH0B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_PFEH0B%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 27ZYCU)", "completion": "-- ServerScriptService/Horror/HideSystem_27ZYCU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_27ZYCU = 473143\nlocal UNIQUE_NAME = 'HideSystem_27ZYCU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_27ZYCU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_27ZYCU_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses Y98NI5)", "completion": "-- ServerScriptService/Horror/InventoryFuses_Y98NI5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Y98NI5 = 960061\nlocal UNIQUE_NAME = 'InventoryFuses_Y98NI5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Y98NI5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_Y98NI5_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker A42OGW)", "completion": "-- ServerScriptService/Horror/NoiseStalker_A42OGW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_A42OGW = 140071\nlocal UNIQUE_NAME = 'NoiseStalker_A42OGW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_A42OGW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_A42OGW%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting Z03V1B)", "completion": "-- ServerScriptService/Horror/FearLighting_Z03V1B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Z03V1B = 369643\nlocal UNIQUE_NAME = 'FearLighting_Z03V1B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Z03V1B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_Z03V1B%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses AD82ST)", "completion": "-- ServerScriptService/Horror/InventoryFuses_AD82ST.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AD82ST = 94497\nlocal UNIQUE_NAME = 'InventoryFuses_AD82ST'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AD82ST%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_AD82ST_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms SDND0Q)", "completion": "-- ServerScriptService/Horror/ProcRooms_SDND0Q.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SDND0Q = 72713\nlocal UNIQUE_NAME = 'ProcRooms_SDND0Q'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SDND0Q%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_SDND0Q%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_SDND0Q%10), 8, 16 + (SEED_SDND0Q%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_SDND0Q%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting SEQ58I)", "completion": "-- ServerScriptService/Horror/FearLighting_SEQ58I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SEQ58I = 471483\nlocal UNIQUE_NAME = 'FearLighting_SEQ58I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SEQ58I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_SEQ58I%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses TAHC6W)", "completion": "-- ServerScriptService/Horror/InventoryFuses_TAHC6W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TAHC6W = 752201\nlocal UNIQUE_NAME = 'InventoryFuses_TAHC6W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TAHC6W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_TAHC6W_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting KUCHIF)", "completion": "-- ServerScriptService/Horror/FearLighting_KUCHIF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KUCHIF = 95224\nlocal UNIQUE_NAME = 'FearLighting_KUCHIF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KUCHIF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_KUCHIF%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche U16M72)", "completion": "-- ServerScriptService/Horror/Psyche_U16M72.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_U16M72 = 618432\nlocal UNIQUE_NAME = 'Psyche_U16M72'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_U16M72%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_U16M72%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 6UTTXQ)", "completion": "-- ServerScriptService/Horror/HideSystem_6UTTXQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6UTTXQ = 480025\nlocal UNIQUE_NAME = 'HideSystem_6UTTXQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6UTTXQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_6UTTXQ_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting FJJW7C)", "completion": "-- ServerScriptService/Horror/FearLighting_FJJW7C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FJJW7C = 664515\nlocal UNIQUE_NAME = 'FearLighting_FJJW7C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FJJW7C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_FJJW7C%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases ZZ5AYA)", "completion": "-- ServerScriptService/Horror/BossPhases_ZZ5AYA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZZ5AYA = 806800\nlocal UNIQUE_NAME = 'BossPhases_ZZ5AYA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZZ5AYA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_ZZ5AYA+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms EEXVMT)", "completion": "-- ServerScriptService/Horror/ProcRooms_EEXVMT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EEXVMT = 931224\nlocal UNIQUE_NAME = 'ProcRooms_EEXVMT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EEXVMT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_EEXVMT%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_EEXVMT%10), 8, 16 + (SEED_EEXVMT%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_EEXVMT%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche SOXSCR)", "completion": "-- ServerScriptService/Horror/Psyche_SOXSCR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SOXSCR = 439458\nlocal UNIQUE_NAME = 'Psyche_SOXSCR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SOXSCR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_SOXSCR%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker G0RGNX)", "completion": "-- ServerScriptService/Horror/NoiseStalker_G0RGNX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G0RGNX = 994065\nlocal UNIQUE_NAME = 'NoiseStalker_G0RGNX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G0RGNX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_G0RGNX%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 1GTNT5)", "completion": "-- ServerScriptService/Horror/MonsterAI_1GTNT5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1GTNT5 = 282496\nlocal UNIQUE_NAME = 'MonsterAI_1GTNT5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1GTNT5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_1GTNT5%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche HO3ZOH)", "completion": "-- ServerScriptService/Horror/Psyche_HO3ZOH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HO3ZOH = 346023\nlocal UNIQUE_NAME = 'Psyche_HO3ZOH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HO3ZOH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_HO3ZOH%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting TM8A4X)", "completion": "-- ServerScriptService/Horror/FearLighting_TM8A4X.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TM8A4X = 499289\nlocal UNIQUE_NAME = 'FearLighting_TM8A4X'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TM8A4X%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_TM8A4X%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses ZNPLPX)", "completion": "-- ServerScriptService/Horror/InventoryFuses_ZNPLPX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZNPLPX = 610854\nlocal UNIQUE_NAME = 'InventoryFuses_ZNPLPX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZNPLPX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_ZNPLPX_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting XIPMZP)", "completion": "-- ServerScriptService/Horror/FearLighting_XIPMZP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XIPMZP = 725880\nlocal UNIQUE_NAME = 'FearLighting_XIPMZP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XIPMZP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_XIPMZP%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting GYY6EE)", "completion": "-- ServerScriptService/Horror/FearLighting_GYY6EE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GYY6EE = 9275\nlocal UNIQUE_NAME = 'FearLighting_GYY6EE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GYY6EE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_GYY6EE%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 5PVXXL)", "completion": "-- ServerScriptService/Horror/FearLighting_5PVXXL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5PVXXL = 438482\nlocal UNIQUE_NAME = 'FearLighting_5PVXXL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5PVXXL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_5PVXXL%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem GWGIRK)", "completion": "-- ServerScriptService/Horror/HideSystem_GWGIRK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GWGIRK = 753635\nlocal UNIQUE_NAME = 'HideSystem_GWGIRK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GWGIRK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_GWGIRK_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker JHEU9T)", "completion": "-- ServerScriptService/Horror/NoiseStalker_JHEU9T.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JHEU9T = 546971\nlocal UNIQUE_NAME = 'NoiseStalker_JHEU9T'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JHEU9T%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_JHEU9T%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting S8B77I)", "completion": "-- ServerScriptService/Horror/FearLighting_S8B77I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S8B77I = 688324\nlocal UNIQUE_NAME = 'FearLighting_S8B77I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S8B77I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_S8B77I%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 0NY8JU)", "completion": "-- ServerScriptService/Horror/Ritual_0NY8JU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0NY8JU = 386694\nlocal UNIQUE_NAME = 'Ritual_0NY8JU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0NY8JU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 8YPY4J)", "completion": "-- ServerScriptService/Horror/NoiseStalker_8YPY4J.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8YPY4J = 868134\nlocal UNIQUE_NAME = 'NoiseStalker_8YPY4J'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8YPY4J%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_8YPY4J%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual BRTN8E)", "completion": "-- ServerScriptService/Horror/Ritual_BRTN8E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BRTN8E = 868390\nlocal UNIQUE_NAME = 'Ritual_BRTN8E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BRTN8E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 5F1VWE)", "completion": "-- ServerScriptService/Horror/InventoryFuses_5F1VWE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5F1VWE = 1856\nlocal UNIQUE_NAME = 'InventoryFuses_5F1VWE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5F1VWE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_5F1VWE_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 7T82XS)", "completion": "-- ServerScriptService/Horror/NoiseStalker_7T82XS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7T82XS = 638254\nlocal UNIQUE_NAME = 'NoiseStalker_7T82XS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7T82XS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_7T82XS%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker CUCAZJ)", "completion": "-- ServerScriptService/Horror/NoiseStalker_CUCAZJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CUCAZJ = 4008\nlocal UNIQUE_NAME = 'NoiseStalker_CUCAZJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CUCAZJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_CUCAZJ%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 3XQI6P)", "completion": "-- ServerScriptService/Horror/NetScares_3XQI6P.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3XQI6P = 529355\nlocal UNIQUE_NAME = 'NetScares_3XQI6P'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3XQI6P%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_3XQI6P'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche WB8POO)", "completion": "-- ServerScriptService/Horror/Psyche_WB8POO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WB8POO = 643211\nlocal UNIQUE_NAME = 'Psyche_WB8POO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WB8POO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_WB8POO%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 225ASL)", "completion": "-- ServerScriptService/Horror/BossPhases_225ASL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_225ASL = 899638\nlocal UNIQUE_NAME = 'BossPhases_225ASL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_225ASL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_225ASL+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms BQ81JU)", "completion": "-- ServerScriptService/Horror/ProcRooms_BQ81JU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BQ81JU = 121943\nlocal UNIQUE_NAME = 'ProcRooms_BQ81JU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BQ81JU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_BQ81JU%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_BQ81JU%10), 8, 16 + (SEED_BQ81JU%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_BQ81JU%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 3INRD3)", "completion": "-- ServerScriptService/Horror/Ritual_3INRD3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3INRD3 = 111396\nlocal UNIQUE_NAME = 'Ritual_3INRD3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3INRD3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 01UT3V)", "completion": "-- ServerScriptService/Horror/NoiseStalker_01UT3V.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_01UT3V = 442278\nlocal UNIQUE_NAME = 'NoiseStalker_01UT3V'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_01UT3V%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_01UT3V%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 591XEP)", "completion": "-- ServerScriptService/Horror/ProcRooms_591XEP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_591XEP = 980198\nlocal UNIQUE_NAME = 'ProcRooms_591XEP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_591XEP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_591XEP%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_591XEP%10), 8, 16 + (SEED_591XEP%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_591XEP%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting PHP8AV)", "completion": "-- ServerScriptService/Horror/FearLighting_PHP8AV.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PHP8AV = 357389\nlocal UNIQUE_NAME = 'FearLighting_PHP8AV'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PHP8AV%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_PHP8AV%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 0HGWKS)", "completion": "-- ServerScriptService/Horror/FearLighting_0HGWKS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0HGWKS = 510208\nlocal UNIQUE_NAME = 'FearLighting_0HGWKS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0HGWKS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_0HGWKS%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases C9W1Z4)", "completion": "-- ServerScriptService/Horror/BossPhases_C9W1Z4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C9W1Z4 = 826637\nlocal UNIQUE_NAME = 'BossPhases_C9W1Z4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C9W1Z4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_C9W1Z4+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 29KMPT)", "completion": "-- ServerScriptService/Horror/MonsterAI_29KMPT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_29KMPT = 110869\nlocal UNIQUE_NAME = 'MonsterAI_29KMPT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_29KMPT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_29KMPT%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 9C66X7)", "completion": "-- ServerScriptService/Horror/FearLighting_9C66X7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9C66X7 = 935670\nlocal UNIQUE_NAME = 'FearLighting_9C66X7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9C66X7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_9C66X7%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 669QSX)", "completion": "-- ServerScriptService/Horror/Ritual_669QSX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_669QSX = 3228\nlocal UNIQUE_NAME = 'Ritual_669QSX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_669QSX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem O7M48M)", "completion": "-- ServerScriptService/Horror/HideSystem_O7M48M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O7M48M = 35352\nlocal UNIQUE_NAME = 'HideSystem_O7M48M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O7M48M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_O7M48M_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms JSHOOC)", "completion": "-- ServerScriptService/Horror/ProcRooms_JSHOOC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JSHOOC = 404711\nlocal UNIQUE_NAME = 'ProcRooms_JSHOOC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JSHOOC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_JSHOOC%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_JSHOOC%10), 8, 16 + (SEED_JSHOOC%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_JSHOOC%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses EOD1SI)", "completion": "-- ServerScriptService/Horror/InventoryFuses_EOD1SI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EOD1SI = 680588\nlocal UNIQUE_NAME = 'InventoryFuses_EOD1SI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EOD1SI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_EOD1SI_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI OXTIQ7)", "completion": "-- ServerScriptService/Horror/MonsterAI_OXTIQ7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OXTIQ7 = 398042\nlocal UNIQUE_NAME = 'MonsterAI_OXTIQ7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OXTIQ7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_OXTIQ7%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche Q7T4YR)", "completion": "-- ServerScriptService/Horror/Psyche_Q7T4YR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Q7T4YR = 375864\nlocal UNIQUE_NAME = 'Psyche_Q7T4YR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Q7T4YR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_Q7T4YR%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 759U1H)", "completion": "-- ServerScriptService/Horror/NetScares_759U1H.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_759U1H = 486283\nlocal UNIQUE_NAME = 'NetScares_759U1H'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_759U1H%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_759U1H'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche R3EC6M)", "completion": "-- ServerScriptService/Horror/Psyche_R3EC6M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_R3EC6M = 15433\nlocal UNIQUE_NAME = 'Psyche_R3EC6M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_R3EC6M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_R3EC6M%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 52L9GU)", "completion": "-- ServerScriptService/Horror/MonsterAI_52L9GU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_52L9GU = 566037\nlocal UNIQUE_NAME = 'MonsterAI_52L9GU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_52L9GU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_52L9GU%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem NBSOC5)", "completion": "-- ServerScriptService/Horror/HideSystem_NBSOC5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NBSOC5 = 165465\nlocal UNIQUE_NAME = 'HideSystem_NBSOC5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NBSOC5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_NBSOC5_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases RYS0XW)", "completion": "-- ServerScriptService/Horror/BossPhases_RYS0XW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RYS0XW = 548808\nlocal UNIQUE_NAME = 'BossPhases_RYS0XW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RYS0XW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_RYS0XW+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 1P057H)", "completion": "-- ServerScriptService/Horror/NoiseStalker_1P057H.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1P057H = 460933\nlocal UNIQUE_NAME = 'NoiseStalker_1P057H'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1P057H%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_1P057H%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem GG49RT)", "completion": "-- ServerScriptService/Horror/HideSystem_GG49RT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GG49RT = 70265\nlocal UNIQUE_NAME = 'HideSystem_GG49RT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GG49RT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_GG49RT_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker GLI7ZA)", "completion": "-- ServerScriptService/Horror/NoiseStalker_GLI7ZA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GLI7ZA = 905628\nlocal UNIQUE_NAME = 'NoiseStalker_GLI7ZA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GLI7ZA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_GLI7ZA%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases GCKIS6)", "completion": "-- ServerScriptService/Horror/BossPhases_GCKIS6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GCKIS6 = 141806\nlocal UNIQUE_NAME = 'BossPhases_GCKIS6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GCKIS6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_GCKIS6+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases RM5C1M)", "completion": "-- ServerScriptService/Horror/BossPhases_RM5C1M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_RM5C1M = 985125\nlocal UNIQUE_NAME = 'BossPhases_RM5C1M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_RM5C1M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_RM5C1M+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms JJM4V1)", "completion": "-- ServerScriptService/Horror/ProcRooms_JJM4V1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JJM4V1 = 620288\nlocal UNIQUE_NAME = 'ProcRooms_JJM4V1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JJM4V1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_JJM4V1%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_JJM4V1%10), 8, 16 + (SEED_JJM4V1%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_JJM4V1%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 7927XM)", "completion": "-- ServerScriptService/Horror/Ritual_7927XM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7927XM = 804979\nlocal UNIQUE_NAME = 'Ritual_7927XM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7927XM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 73ELHM)", "completion": "-- ServerScriptService/Horror/NetScares_73ELHM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_73ELHM = 363762\nlocal UNIQUE_NAME = 'NetScares_73ELHM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_73ELHM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_73ELHM'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms G8H25I)", "completion": "-- ServerScriptService/Horror/ProcRooms_G8H25I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G8H25I = 4410\nlocal UNIQUE_NAME = 'ProcRooms_G8H25I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G8H25I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_G8H25I%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_G8H25I%10), 8, 16 + (SEED_G8H25I%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_G8H25I%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 3LY5NC)", "completion": "-- ServerScriptService/Horror/InventoryFuses_3LY5NC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3LY5NC = 944138\nlocal UNIQUE_NAME = 'InventoryFuses_3LY5NC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3LY5NC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_3LY5NC_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 9CHA4D)", "completion": "-- ServerScriptService/Horror/MonsterAI_9CHA4D.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9CHA4D = 131955\nlocal UNIQUE_NAME = 'MonsterAI_9CHA4D'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9CHA4D%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_9CHA4D%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem EL3C0N)", "completion": "-- ServerScriptService/Horror/HideSystem_EL3C0N.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EL3C0N = 799605\nlocal UNIQUE_NAME = 'HideSystem_EL3C0N'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EL3C0N%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_EL3C0N_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 00FK1N)", "completion": "-- ServerScriptService/Horror/HideSystem_00FK1N.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_00FK1N = 119243\nlocal UNIQUE_NAME = 'HideSystem_00FK1N'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_00FK1N%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_00FK1N_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases VPJD9M)", "completion": "-- ServerScriptService/Horror/BossPhases_VPJD9M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VPJD9M = 541975\nlocal UNIQUE_NAME = 'BossPhases_VPJD9M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VPJD9M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_VPJD9M+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem W82VJF)", "completion": "-- ServerScriptService/Horror/HideSystem_W82VJF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_W82VJF = 830890\nlocal UNIQUE_NAME = 'HideSystem_W82VJF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_W82VJF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_W82VJF_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI UNF6Q4)", "completion": "-- ServerScriptService/Horror/MonsterAI_UNF6Q4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UNF6Q4 = 20495\nlocal UNIQUE_NAME = 'MonsterAI_UNF6Q4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UNF6Q4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_UNF6Q4%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 3GODTO)", "completion": "-- ServerScriptService/Horror/Ritual_3GODTO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3GODTO = 458852\nlocal UNIQUE_NAME = 'Ritual_3GODTO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3GODTO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 3XZSI1)", "completion": "-- ServerScriptService/Horror/MonsterAI_3XZSI1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3XZSI1 = 700046\nlocal UNIQUE_NAME = 'MonsterAI_3XZSI1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3XZSI1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_3XZSI1%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual O6OD8E)", "completion": "-- ServerScriptService/Horror/Ritual_O6OD8E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O6OD8E = 445105\nlocal UNIQUE_NAME = 'Ritual_O6OD8E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O6OD8E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 8CKEFS)", "completion": "-- ServerScriptService/Horror/BossPhases_8CKEFS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8CKEFS = 574404\nlocal UNIQUE_NAME = 'BossPhases_8CKEFS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8CKEFS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_8CKEFS+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses VM61FN)", "completion": "-- ServerScriptService/Horror/InventoryFuses_VM61FN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VM61FN = 416186\nlocal UNIQUE_NAME = 'InventoryFuses_VM61FN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VM61FN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_VM61FN_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting URID2H)", "completion": "-- ServerScriptService/Horror/FearLighting_URID2H.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_URID2H = 988455\nlocal UNIQUE_NAME = 'FearLighting_URID2H'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_URID2H%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_URID2H%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 6MHWL3)", "completion": "-- ServerScriptService/Horror/NetScares_6MHWL3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6MHWL3 = 784226\nlocal UNIQUE_NAME = 'NetScares_6MHWL3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6MHWL3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_6MHWL3'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 6VI7XT)", "completion": "-- ServerScriptService/Horror/Psyche_6VI7XT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6VI7XT = 12018\nlocal UNIQUE_NAME = 'Psyche_6VI7XT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6VI7XT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_6VI7XT%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms G5IY1I)", "completion": "-- ServerScriptService/Horror/ProcRooms_G5IY1I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G5IY1I = 990476\nlocal UNIQUE_NAME = 'ProcRooms_G5IY1I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G5IY1I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_G5IY1I%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_G5IY1I%10), 8, 16 + (SEED_G5IY1I%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_G5IY1I%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases CUXTV5)", "completion": "-- ServerScriptService/Horror/BossPhases_CUXTV5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CUXTV5 = 778928\nlocal UNIQUE_NAME = 'BossPhases_CUXTV5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CUXTV5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_CUXTV5+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual VOKQEH)", "completion": "-- ServerScriptService/Horror/Ritual_VOKQEH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VOKQEH = 792887\nlocal UNIQUE_NAME = 'Ritual_VOKQEH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VOKQEH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche YNROEZ)", "completion": "-- ServerScriptService/Horror/Psyche_YNROEZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_YNROEZ = 607506\nlocal UNIQUE_NAME = 'Psyche_YNROEZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_YNROEZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_YNROEZ%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 3GJ3CN)", "completion": "-- ServerScriptService/Horror/Psyche_3GJ3CN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3GJ3CN = 364401\nlocal UNIQUE_NAME = 'Psyche_3GJ3CN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3GJ3CN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_3GJ3CN%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker CASBVC)", "completion": "-- ServerScriptService/Horror/NoiseStalker_CASBVC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CASBVC = 513679\nlocal UNIQUE_NAME = 'NoiseStalker_CASBVC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CASBVC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_CASBVC%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI SC5PAG)", "completion": "-- ServerScriptService/Horror/MonsterAI_SC5PAG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SC5PAG = 46003\nlocal UNIQUE_NAME = 'MonsterAI_SC5PAG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SC5PAG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_SC5PAG%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem IY0CVZ)", "completion": "-- ServerScriptService/Horror/HideSystem_IY0CVZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IY0CVZ = 609236\nlocal UNIQUE_NAME = 'HideSystem_IY0CVZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IY0CVZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_IY0CVZ_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms JNFNUU)", "completion": "-- ServerScriptService/Horror/ProcRooms_JNFNUU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JNFNUU = 77031\nlocal UNIQUE_NAME = 'ProcRooms_JNFNUU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JNFNUU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_JNFNUU%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_JNFNUU%10), 8, 16 + (SEED_JNFNUU%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_JNFNUU%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases L2LCE3)", "completion": "-- ServerScriptService/Horror/BossPhases_L2LCE3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_L2LCE3 = 52979\nlocal UNIQUE_NAME = 'BossPhases_L2LCE3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_L2LCE3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_L2LCE3+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 1KRXLY)", "completion": "-- ServerScriptService/Horror/ProcRooms_1KRXLY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1KRXLY = 965553\nlocal UNIQUE_NAME = 'ProcRooms_1KRXLY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1KRXLY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_1KRXLY%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_1KRXLY%10), 8, 16 + (SEED_1KRXLY%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_1KRXLY%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting C0D4DL)", "completion": "-- ServerScriptService/Horror/FearLighting_C0D4DL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C0D4DL = 545234\nlocal UNIQUE_NAME = 'FearLighting_C0D4DL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C0D4DL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_C0D4DL%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases EN9ANE)", "completion": "-- ServerScriptService/Horror/BossPhases_EN9ANE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EN9ANE = 623830\nlocal UNIQUE_NAME = 'BossPhases_EN9ANE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EN9ANE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_EN9ANE+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases XASTYW)", "completion": "-- ServerScriptService/Horror/BossPhases_XASTYW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XASTYW = 828147\nlocal UNIQUE_NAME = 'BossPhases_XASTYW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XASTYW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_XASTYW+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 5UXG75)", "completion": "-- ServerScriptService/Horror/NoiseStalker_5UXG75.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5UXG75 = 837626\nlocal UNIQUE_NAME = 'NoiseStalker_5UXG75'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5UXG75%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_5UXG75%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 0N028S)", "completion": "-- ServerScriptService/Horror/HideSystem_0N028S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_0N028S = 411248\nlocal UNIQUE_NAME = 'HideSystem_0N028S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_0N028S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_0N028S_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares FHW2VM)", "completion": "-- ServerScriptService/Horror/NetScares_FHW2VM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FHW2VM = 601685\nlocal UNIQUE_NAME = 'NetScares_FHW2VM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FHW2VM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_FHW2VM'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI O6RCW3)", "completion": "-- ServerScriptService/Horror/MonsterAI_O6RCW3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O6RCW3 = 141659\nlocal UNIQUE_NAME = 'MonsterAI_O6RCW3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O6RCW3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_O6RCW3%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI M5K4J3)", "completion": "-- ServerScriptService/Horror/MonsterAI_M5K4J3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_M5K4J3 = 648623\nlocal UNIQUE_NAME = 'MonsterAI_M5K4J3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_M5K4J3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_M5K4J3%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms S6R4B3)", "completion": "-- ServerScriptService/Horror/ProcRooms_S6R4B3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S6R4B3 = 596717\nlocal UNIQUE_NAME = 'ProcRooms_S6R4B3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S6R4B3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_S6R4B3%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_S6R4B3%10), 8, 16 + (SEED_S6R4B3%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_S6R4B3%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 2Y7PTO)", "completion": "-- ServerScriptService/Horror/NetScares_2Y7PTO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2Y7PTO = 851377\nlocal UNIQUE_NAME = 'NetScares_2Y7PTO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2Y7PTO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_2Y7PTO'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 660Y6K)", "completion": "-- ServerScriptService/Horror/NetScares_660Y6K.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_660Y6K = 250275\nlocal UNIQUE_NAME = 'NetScares_660Y6K'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_660Y6K%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_660Y6K'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI O0TNFP)", "completion": "-- ServerScriptService/Horror/MonsterAI_O0TNFP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O0TNFP = 807963\nlocal UNIQUE_NAME = 'MonsterAI_O0TNFP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O0TNFP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_O0TNFP%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 5DESRS)", "completion": "-- ServerScriptService/Horror/MonsterAI_5DESRS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5DESRS = 945783\nlocal UNIQUE_NAME = 'MonsterAI_5DESRS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5DESRS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_5DESRS%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker LAFT31)", "completion": "-- ServerScriptService/Horror/NoiseStalker_LAFT31.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LAFT31 = 145904\nlocal UNIQUE_NAME = 'NoiseStalker_LAFT31'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LAFT31%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_LAFT31%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting GK1Q5P)", "completion": "-- ServerScriptService/Horror/FearLighting_GK1Q5P.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GK1Q5P = 51163\nlocal UNIQUE_NAME = 'FearLighting_GK1Q5P'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GK1Q5P%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_GK1Q5P%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 2QNTIR)", "completion": "-- ServerScriptService/Horror/Ritual_2QNTIR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2QNTIR = 791582\nlocal UNIQUE_NAME = 'Ritual_2QNTIR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2QNTIR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual VI4OSP)", "completion": "-- ServerScriptService/Horror/Ritual_VI4OSP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VI4OSP = 471964\nlocal UNIQUE_NAME = 'Ritual_VI4OSP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VI4OSP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem FO5N6C)", "completion": "-- ServerScriptService/Horror/HideSystem_FO5N6C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FO5N6C = 954486\nlocal UNIQUE_NAME = 'HideSystem_FO5N6C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FO5N6C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_FO5N6C_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem REXIF2)", "completion": "-- ServerScriptService/Horror/HideSystem_REXIF2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_REXIF2 = 404045\nlocal UNIQUE_NAME = 'HideSystem_REXIF2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_REXIF2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_REXIF2_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses B1AB1I)", "completion": "-- ServerScriptService/Horror/InventoryFuses_B1AB1I.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_B1AB1I = 875522\nlocal UNIQUE_NAME = 'InventoryFuses_B1AB1I'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_B1AB1I%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_B1AB1I_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting QTO0SZ)", "completion": "-- ServerScriptService/Horror/FearLighting_QTO0SZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QTO0SZ = 825711\nlocal UNIQUE_NAME = 'FearLighting_QTO0SZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QTO0SZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_QTO0SZ%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 7SWS4B)", "completion": "-- ServerScriptService/Horror/InventoryFuses_7SWS4B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7SWS4B = 293206\nlocal UNIQUE_NAME = 'InventoryFuses_7SWS4B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7SWS4B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_7SWS4B_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual DKNOS6)", "completion": "-- ServerScriptService/Horror/Ritual_DKNOS6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DKNOS6 = 935164\nlocal UNIQUE_NAME = 'Ritual_DKNOS6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DKNOS6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 5O4KJ1)", "completion": "-- ServerScriptService/Horror/NetScares_5O4KJ1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5O4KJ1 = 65290\nlocal UNIQUE_NAME = 'NetScares_5O4KJ1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5O4KJ1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_5O4KJ1'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases NF0RY4)", "completion": "-- ServerScriptService/Horror/BossPhases_NF0RY4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NF0RY4 = 62490\nlocal UNIQUE_NAME = 'BossPhases_NF0RY4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NF0RY4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_NF0RY4+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 02MEAN)", "completion": "-- ServerScriptService/Horror/NetScares_02MEAN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_02MEAN = 6578\nlocal UNIQUE_NAME = 'NetScares_02MEAN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_02MEAN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_02MEAN'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 1F1LJ5)", "completion": "-- ServerScriptService/Horror/HideSystem_1F1LJ5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1F1LJ5 = 406772\nlocal UNIQUE_NAME = 'HideSystem_1F1LJ5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1F1LJ5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_1F1LJ5_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker MW96UT)", "completion": "-- ServerScriptService/Horror/NoiseStalker_MW96UT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MW96UT = 931967\nlocal UNIQUE_NAME = 'NoiseStalker_MW96UT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MW96UT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_MW96UT%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases W7LDJP)", "completion": "-- ServerScriptService/Horror/BossPhases_W7LDJP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_W7LDJP = 759031\nlocal UNIQUE_NAME = 'BossPhases_W7LDJP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_W7LDJP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_W7LDJP+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares GAK1SF)", "completion": "-- ServerScriptService/Horror/NetScares_GAK1SF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GAK1SF = 509278\nlocal UNIQUE_NAME = 'NetScares_GAK1SF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GAK1SF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_GAK1SF'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 4KR6M5)", "completion": "-- ServerScriptService/Horror/NoiseStalker_4KR6M5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4KR6M5 = 879060\nlocal UNIQUE_NAME = 'NoiseStalker_4KR6M5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4KR6M5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_4KR6M5%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker IYWTXG)", "completion": "-- ServerScriptService/Horror/NoiseStalker_IYWTXG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IYWTXG = 144784\nlocal UNIQUE_NAME = 'NoiseStalker_IYWTXG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IYWTXG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_IYWTXG%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases IR7J7B)", "completion": "-- ServerScriptService/Horror/BossPhases_IR7J7B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IR7J7B = 211476\nlocal UNIQUE_NAME = 'BossPhases_IR7J7B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IR7J7B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_IR7J7B+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 5B3IEA)", "completion": "-- ServerScriptService/Horror/FearLighting_5B3IEA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5B3IEA = 393031\nlocal UNIQUE_NAME = 'FearLighting_5B3IEA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5B3IEA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_5B3IEA%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms ELNQA9)", "completion": "-- ServerScriptService/Horror/ProcRooms_ELNQA9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ELNQA9 = 987184\nlocal UNIQUE_NAME = 'ProcRooms_ELNQA9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ELNQA9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_ELNQA9%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_ELNQA9%10), 8, 16 + (SEED_ELNQA9%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_ELNQA9%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting BA8DWV)", "completion": "-- ServerScriptService/Horror/FearLighting_BA8DWV.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BA8DWV = 103499\nlocal UNIQUE_NAME = 'FearLighting_BA8DWV'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BA8DWV%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_BA8DWV%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases VO5LPG)", "completion": "-- ServerScriptService/Horror/BossPhases_VO5LPG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VO5LPG = 492046\nlocal UNIQUE_NAME = 'BossPhases_VO5LPG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VO5LPG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_VO5LPG+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 3Q68MH)", "completion": "-- ServerScriptService/Horror/Ritual_3Q68MH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3Q68MH = 866280\nlocal UNIQUE_NAME = 'Ritual_3Q68MH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3Q68MH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 64ETUR)", "completion": "-- ServerScriptService/Horror/Ritual_64ETUR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_64ETUR = 249979\nlocal UNIQUE_NAME = 'Ritual_64ETUR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_64ETUR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses F3LLGA)", "completion": "-- ServerScriptService/Horror/InventoryFuses_F3LLGA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_F3LLGA = 705289\nlocal UNIQUE_NAME = 'InventoryFuses_F3LLGA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_F3LLGA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_F3LLGA_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem FFC5AD)", "completion": "-- ServerScriptService/Horror/HideSystem_FFC5AD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FFC5AD = 537124\nlocal UNIQUE_NAME = 'HideSystem_FFC5AD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FFC5AD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_FFC5AD_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual LQMIN6)", "completion": "-- ServerScriptService/Horror/Ritual_LQMIN6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LQMIN6 = 133941\nlocal UNIQUE_NAME = 'Ritual_LQMIN6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LQMIN6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem ABZUDB)", "completion": "-- ServerScriptService/Horror/HideSystem_ABZUDB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ABZUDB = 259206\nlocal UNIQUE_NAME = 'HideSystem_ABZUDB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ABZUDB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_ABZUDB_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 75FTWQ)", "completion": "-- ServerScriptService/Horror/BossPhases_75FTWQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_75FTWQ = 237910\nlocal UNIQUE_NAME = 'BossPhases_75FTWQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_75FTWQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_75FTWQ+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms HQEDYM)", "completion": "-- ServerScriptService/Horror/ProcRooms_HQEDYM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HQEDYM = 239194\nlocal UNIQUE_NAME = 'ProcRooms_HQEDYM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HQEDYM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_HQEDYM%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_HQEDYM%10), 8, 16 + (SEED_HQEDYM%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_HQEDYM%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 8CD8RQ)", "completion": "-- ServerScriptService/Horror/ProcRooms_8CD8RQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8CD8RQ = 571705\nlocal UNIQUE_NAME = 'ProcRooms_8CD8RQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8CD8RQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_8CD8RQ%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_8CD8RQ%10), 8, 16 + (SEED_8CD8RQ%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_8CD8RQ%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual MAM1A9)", "completion": "-- ServerScriptService/Horror/Ritual_MAM1A9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MAM1A9 = 923370\nlocal UNIQUE_NAME = 'Ritual_MAM1A9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MAM1A9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses GHYMS8)", "completion": "-- ServerScriptService/Horror/InventoryFuses_GHYMS8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GHYMS8 = 10998\nlocal UNIQUE_NAME = 'InventoryFuses_GHYMS8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GHYMS8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_GHYMS8_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 4PDZYM)", "completion": "-- ServerScriptService/Horror/ProcRooms_4PDZYM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4PDZYM = 414959\nlocal UNIQUE_NAME = 'ProcRooms_4PDZYM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4PDZYM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_4PDZYM%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_4PDZYM%10), 8, 16 + (SEED_4PDZYM%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_4PDZYM%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem QO70UB)", "completion": "-- ServerScriptService/Horror/HideSystem_QO70UB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QO70UB = 319565\nlocal UNIQUE_NAME = 'HideSystem_QO70UB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QO70UB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_QO70UB_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses U3SSQZ)", "completion": "-- ServerScriptService/Horror/InventoryFuses_U3SSQZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_U3SSQZ = 927006\nlocal UNIQUE_NAME = 'InventoryFuses_U3SSQZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_U3SSQZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_U3SSQZ_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms PQ4VOO)", "completion": "-- ServerScriptService/Horror/ProcRooms_PQ4VOO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PQ4VOO = 746596\nlocal UNIQUE_NAME = 'ProcRooms_PQ4VOO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PQ4VOO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_PQ4VOO%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_PQ4VOO%10), 8, 16 + (SEED_PQ4VOO%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_PQ4VOO%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 99TCNC)", "completion": "-- ServerScriptService/Horror/BossPhases_99TCNC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_99TCNC = 526887\nlocal UNIQUE_NAME = 'BossPhases_99TCNC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_99TCNC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_99TCNC+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual W0KZAC)", "completion": "-- ServerScriptService/Horror/Ritual_W0KZAC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_W0KZAC = 638337\nlocal UNIQUE_NAME = 'Ritual_W0KZAC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_W0KZAC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI V11TOH)", "completion": "-- ServerScriptService/Horror/MonsterAI_V11TOH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V11TOH = 481759\nlocal UNIQUE_NAME = 'MonsterAI_V11TOH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V11TOH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_V11TOH%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting PUE4E5)", "completion": "-- ServerScriptService/Horror/FearLighting_PUE4E5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PUE4E5 = 296003\nlocal UNIQUE_NAME = 'FearLighting_PUE4E5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PUE4E5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_PUE4E5%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 31U3ML)", "completion": "-- ServerScriptService/Horror/ProcRooms_31U3ML.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_31U3ML = 934788\nlocal UNIQUE_NAME = 'ProcRooms_31U3ML'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_31U3ML%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_31U3ML%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_31U3ML%10), 8, 16 + (SEED_31U3ML%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_31U3ML%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem H8ZIED)", "completion": "-- ServerScriptService/Horror/HideSystem_H8ZIED.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_H8ZIED = 235836\nlocal UNIQUE_NAME = 'HideSystem_H8ZIED'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_H8ZIED%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_H8ZIED_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 290C72)", "completion": "-- ServerScriptService/Horror/Ritual_290C72.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_290C72 = 260496\nlocal UNIQUE_NAME = 'Ritual_290C72'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_290C72%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 1G4MVZ)", "completion": "-- ServerScriptService/Horror/ProcRooms_1G4MVZ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1G4MVZ = 64048\nlocal UNIQUE_NAME = 'ProcRooms_1G4MVZ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1G4MVZ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_1G4MVZ%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_1G4MVZ%10), 8, 16 + (SEED_1G4MVZ%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_1G4MVZ%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche C76JWX)", "completion": "-- ServerScriptService/Horror/Psyche_C76JWX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_C76JWX = 455768\nlocal UNIQUE_NAME = 'Psyche_C76JWX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_C76JWX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_C76JWX%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem DZ75LI)", "completion": "-- ServerScriptService/Horror/HideSystem_DZ75LI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DZ75LI = 90645\nlocal UNIQUE_NAME = 'HideSystem_DZ75LI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DZ75LI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_DZ75LI_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares LPZT0S)", "completion": "-- ServerScriptService/Horror/NetScares_LPZT0S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LPZT0S = 16428\nlocal UNIQUE_NAME = 'NetScares_LPZT0S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LPZT0S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_LPZT0S'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases XV0KN1)", "completion": "-- ServerScriptService/Horror/BossPhases_XV0KN1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XV0KN1 = 61766\nlocal UNIQUE_NAME = 'BossPhases_XV0KN1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XV0KN1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_XV0KN1+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI O1H7NE)", "completion": "-- ServerScriptService/Horror/MonsterAI_O1H7NE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O1H7NE = 184746\nlocal UNIQUE_NAME = 'MonsterAI_O1H7NE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O1H7NE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_O1H7NE%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares G6JE8W)", "completion": "-- ServerScriptService/Horror/NetScares_G6JE8W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G6JE8W = 354609\nlocal UNIQUE_NAME = 'NetScares_G6JE8W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G6JE8W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_G6JE8W'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche HLX4VB)", "completion": "-- ServerScriptService/Horror/Psyche_HLX4VB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HLX4VB = 548307\nlocal UNIQUE_NAME = 'Psyche_HLX4VB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HLX4VB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_HLX4VB%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 29OIEM)", "completion": "-- ServerScriptService/Horror/Ritual_29OIEM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_29OIEM = 68253\nlocal UNIQUE_NAME = 'Ritual_29OIEM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_29OIEM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting TNTO1J)", "completion": "-- ServerScriptService/Horror/FearLighting_TNTO1J.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TNTO1J = 560348\nlocal UNIQUE_NAME = 'FearLighting_TNTO1J'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TNTO1J%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_TNTO1J%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual BUP3P7)", "completion": "-- ServerScriptService/Horror/Ritual_BUP3P7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BUP3P7 = 368374\nlocal UNIQUE_NAME = 'Ritual_BUP3P7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BUP3P7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms H5UF6B)", "completion": "-- ServerScriptService/Horror/ProcRooms_H5UF6B.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_H5UF6B = 454120\nlocal UNIQUE_NAME = 'ProcRooms_H5UF6B'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_H5UF6B%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_H5UF6B%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_H5UF6B%10), 8, 16 + (SEED_H5UF6B%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_H5UF6B%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 1OLF3E)", "completion": "-- ServerScriptService/Horror/Ritual_1OLF3E.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1OLF3E = 269921\nlocal UNIQUE_NAME = 'Ritual_1OLF3E'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1OLF3E%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem VQZNSY)", "completion": "-- ServerScriptService/Horror/HideSystem_VQZNSY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VQZNSY = 980332\nlocal UNIQUE_NAME = 'HideSystem_VQZNSY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VQZNSY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_VQZNSY_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI OSL0VX)", "completion": "-- ServerScriptService/Horror/MonsterAI_OSL0VX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_OSL0VX = 242157\nlocal UNIQUE_NAME = 'MonsterAI_OSL0VX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_OSL0VX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_OSL0VX%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 4AK5IT)", "completion": "-- ServerScriptService/Horror/ProcRooms_4AK5IT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4AK5IT = 676045\nlocal UNIQUE_NAME = 'ProcRooms_4AK5IT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4AK5IT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_4AK5IT%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_4AK5IT%10), 8, 16 + (SEED_4AK5IT%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_4AK5IT%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 55B3LA)", "completion": "-- ServerScriptService/Horror/BossPhases_55B3LA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_55B3LA = 439324\nlocal UNIQUE_NAME = 'BossPhases_55B3LA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_55B3LA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_55B3LA+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual QY6W82)", "completion": "-- ServerScriptService/Horror/Ritual_QY6W82.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QY6W82 = 163641\nlocal UNIQUE_NAME = 'Ritual_QY6W82'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QY6W82%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 2MKRWL)", "completion": "-- ServerScriptService/Horror/HideSystem_2MKRWL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2MKRWL = 620040\nlocal UNIQUE_NAME = 'HideSystem_2MKRWL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2MKRWL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_2MKRWL_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker H8PG36)", "completion": "-- ServerScriptService/Horror/NoiseStalker_H8PG36.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_H8PG36 = 200831\nlocal UNIQUE_NAME = 'NoiseStalker_H8PG36'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_H8PG36%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_H8PG36%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 41TBQD)", "completion": "-- ServerScriptService/Horror/FearLighting_41TBQD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_41TBQD = 59775\nlocal UNIQUE_NAME = 'FearLighting_41TBQD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_41TBQD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_41TBQD%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 228JM5)", "completion": "-- ServerScriptService/Horror/MonsterAI_228JM5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_228JM5 = 459214\nlocal UNIQUE_NAME = 'MonsterAI_228JM5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_228JM5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_228JM5%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 9WO2AE)", "completion": "-- ServerScriptService/Horror/MonsterAI_9WO2AE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9WO2AE = 536938\nlocal UNIQUE_NAME = 'MonsterAI_9WO2AE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9WO2AE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_9WO2AE%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 4YLL8N)", "completion": "-- ServerScriptService/Horror/FearLighting_4YLL8N.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4YLL8N = 22339\nlocal UNIQUE_NAME = 'FearLighting_4YLL8N'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4YLL8N%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_4YLL8N%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases LKPR85)", "completion": "-- ServerScriptService/Horror/BossPhases_LKPR85.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LKPR85 = 860986\nlocal UNIQUE_NAME = 'BossPhases_LKPR85'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LKPR85%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_LKPR85+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem PTH8XQ)", "completion": "-- ServerScriptService/Horror/HideSystem_PTH8XQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PTH8XQ = 859935\nlocal UNIQUE_NAME = 'HideSystem_PTH8XQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PTH8XQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_PTH8XQ_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting Z0FGZF)", "completion": "-- ServerScriptService/Horror/FearLighting_Z0FGZF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Z0FGZF = 112182\nlocal UNIQUE_NAME = 'FearLighting_Z0FGZF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Z0FGZF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_Z0FGZF%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting SL0HE2)", "completion": "-- ServerScriptService/Horror/FearLighting_SL0HE2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SL0HE2 = 65636\nlocal UNIQUE_NAME = 'FearLighting_SL0HE2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SL0HE2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_SL0HE2%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms AQPR7S)", "completion": "-- ServerScriptService/Horror/ProcRooms_AQPR7S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AQPR7S = 199367\nlocal UNIQUE_NAME = 'ProcRooms_AQPR7S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AQPR7S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_AQPR7S%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_AQPR7S%10), 8, 16 + (SEED_AQPR7S%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_AQPR7S%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms LMPAC8)", "completion": "-- ServerScriptService/Horror/ProcRooms_LMPAC8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LMPAC8 = 22731\nlocal UNIQUE_NAME = 'ProcRooms_LMPAC8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LMPAC8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_LMPAC8%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_LMPAC8%10), 8, 16 + (SEED_LMPAC8%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_LMPAC8%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 6F00GR)", "completion": "-- ServerScriptService/Horror/FearLighting_6F00GR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6F00GR = 346338\nlocal UNIQUE_NAME = 'FearLighting_6F00GR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6F00GR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_6F00GR%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 1VSZ49)", "completion": "-- ServerScriptService/Horror/ProcRooms_1VSZ49.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1VSZ49 = 65666\nlocal UNIQUE_NAME = 'ProcRooms_1VSZ49'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1VSZ49%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_1VSZ49%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_1VSZ49%10), 8, 16 + (SEED_1VSZ49%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_1VSZ49%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 1BLEUN)", "completion": "-- ServerScriptService/Horror/BossPhases_1BLEUN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1BLEUN = 579150\nlocal UNIQUE_NAME = 'BossPhases_1BLEUN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1BLEUN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_1BLEUN+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 2D1NGY)", "completion": "-- ServerScriptService/Horror/HideSystem_2D1NGY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2D1NGY = 269839\nlocal UNIQUE_NAME = 'HideSystem_2D1NGY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2D1NGY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_2D1NGY_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche S6K2R6)", "completion": "-- ServerScriptService/Horror/Psyche_S6K2R6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S6K2R6 = 954217\nlocal UNIQUE_NAME = 'Psyche_S6K2R6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S6K2R6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_S6K2R6%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms M2JWHX)", "completion": "-- ServerScriptService/Horror/ProcRooms_M2JWHX.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_M2JWHX = 375250\nlocal UNIQUE_NAME = 'ProcRooms_M2JWHX'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_M2JWHX%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_M2JWHX%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_M2JWHX%10), 8, 16 + (SEED_M2JWHX%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_M2JWHX%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares F00563)", "completion": "-- ServerScriptService/Horror/NetScares_F00563.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_F00563 = 492803\nlocal UNIQUE_NAME = 'NetScares_F00563'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_F00563%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_F00563'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 93R0K1)", "completion": "-- ServerScriptService/Horror/NetScares_93R0K1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_93R0K1 = 993479\nlocal UNIQUE_NAME = 'NetScares_93R0K1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_93R0K1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_93R0K1'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 83O3S4)", "completion": "-- ServerScriptService/Horror/Psyche_83O3S4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_83O3S4 = 145812\nlocal UNIQUE_NAME = 'Psyche_83O3S4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_83O3S4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_83O3S4%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 5PI8TT)", "completion": "-- ServerScriptService/Horror/BossPhases_5PI8TT.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5PI8TT = 363098\nlocal UNIQUE_NAME = 'BossPhases_5PI8TT'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5PI8TT%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_5PI8TT+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual V9A9FE)", "completion": "-- ServerScriptService/Horror/Ritual_V9A9FE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V9A9FE = 683134\nlocal UNIQUE_NAME = 'Ritual_V9A9FE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V9A9FE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker S0UWVR)", "completion": "-- ServerScriptService/Horror/NoiseStalker_S0UWVR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_S0UWVR = 797213\nlocal UNIQUE_NAME = 'NoiseStalker_S0UWVR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_S0UWVR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_S0UWVR%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual XBSIT3)", "completion": "-- ServerScriptService/Horror/Ritual_XBSIT3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XBSIT3 = 918442\nlocal UNIQUE_NAME = 'Ritual_XBSIT3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XBSIT3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual X7A8GU)", "completion": "-- ServerScriptService/Horror/Ritual_X7A8GU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_X7A8GU = 694768\nlocal UNIQUE_NAME = 'Ritual_X7A8GU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_X7A8GU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms SFQCG3)", "completion": "-- ServerScriptService/Horror/ProcRooms_SFQCG3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_SFQCG3 = 145024\nlocal UNIQUE_NAME = 'ProcRooms_SFQCG3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_SFQCG3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_SFQCG3%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_SFQCG3%10), 8, 16 + (SEED_SFQCG3%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_SFQCG3%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI PTGEUH)", "completion": "-- ServerScriptService/Horror/MonsterAI_PTGEUH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PTGEUH = 806255\nlocal UNIQUE_NAME = 'MonsterAI_PTGEUH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PTGEUH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_PTGEUH%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms NYN9QC)", "completion": "-- ServerScriptService/Horror/ProcRooms_NYN9QC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NYN9QC = 620379\nlocal UNIQUE_NAME = 'ProcRooms_NYN9QC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NYN9QC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_NYN9QC%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_NYN9QC%10), 8, 16 + (SEED_NYN9QC%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_NYN9QC%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting E0VT04)", "completion": "-- ServerScriptService/Horror/FearLighting_E0VT04.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_E0VT04 = 810103\nlocal UNIQUE_NAME = 'FearLighting_E0VT04'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_E0VT04%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_E0VT04%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem ZCSVIG)", "completion": "-- ServerScriptService/Horror/HideSystem_ZCSVIG.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ZCSVIG = 452162\nlocal UNIQUE_NAME = 'HideSystem_ZCSVIG'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ZCSVIG%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_ZCSVIG_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI Y0YDNY)", "completion": "-- ServerScriptService/Horror/MonsterAI_Y0YDNY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Y0YDNY = 993185\nlocal UNIQUE_NAME = 'MonsterAI_Y0YDNY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Y0YDNY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_Y0YDNY%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 7SPIUJ)", "completion": "-- ServerScriptService/Horror/NetScares_7SPIUJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7SPIUJ = 566614\nlocal UNIQUE_NAME = 'NetScares_7SPIUJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7SPIUJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_7SPIUJ'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI EFCUY2)", "completion": "-- ServerScriptService/Horror/MonsterAI_EFCUY2.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EFCUY2 = 794790\nlocal UNIQUE_NAME = 'MonsterAI_EFCUY2'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EFCUY2%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_EFCUY2%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem MWZKTW)", "completion": "-- ServerScriptService/Horror/HideSystem_MWZKTW.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MWZKTW = 810900\nlocal UNIQUE_NAME = 'HideSystem_MWZKTW'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MWZKTW%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_MWZKTW_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting V095ES)", "completion": "-- ServerScriptService/Horror/FearLighting_V095ES.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V095ES = 116494\nlocal UNIQUE_NAME = 'FearLighting_V095ES'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V095ES%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_V095ES%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses BCZ6TQ)", "completion": "-- ServerScriptService/Horror/InventoryFuses_BCZ6TQ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BCZ6TQ = 973600\nlocal UNIQUE_NAME = 'InventoryFuses_BCZ6TQ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BCZ6TQ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_BCZ6TQ_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses KTQ90T)", "completion": "-- ServerScriptService/Horror/InventoryFuses_KTQ90T.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KTQ90T = 182547\nlocal UNIQUE_NAME = 'InventoryFuses_KTQ90T'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KTQ90T%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_KTQ90T_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms DIDHSD)", "completion": "-- ServerScriptService/Horror/ProcRooms_DIDHSD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DIDHSD = 478818\nlocal UNIQUE_NAME = 'ProcRooms_DIDHSD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DIDHSD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_DIDHSD%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_DIDHSD%10), 8, 16 + (SEED_DIDHSD%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_DIDHSD%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 9E8JPF)", "completion": "-- ServerScriptService/Horror/NoiseStalker_9E8JPF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9E8JPF = 144771\nlocal UNIQUE_NAME = 'NoiseStalker_9E8JPF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9E8JPF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_9E8JPF%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem IMT7V7)", "completion": "-- ServerScriptService/Horror/HideSystem_IMT7V7.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IMT7V7 = 25601\nlocal UNIQUE_NAME = 'HideSystem_IMT7V7'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IMT7V7%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_IMT7V7_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 1XKS9G)", "completion": "-- ServerScriptService/Horror/MonsterAI_1XKS9G.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1XKS9G = 586289\nlocal UNIQUE_NAME = 'MonsterAI_1XKS9G'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1XKS9G%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_1XKS9G%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses H66BIA)", "completion": "-- ServerScriptService/Horror/InventoryFuses_H66BIA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_H66BIA = 695069\nlocal UNIQUE_NAME = 'InventoryFuses_H66BIA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_H66BIA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_H66BIA_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms AG72V3)", "completion": "-- ServerScriptService/Horror/ProcRooms_AG72V3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_AG72V3 = 516889\nlocal UNIQUE_NAME = 'ProcRooms_AG72V3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_AG72V3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_AG72V3%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_AG72V3%10), 8, 16 + (SEED_AG72V3%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_AG72V3%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI UI2U89)", "completion": "-- ServerScriptService/Horror/MonsterAI_UI2U89.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UI2U89 = 787556\nlocal UNIQUE_NAME = 'MonsterAI_UI2U89'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UI2U89%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_UI2U89%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker HDWQJ3)", "completion": "-- ServerScriptService/Horror/NoiseStalker_HDWQJ3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HDWQJ3 = 639530\nlocal UNIQUE_NAME = 'NoiseStalker_HDWQJ3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HDWQJ3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_HDWQJ3%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI D3L0Z3)", "completion": "-- ServerScriptService/Horror/MonsterAI_D3L0Z3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_D3L0Z3 = 763933\nlocal UNIQUE_NAME = 'MonsterAI_D3L0Z3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_D3L0Z3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_D3L0Z3%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms PGWA0Y)", "completion": "-- ServerScriptService/Horror/ProcRooms_PGWA0Y.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PGWA0Y = 882810\nlocal UNIQUE_NAME = 'ProcRooms_PGWA0Y'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PGWA0Y%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_PGWA0Y%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_PGWA0Y%10), 8, 16 + (SEED_PGWA0Y%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_PGWA0Y%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 7V8DAI)", "completion": "-- ServerScriptService/Horror/HideSystem_7V8DAI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7V8DAI = 372062\nlocal UNIQUE_NAME = 'HideSystem_7V8DAI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7V8DAI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_7V8DAI_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 8XWCHM)", "completion": "-- ServerScriptService/Horror/InventoryFuses_8XWCHM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8XWCHM = 749411\nlocal UNIQUE_NAME = 'InventoryFuses_8XWCHM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8XWCHM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_8XWCHM_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche P4NAEI)", "completion": "-- ServerScriptService/Horror/Psyche_P4NAEI.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_P4NAEI = 34659\nlocal UNIQUE_NAME = 'Psyche_P4NAEI'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_P4NAEI%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_P4NAEI%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares DCL631)", "completion": "-- ServerScriptService/Horror/NetScares_DCL631.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DCL631 = 162741\nlocal UNIQUE_NAME = 'NetScares_DCL631'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DCL631%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_DCL631'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting XEB2AD)", "completion": "-- ServerScriptService/Horror/FearLighting_XEB2AD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XEB2AD = 39722\nlocal UNIQUE_NAME = 'FearLighting_XEB2AD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XEB2AD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_XEB2AD%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 35M0WU)", "completion": "-- ServerScriptService/Horror/NetScares_35M0WU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_35M0WU = 692436\nlocal UNIQUE_NAME = 'NetScares_35M0WU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_35M0WU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_35M0WU'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 1Z59MB)", "completion": "-- ServerScriptService/Horror/BossPhases_1Z59MB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1Z59MB = 47710\nlocal UNIQUE_NAME = 'BossPhases_1Z59MB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1Z59MB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_1Z59MB+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual KEQB13)", "completion": "-- ServerScriptService/Horror/Ritual_KEQB13.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KEQB13 = 562699\nlocal UNIQUE_NAME = 'Ritual_KEQB13'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KEQB13%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares NZZUOR)", "completion": "-- ServerScriptService/Horror/NetScares_NZZUOR.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NZZUOR = 778583\nlocal UNIQUE_NAME = 'NetScares_NZZUOR'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NZZUOR%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_NZZUOR'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker VYP5BE)", "completion": "-- ServerScriptService/Horror/NoiseStalker_VYP5BE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VYP5BE = 162346\nlocal UNIQUE_NAME = 'NoiseStalker_VYP5BE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VYP5BE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_VYP5BE%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 7HCHC3)", "completion": "-- ServerScriptService/Horror/NetScares_7HCHC3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7HCHC3 = 760778\nlocal UNIQUE_NAME = 'NetScares_7HCHC3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7HCHC3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_7HCHC3'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI V577D0)", "completion": "-- ServerScriptService/Horror/MonsterAI_V577D0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_V577D0 = 310028\nlocal UNIQUE_NAME = 'MonsterAI_V577D0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_V577D0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_V577D0%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual T2WK08)", "completion": "-- ServerScriptService/Horror/Ritual_T2WK08.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_T2WK08 = 125407\nlocal UNIQUE_NAME = 'Ritual_T2WK08'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_T2WK08%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker FT7XK1)", "completion": "-- ServerScriptService/Horror/NoiseStalker_FT7XK1.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FT7XK1 = 971805\nlocal UNIQUE_NAME = 'NoiseStalker_FT7XK1'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FT7XK1%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_FT7XK1%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 7ZWQTD)", "completion": "-- ServerScriptService/Horror/ProcRooms_7ZWQTD.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_7ZWQTD = 360540\nlocal UNIQUE_NAME = 'ProcRooms_7ZWQTD'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_7ZWQTD%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_7ZWQTD%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_7ZWQTD%10), 8, 16 + (SEED_7ZWQTD%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_7ZWQTD%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual XSSBUP)", "completion": "-- ServerScriptService/Horror/Ritual_XSSBUP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XSSBUP = 840331\nlocal UNIQUE_NAME = 'Ritual_XSSBUP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XSSBUP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker CWMBT4)", "completion": "-- ServerScriptService/Horror/NoiseStalker_CWMBT4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CWMBT4 = 269811\nlocal UNIQUE_NAME = 'NoiseStalker_CWMBT4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CWMBT4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_CWMBT4%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares UI5ZKC)", "completion": "-- ServerScriptService/Horror/NetScares_UI5ZKC.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UI5ZKC = 379938\nlocal UNIQUE_NAME = 'NetScares_UI5ZKC'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UI5ZKC%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_UI5ZKC'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche NLWHZL)", "completion": "-- ServerScriptService/Horror/Psyche_NLWHZL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_NLWHZL = 987155\nlocal UNIQUE_NAME = 'Psyche_NLWHZL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_NLWHZL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_NLWHZL%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual O6FKE9)", "completion": "-- ServerScriptService/Horror/Ritual_O6FKE9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O6FKE9 = 860131\nlocal UNIQUE_NAME = 'Ritual_O6FKE9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O6FKE9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI EZ9U4Y)", "completion": "-- ServerScriptService/Horror/MonsterAI_EZ9U4Y.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_EZ9U4Y = 689725\nlocal UNIQUE_NAME = 'MonsterAI_EZ9U4Y'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_EZ9U4Y%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_EZ9U4Y%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting PQYW4F)", "completion": "-- ServerScriptService/Horror/FearLighting_PQYW4F.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PQYW4F = 117786\nlocal UNIQUE_NAME = 'FearLighting_PQYW4F'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PQYW4F%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_PQYW4F%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases UCTX8C)", "completion": "-- ServerScriptService/Horror/BossPhases_UCTX8C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UCTX8C = 269922\nlocal UNIQUE_NAME = 'BossPhases_UCTX8C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UCTX8C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_UCTX8C+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual WN69OO)", "completion": "-- ServerScriptService/Horror/Ritual_WN69OO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WN69OO = 571410\nlocal UNIQUE_NAME = 'Ritual_WN69OO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WN69OO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI I0PYPA)", "completion": "-- ServerScriptService/Horror/MonsterAI_I0PYPA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_I0PYPA = 222618\nlocal UNIQUE_NAME = 'MonsterAI_I0PYPA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_I0PYPA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_I0PYPA%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 88B00S)", "completion": "-- ServerScriptService/Horror/HideSystem_88B00S.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_88B00S = 517502\nlocal UNIQUE_NAME = 'HideSystem_88B00S'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_88B00S%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_88B00S_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 138MTA)", "completion": "-- ServerScriptService/Horror/InventoryFuses_138MTA.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_138MTA = 955981\nlocal UNIQUE_NAME = 'InventoryFuses_138MTA'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_138MTA%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_138MTA_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases MYPDHH)", "completion": "-- ServerScriptService/Horror/BossPhases_MYPDHH.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_MYPDHH = 876733\nlocal UNIQUE_NAME = 'BossPhases_MYPDHH'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_MYPDHH%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_MYPDHH+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses IULEY0)", "completion": "-- ServerScriptService/Horror/InventoryFuses_IULEY0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_IULEY0 = 499128\nlocal UNIQUE_NAME = 'InventoryFuses_IULEY0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_IULEY0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_IULEY0_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting JRZAP0)", "completion": "-- ServerScriptService/Horror/FearLighting_JRZAP0.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_JRZAP0 = 742591\nlocal UNIQUE_NAME = 'FearLighting_JRZAP0'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_JRZAP0%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_JRZAP0%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases UEIYSK)", "completion": "-- ServerScriptService/Horror/BossPhases_UEIYSK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UEIYSK = 582276\nlocal UNIQUE_NAME = 'BossPhases_UEIYSK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UEIYSK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_UEIYSK+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms DGZOO9)", "completion": "-- ServerScriptService/Horror/ProcRooms_DGZOO9.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DGZOO9 = 529317\nlocal UNIQUE_NAME = 'ProcRooms_DGZOO9'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DGZOO9%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_DGZOO9%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_DGZOO9%10), 8, 16 + (SEED_DGZOO9%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_DGZOO9%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares R12MZ8)", "completion": "-- ServerScriptService/Horror/NetScares_R12MZ8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_R12MZ8 = 376014\nlocal UNIQUE_NAME = 'NetScares_R12MZ8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_R12MZ8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_R12MZ8'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker HFR2PF)", "completion": "-- ServerScriptService/Horror/NoiseStalker_HFR2PF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HFR2PF = 295153\nlocal UNIQUE_NAME = 'NoiseStalker_HFR2PF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HFR2PF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_HFR2PF%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem ITOL98)", "completion": "-- ServerScriptService/Horror/HideSystem_ITOL98.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ITOL98 = 993486\nlocal UNIQUE_NAME = 'HideSystem_ITOL98'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ITOL98%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_ITOL98_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares G8PWVE)", "completion": "-- ServerScriptService/Horror/NetScares_G8PWVE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_G8PWVE = 68976\nlocal UNIQUE_NAME = 'NetScares_G8PWVE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_G8PWVE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_G8PWVE'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche F8CZ89)", "completion": "-- ServerScriptService/Horror/Psyche_F8CZ89.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_F8CZ89 = 672760\nlocal UNIQUE_NAME = 'Psyche_F8CZ89'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_F8CZ89%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_F8CZ89%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 9S5OCO)", "completion": "-- ServerScriptService/Horror/NoiseStalker_9S5OCO.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_9S5OCO = 371360\nlocal UNIQUE_NAME = 'NoiseStalker_9S5OCO'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_9S5OCO%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_9S5OCO%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem KTD8TN)", "completion": "-- ServerScriptService/Horror/HideSystem_KTD8TN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KTD8TN = 364813\nlocal UNIQUE_NAME = 'HideSystem_KTD8TN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KTD8TN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_KTD8TN_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 6T6SMB)", "completion": "-- ServerScriptService/Horror/ProcRooms_6T6SMB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_6T6SMB = 769995\nlocal UNIQUE_NAME = 'ProcRooms_6T6SMB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_6T6SMB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_6T6SMB%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_6T6SMB%10), 8, 16 + (SEED_6T6SMB%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_6T6SMB%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 3LU0HY)", "completion": "-- ServerScriptService/Horror/NoiseStalker_3LU0HY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3LU0HY = 797147\nlocal UNIQUE_NAME = 'NoiseStalker_3LU0HY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3LU0HY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_3LU0HY%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual UA1CRN)", "completion": "-- ServerScriptService/Horror/Ritual_UA1CRN.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UA1CRN = 55010\nlocal UNIQUE_NAME = 'Ritual_UA1CRN'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UA1CRN%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI GMDD5W)", "completion": "-- ServerScriptService/Horror/MonsterAI_GMDD5W.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GMDD5W = 672672\nlocal UNIQUE_NAME = 'MonsterAI_GMDD5W'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GMDD5W%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_GMDD5W%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting XKM754)", "completion": "-- ServerScriptService/Horror/FearLighting_XKM754.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XKM754 = 693340\nlocal UNIQUE_NAME = 'FearLighting_XKM754'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XKM754%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_XKM754%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares DOH7I5)", "completion": "-- ServerScriptService/Horror/NetScares_DOH7I5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DOH7I5 = 353418\nlocal UNIQUE_NAME = 'NetScares_DOH7I5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DOH7I5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_DOH7I5'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares XWIIKL)", "completion": "-- ServerScriptService/Horror/NetScares_XWIIKL.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_XWIIKL = 375139\nlocal UNIQUE_NAME = 'NetScares_XWIIKL'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_XWIIKL%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_XWIIKL'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms 5BLWOF)", "completion": "-- ServerScriptService/Horror/ProcRooms_5BLWOF.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_5BLWOF = 898906\nlocal UNIQUE_NAME = 'ProcRooms_5BLWOF'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_5BLWOF%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_5BLWOF%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_5BLWOF%10), 8, 16 + (SEED_5BLWOF%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_5BLWOF%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual BL8WK3)", "completion": "-- ServerScriptService/Horror/Ritual_BL8WK3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_BL8WK3 = 390428\nlocal UNIQUE_NAME = 'Ritual_BL8WK3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_BL8WK3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual VZIY8C)", "completion": "-- ServerScriptService/Horror/Ritual_VZIY8C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_VZIY8C = 878067\nlocal UNIQUE_NAME = 'Ritual_VZIY8C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_VZIY8C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker 4NSLSS)", "completion": "-- ServerScriptService/Horror/NoiseStalker_4NSLSS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_4NSLSS = 698622\nlocal UNIQUE_NAME = 'NoiseStalker_4NSLSS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_4NSLSS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_4NSLSS%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses N3Q2V6)", "completion": "-- ServerScriptService/Horror/InventoryFuses_N3Q2V6.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_N3Q2V6 = 73423\nlocal UNIQUE_NAME = 'InventoryFuses_N3Q2V6'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_N3Q2V6%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_N3Q2V6_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares KUT9IY)", "completion": "-- ServerScriptService/Horror/NetScares_KUT9IY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KUT9IY = 565682\nlocal UNIQUE_NAME = 'NetScares_KUT9IY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KUT9IY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_KUT9IY'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual 8MW8PP)", "completion": "-- ServerScriptService/Horror/Ritual_8MW8PP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8MW8PP = 173663\nlocal UNIQUE_NAME = 'Ritual_8MW8PP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8MW8PP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche DD83I8)", "completion": "-- ServerScriptService/Horror/Psyche_DD83I8.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_DD83I8 = 729495\nlocal UNIQUE_NAME = 'Psyche_DD83I8'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_DD83I8%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_DD83I8%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting WXKEDK)", "completion": "-- ServerScriptService/Horror/FearLighting_WXKEDK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_WXKEDK = 5806\nlocal UNIQUE_NAME = 'FearLighting_WXKEDK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_WXKEDK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_WXKEDK%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI GRU50J)", "completion": "-- ServerScriptService/Horror/MonsterAI_GRU50J.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_GRU50J = 409660\nlocal UNIQUE_NAME = 'MonsterAI_GRU50J'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_GRU50J%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_GRU50J%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem Z9CFPK)", "completion": "-- ServerScriptService/Horror/HideSystem_Z9CFPK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_Z9CFPK = 94373\nlocal UNIQUE_NAME = 'HideSystem_Z9CFPK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_Z9CFPK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_Z9CFPK_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 21046N)", "completion": "-- ServerScriptService/Horror/NetScares_21046N.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_21046N = 610426\nlocal UNIQUE_NAME = 'NetScares_21046N'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_21046N%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_21046N'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting FYGNZS)", "completion": "-- ServerScriptService/Horror/FearLighting_FYGNZS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FYGNZS = 289053\nlocal UNIQUE_NAME = 'FearLighting_FYGNZS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FYGNZS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_FYGNZS%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI FXNRU5)", "completion": "-- ServerScriptService/Horror/MonsterAI_FXNRU5.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_FXNRU5 = 855021\nlocal UNIQUE_NAME = 'MonsterAI_FXNRU5'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_FXNRU5%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_FXNRU5%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 1SWLQE)", "completion": "-- ServerScriptService/Horror/InventoryFuses_1SWLQE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1SWLQE = 981380\nlocal UNIQUE_NAME = 'InventoryFuses_1SWLQE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1SWLQE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_1SWLQE_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms O2J87Y)", "completion": "-- ServerScriptService/Horror/ProcRooms_O2J87Y.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_O2J87Y = 940404\nlocal UNIQUE_NAME = 'ProcRooms_O2J87Y'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_O2J87Y%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_O2J87Y%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_O2J87Y%10), 8, 16 + (SEED_O2J87Y%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_O2J87Y%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker UMM3HJ)", "completion": "-- ServerScriptService/Horror/NoiseStalker_UMM3HJ.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_UMM3HJ = 351732\nlocal UNIQUE_NAME = 'NoiseStalker_UMM3HJ'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_UMM3HJ%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_UMM3HJ%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build ritual objectives with randomized steps and dynamic audio cues — use Fractured modules and multiplayer-safe patterns (Ritual CQS44J)", "completion": "-- ServerScriptService/Horror/Ritual_CQS44J.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_CQS44J = 112789\nlocal UNIQUE_NAME = 'Ritual_CQS44J'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_CQS44J%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal steps={'draw','offer','chant','ignite','seal'}; local idx=1\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.005 then idx = math.clamp(idx+1,1,#steps) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 3MYBNM)", "completion": "-- ServerScriptService/Horror/Psyche_3MYBNM.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3MYBNM = 999043\nlocal UNIQUE_NAME = 'Psyche_3MYBNM'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3MYBNM%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_3MYBNM%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Build noise-aware stalking AI integrated with footstep and door sounds — use Fractured modules and multiplayer-safe patterns (NoiseStalker LF1A0J)", "completion": "-- ServerScriptService/Horror/NoiseStalker_LF1A0J.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_LF1A0J = 334707\nlocal UNIQUE_NAME = 'NoiseStalker_LF1A0J'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_LF1A0J%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal last = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local v = hrp.Velocity.Magnitude\n            if v > 2 and (tick()-last) > (0.2 + (SEED_LF1A0J%5)/20) then\n                last = tick()\n                emitSfx(hrp, 'rbxassetid://13114759', 0.25)\n            end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares KHYTDP)", "completion": "-- ServerScriptService/Horror/NetScares_KHYTDP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_KHYTDP = 880929\nlocal UNIQUE_NAME = 'NetScares_KHYTDP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_KHYTDP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_KHYTDP'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Add inventory with keys, tools, single-use fuses, and breaker repair — use Fractured modules and multiplayer-safe patterns (InventoryFuses 775QMB)", "completion": "-- ServerScriptService/Horror/InventoryFuses_775QMB.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_775QMB = 616183\nlocal UNIQUE_NAME = 'InventoryFuses_775QMB'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_775QMB%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal keys = {}; for i=1,2 do local k=Instance.new('Tool'); k.Name='Key_775QMB_'..i; k.Parent=game:GetService('StarterPack'); keys[#keys+1]=k end\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares 8GT5FK)", "completion": "-- ServerScriptService/Horror/NetScares_8GT5FK.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_8GT5FK = 450832\nlocal UNIQUE_NAME = 'NetScares_8GT5FK'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_8GT5FK%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_8GT5FK'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases ATKC66)", "completion": "-- ServerScriptService/Horror/BossPhases_ATKC66.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ATKC66 = 821100\nlocal UNIQUE_NAME = 'BossPhases_ATKC66'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ATKC66%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_ATKC66+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem D05WD3)", "completion": "-- ServerScriptService/Horror/HideSystem_D05WD3.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_D05WD3 = 862022\nlocal UNIQUE_NAME = 'HideSystem_D05WD3'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_D05WD3%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_D05WD3_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 2CDIRY)", "completion": "-- ServerScriptService/Horror/Psyche_2CDIRY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_2CDIRY = 255449\nlocal UNIQUE_NAME = 'Psyche_2CDIRY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_2CDIRY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_2CDIRY%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI TIRCRP)", "completion": "-- ServerScriptService/Horror/MonsterAI_TIRCRP.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_TIRCRP = 613223\nlocal UNIQUE_NAME = 'MonsterAI_TIRCRP'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_TIRCRP%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_TIRCRP%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Design procedural rooms with event director hooks and power outages — use Fractured modules and multiplayer-safe patterns (ProcRooms D7WTHS)", "completion": "-- ServerScriptService/Horror/ProcRooms_D7WTHS.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_D7WTHS = 230391\nlocal UNIQUE_NAME = 'ProcRooms_D7WTHS'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_D7WTHS%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nfor i=1, (6 + (SEED_D7WTHS%4)) do\n    local p = Instance.new('Part', workspace)\n    p.Anchored=true; p.Material=Enum.Material.Slate\n    p.Size=Vector3.new(16 + (SEED_D7WTHS%10), 8, 16 + (SEED_D7WTHS%12))\n    p.Position = Vector3.new(i*24, 0, (SEED_D7WTHS%7)*3)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Generate adaptive monster AI with states, stealth, and learning — use Fractured modules and multiplayer-safe patterns (MonsterAI 23Z75C)", "completion": "-- ServerScriptService/Horror/MonsterAI_23Z75C.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_23Z75C = 672875\nlocal UNIQUE_NAME = 'MonsterAI_23Z75C'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_23Z75C%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal monster = workspace:FindFirstChild('Monster') or Instance.new('Model', workspace)\nlocal root = (monster:FindFirstChild('HumanoidRootPart')) or Instance.new('Part', monster)\nlocal hum = (monster:FindFirstChild('Humanoid')) or Instance.new('Humanoid', monster)\nlocal state = 'idle'\nlocal target = nil\nRunService.Heartbeat:Connect(function(dt)\n    if not target then\n        local nearest,dist= nil,1/0\n        for _,pl in ipairs(Players:GetPlayers()) do\n            local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n            if hrp then local d=(hrp.Position - root.Position).Magnitude; if d<dist then dist=d; nearest=pl end end\n        end\n        target = nearest\n    end\n    if target and target.Character and target.Character:FindFirstChild('HumanoidRootPart') then\n        local tp = target.Character.HumanoidRootPart.Position\n        hum.WalkSpeed = 10 + (SEED_23Z75C%7)\n        hum:MoveTo(tp + randomVec(3))\n        if (tp - root.Position).Magnitude < 5 then\n            emitSfx(target.Character.HumanoidRootPart, 'rbxassetid://9123931338', 0.6)\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche PFKS2L)", "completion": "-- ServerScriptService/Horror/Psyche_PFKS2L.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_PFKS2L = 167109\nlocal UNIQUE_NAME = 'Psyche_PFKS2L'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_PFKS2L%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_PFKS2L%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases ETMAIU)", "completion": "-- ServerScriptService/Horror/BossPhases_ETMAIU.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_ETMAIU = 63419\nlocal UNIQUE_NAME = 'BossPhases_ETMAIU'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_ETMAIU%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_ETMAIU+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create glitch and hallucination effects with UI overlays and camera sway — use Fractured modules and multiplayer-safe patterns (Psyche 3BQ13A)", "completion": "-- ServerScriptService/Horror/Psyche_3BQ13A.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3BQ13A = 760292\nlocal UNIQUE_NAME = 'Psyche_3BQ13A'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3BQ13A%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nRunService.Heartbeat:Connect(function(dt)\n    if math.random()<0.01 then Lighting.ColorShift_Top = Color3.fromRGB( SEED_3BQ13A%255, 0, 0 ) end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement multiplayer sync for scares via Net module and remote events — use Fractured modules and multiplayer-safe patterns (NetScares HQYRT4)", "completion": "-- ServerScriptService/Horror/NetScares_HQYRT4.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_HQYRT4 = 250854\nlocal UNIQUE_NAME = 'NetScares_HQYRT4'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_HQYRT4%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal RemoteFolder = Instance.new('Folder', ReplicatedStorage); RemoteFolder.Name='HorrorNet_HQYRT4'\nlocal Scare = Instance.new('RemoteEvent', RemoteFolder); Scare.Name='Scare'\nScare.OnServerEvent:Connect(function(pl)\n    for _,p in ipairs(Players:GetPlayers()) do if p~=pl then Scare:FireClient(p) end end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem 3H0Q10)", "completion": "-- ServerScriptService/Horror/HideSystem_3H0Q10.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_3H0Q10 = 226822\nlocal UNIQUE_NAME = 'HideSystem_3H0Q10'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_3H0Q10%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_3H0Q10_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create boss hunt phases with patrol, search, ambush, and retreat — use Fractured modules and multiplayer-safe patterns (BossPhases 1V7BLE)", "completion": "-- ServerScriptService/Horror/BossPhases_1V7BLE.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_1V7BLE = 635702\nlocal UNIQUE_NAME = 'BossPhases_1V7BLE'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_1V7BLE%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal phase=1\nRunService.Heartbeat:Connect(function(dt)\n    phase = 1 + ((SEED_1V7BLE+math.floor(tick()))%4)\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Implement hiding, vents, closets with breath and reveal mechanics — use Fractured modules and multiplayer-safe patterns (HideSystem QYY0KY)", "completion": "-- ServerScriptService/Horror/HideSystem_QYY0KY.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_QYY0KY = 64253\nlocal UNIQUE_NAME = 'HideSystem_QYY0KY'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_QYY0KY%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal spots = {}\nfor i=1, 3 do local s=Instance.new('Part', workspace); s.Anchored=true; s.Size=Vector3.new(4,4,4); s.Name='HideSpot_QYY0KY_'..i; spots[#spots+1]=s end\nfor _,spot in ipairs(spots) do\n    local prompt = Instance.new('ProximityPrompt', spot); prompt.ActionText='Hide';\n    prompt.Triggered:Connect(function(pl)\n        local c=pl.Character; if c and c.PrimaryPart then c:SetPrimaryPartCFrame(spot.CFrame * CFrame.new(0, 2, 0)) end\n    end)\nend\n\nreturn { name = UNIQUE_NAME }\n"}
{"prompt": "Create fear and lighting system that escalates tension in darkness — use Fractured modules and multiplayer-safe patterns (FearLighting 417Y3M)", "completion": "-- ServerScriptService/Horror/FearLighting_417Y3M.server.lua\nlocal Players = game:GetService('Players')\nlocal RunService = game:GetService('RunService')\nlocal ReplicatedStorage = game:GetService('ReplicatedStorage')\nlocal Lighting = game:GetService('Lighting')\nlocal TweenService = game:GetService('TweenService')\nlocal Fractured = ReplicatedStorage:FindFirstChild('Fractured') or ReplicatedStorage:WaitForChild('Fractured')\nlocal AudioController = require(Fractured:FindFirstChild('AudioController') or Fractured:WaitForChild('AudioController'))\nlocal UIBuilder = require(Fractured:FindFirstChild('UIBuilder') or Fractured:WaitForChild('UIBuilder'))\nlocal Config = require(Fractured:FindFirstChild('Config') or Fractured:WaitForChild('Config'))\n\n-- Seeded values per file to guarantee uniqueness\nlocal SEED_417Y3M = 438907\nlocal UNIQUE_NAME = 'FearLighting_417Y3M'\n\nlocal function randomVec(range)\n    return Vector3.new(math.random(-range,range),0,math.random(-range,range))\nend\n\n-- Core emit function uses AudioController pattern\nlocal function emitSfx(hrp, soundId, vol)\n    local sound = Instance.new('Sound')\n    sound.SoundId = soundId\n    sound.Volume = vol or 0.35\n    sound.RollOffMaxDistance = 28 + (SEED_417Y3M%12)\n    sound.Parent = hrp\n    sound:Play()\n    game.Debris:AddItem(sound, 8)\nend\n\n-- System logic\nlocal fear = 0\nRunService.Heartbeat:Connect(function(dt)\n    for _,pl in ipairs(Players:GetPlayers()) do\n        local c=pl.Character; local hrp=c and c:FindFirstChild('HumanoidRootPart')\n        if hrp then\n            local nearLight = Lighting.Brightness > 1 and 1 or 0\n            fear = math.clamp(fear + dt*(0.7 + (SEED_417Y3M%3)/10) - nearLight*dt*1.2, 0, 100)\n            if fear > 80 and math.random()<0.03 then emitSfx(hrp, 'rbxassetid://184368556', 0.4) end\n        end\n    end\nend)\n\nreturn { name = UNIQUE_NAME }\n"}
